{"version":3,"file":"css/56.3cba5603.css","mappings":"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CAEA,kCACE,0BACF,CAGA,yBACE,uBACE,YACF,CAEA,yBACE,YACF,CAEA,4BACE,qBAAsB,CACtB,iBACF,CAEA,yBACE,cAAe,CACf,kBACF,CAEA,wBACE,sBAAuB,CACvB,QACF,CAEA,4BACE,MAAO,CACP,cACF,CAEA,8BACE,yBACF,CAEA,gCACE,qBAAsB,CACtB,sBAAuB,CACvB,QACF,CAEA,kCACE,qBAAsB,CACtB,QAAS,CACT,kBACF,CAEA,iCACE,iBACF,CAGF,CChLA,+BACE,gBAAiB,CACjB,kDAA6D,CAC7D,YAAa,CACb,uEACF,CAGA,gCACE,YAAa,CACb,kBAAmB,CACnB,kBAAmB,CACnB,eAAgB,CAChB,gBAAiB,CACjB,iBACF,CAEA,2BACE,eAAiB,CACjB,WAAY,CACZ,iBAAkB,CAClB,kBAAmB,CACnB,cAAe,CACf,cAAe,CACf,iBAAkB,CAClB,oCAAyC,CACzC,6BACF,CAEA,iCACE,0BACF,CAEA,6BACE,cAAe,CACf,eAAgB,CAChB,aAAc,CACd,QACF,CAGA,kCACE,eAAgB,CAChB,aAAc,CACd,eAAiB,CACjB,kBAAmB,CACnB,YAAa,CACb,oCACF,CAEA,+BACE,kBAAmB,CACnB,iBACF,CAEA,8BACE,cAAe,CACf,eAAgB,CAChB,aAAc,CACd,iBACF,CAEA,kCACE,YAAa,CACb,sBAAuB,CACvB,QAAS,CACT,cACF,CAEA,6BACE,aAAc,CACd,eACF,CAEA,4BACE,aACF,CAGA,gCACE,cAAe,CACf,eAAgB,CAChB,aAAc,CACd,oBAAqB,CACrB,mBAAoB,CACpB,+BACF,CAGA,kGACE,kBACF,CAGA,8BACE,YAAa,CACb,wDAA2D,CAC3D,QACF,CAEA,6BACE,cAAe,CACf,6BACF,CAEA,mCACE,qBACF,CAEA,oCACE,YAAa,CACb,kDAA6D,CAC7D,uBAAwB,CACxB,uBAA2B,CAC3B,2BAA4B,CAC5B,kBAAmB,CACnB,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,cAAe,CACf,UAAY,CACZ,iBAAkB,CAClB,iBACF,CAMA,0DACE,oCACF,CAEA,8BACE,iBAAkB,CAClB,WAAY,CACZ,UAAW,CACX,yBAA8B,CAC9B,UAAY,CACZ,eAAgB,CAChB,kBAAmB,CACnB,cACF,CAGA,8BACE,YAAa,CACb,wDAA2D,CAC3D,QACF,CAEA,6BACE,6BACF,CAEA,mCACE,qBACF,CAEA,kCACE,iBAAkB,CAClB,YAAa,CACb,kBAAmB,CACnB,eAAgB,CAChB,cAAe,CACf,iBACF,CAEA,gCACE,UAAW,CACX,WAAY,CACZ,kDAA6D,CAC7D,uBAAwB,CACxB,uBAA2B,CAC3B,2BAA4B,CAC5B,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,cAAe,CACf,UACF,CAEA,gCACE,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,OAAQ,CACR,QAAS,CACT,yBAA8B,CAC9B,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,8BACF,CAEA,uDACE,yBACF,CAEA,+BACE,cAAe,CACf,UAAY,CACZ,oCAAyC,CACzC,6BACF,CAEA,sDACE,oBACF,CAEA,iCACE,iBAAkB,CAClB,UAAW,CACX,SAAU,CACV,yBAA8B,CAC9B,UAAY,CACZ,eAAgB,CAChB,iBAAkB,CAClB,cACF,CAGA,6BACE,cAAe,CACf,aAAc,CACd,kBAAmB,CACnB,iBAAkB,CAClB,eACF,CAEA,iCACE,cAAe,CACf,aAAc,CACd,iBAAkB,CAClB,aAAc,CACd,iBACF,CAGA,6BACE,YAAa,CACb,qBAAsB,CACtB,QACF,CAEA,6BACE,kBAAmB,CACnB,kBAAmB,CACnB,eAAgB,CAChB,iBACF,CAEA,mCACE,YACF,CAEA,+BACE,YAAa,CACb,kBAAmB,CACnB,QAAS,CACT,YACF,CAEA,2BACE,UAAW,CACX,WAAY,CACZ,iBAAkB,CAClB,WAAY,CACZ,kDAA6D,CAC7D,UAAY,CACZ,cAAe,CACf,cAAe,CACf,6BAA+B,CAC/B,aAAc,CACd,YAAa,CACb,kBAAmB,CACnB,sBACF,CAEA,iCACE,oBACF,CAEA,oCACE,UAAY,CACZ,kBAAmB,CACnB,cACF,CAEA,6BACE,MAAO,CACP,YAAa,CACb,qBAAsB,CACtB,OACF,CAEA,6BACE,cAAe,CACf,aAAc,CACd,eACF,CAEA,iCACE,YAAa,CACb,kBAAmB,CACnB,QACF,CAEA,+BACE,MAAO,CACP,UAAW,CACX,kBAAmB,CACnB,iBAAkB,CAClB,eACF,CAEA,gCACE,WAAY,CACZ,kDAA6D,CAC7D,iBAAkB,CAClB,yBACF,CAEA,+BACE,cAAe,CACf,aAAc,CACd,cAAe,CACf,gBACF,CAEA,iCACE,YAAa,CACb,kBAAmB,CACnB,QACF,CAEA,6BACE,UAAW,CACX,WAAY,CACZ,iBAAkB,CAClB,WAAY,CACZ,6BAAkC,CAClC,aAAc,CACd,cAAe,CACf,cAAe,CACf,uBAAyB,CACzB,YAAa,CACb,kBAAmB,CACnB,sBACF,CAEA,mCACE,6BAAkC,CAClC,oBACF,CAEA,iCACE,cAAe,CACf,aAAc,CACd,iBACF,CAGA,sCACE,kBACF,CAEA,oCACE,cAAe,CACf,eAAgB,CAChB,aAAc,CACd,QACF,CAGA,kCACE,kBAAmB,CACnB,YAAa,CACb,kBAAmB,CACnB,kBACF,CAEA,4BACE,YAAa,CACb,kBACF,CAEA,uCACE,eACF,CAEA,6BACE,eAAgB,CAChB,aAAc,CACd,WACF,CAEA,6BACE,aACF,CAGA,iCACE,YAAa,CACb,QAAS,CACT,sBACF,CAEA,wDACE,iBAAkB,CAClB,WAAY,CACZ,kBAAmB,CACnB,cAAe,CACf,cAAe,CACf,6BACF,CAEA,2BACE,kDAA6D,CAC7D,UACF,CAEA,6BACE,kDAA6D,CAC7D,UACF,CAEA,oEACE,0BACF,CAGA,4DACE,iBAAkB,CAClB,iBAAkB,CAClB,eAAgB,CAChB,aAAc,CACd,aACF,CAEA,+DACE,cAAe,CACf,kBACF,CAEA,4BACE,kDAA6D,CAC7D,UAAY,CACZ,WAAY,CACZ,iBAAkB,CAClB,kBAAmB,CACnB,cAAe,CACf,cAAe,CACf,eAAgB,CAChB,6BACF,CAEA,kCACE,0BACF,CAGA,8BACE,cAAe,CACf,KAAM,CACN,MAAO,CACP,OAAQ,CACR,QAAS,CACT,yBAA8B,CAC9B,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,YACF,CAEA,gCACE,iBAAkB,CAClB,cAAe,CACf,eACF,CAEA,8BACE,iBAAkB,CAClB,SAAU,CACV,OAAQ,CACR,eAAgB,CAChB,WAAY,CACZ,UAAY,CACZ,cAAe,CACf,cAAe,CACf,YACF,CAEA,+BACE,YAAa,CACb,kBAAmB,CACnB,QACF,CAEA,gCACE,iBACF,CAEA,wCACE,WAAY,CACZ,YAAa,CACb,eAAgB,CAChB,kBAAmB,CACnB,iBAAkB,CAClB,kBAAmB,CACnB,6BACF,CAEA,0CACE,UAAW,CACX,WAAY,CACZ,kDAA6D,CAC7D,uBAAwB,CACxB,uBAA2B,CAC3B,2BAA4B,CAC5B,kBAAmB,CACnB,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,cAAe,CACf,UAAY,CACZ,WAAY,CACZ,uBACF,CAEA,iDACE,eACF,CAEA,gCACE,UAAY,CACZ,cAAe,CACf,QACF,CAEA,6BACE,eAAgB,CAChB,UACF,CAEA,4BACE,UAAY,CACZ,cAAe,CACf,yBAA8B,CAC9B,gBAAiB,CACjB,kBAAmB,CACnB,oBACF,CAGA,0CACE,gBAAiB,CACjB,wBAAyB,CACzB,qBAAsB,CACtB,oBAAqB,CACrB,mCACF,CAGA,gCACE,iBAAkB,CAClB,QAAS,CACT,QAAS,CACT,0BAA2B,CAC3B,YAAa,CACb,kBAAmB,CACnB,QAAS,CACT,yBAA8B,CAC9B,gBAAiB,CACjB,kBAAmB,CACnB,YACF,CAEA,2BACE,6BAAoC,CACpC,WAAY,CACZ,UAAY,CACZ,cAAe,CACf,UAAW,CACX,WAAY,CACZ,iBAAkB,CAClB,cAAe,CACf,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,8BACF,CAEA,gDACE,6BACF,CAEA,oCACE,UAAY,CACZ,kBACF,CAEA,iCACE,cAAe,CACf,UAAW,CACX,cAAe,CACf,kBACF,CAEA,6BACE,UAAY,CACZ,cAAe,CACf,cAAe,CACf,iBACF,CAGA,+BACE,aACF,CAEA,0BACE,6BAAoC,CACpC,WAAY,CACZ,UAAY,CACZ,cAAe,CACf,iBAAkB,CAClB,cAAe,CACf,kBAAmB,CACnB,8BACF,CAEA,gCACE,6BACF,CAKA,yBACE,+BACE,YACF,CAEA,kCACE,YACF,CAEA,8BACE,wDACF,CAEA,8BACE,wDACF,CAEA,wEACE,YAAa,CACb,cACF,CAEA,+BACE,cACF,CAEA,wCACE,UAAW,CACX,YACF,CAEA,0CACE,cACF,CAGA,+BACE,YACF,CAEA,+BACE,qBAAsB,CACtB,QAAS,CACT,kBAAmB,CACnB,UAAW,CACX,iBAAkB,CAClB,cACF,CAEA,wCACE,cAAe,CACf,OAAQ,CACR,0BAA2B,CAC3B,YAAa,CACb,yBAA8B,CAC9B,mCAA0C,CAC1C,UAAY,CACZ,cAAe,CACf,gBAAiB,CACjB,cAAe,CACf,eAAgB,CAChB,iBAAkB,CAClB,YAAa,CACb,kBAAmB,CACnB,sBACF,CAEA,6CACE,SACF,CAEA,6CACE,UACF,CAEA,6FAEE,yBAA8B,CAC9B,+BACF,CAEA,+CACE,qCACF,CAEA,6BACE,aAAc,CACd,eACF,CAEA,4BACE,cAAe,CACf,UAAY,CACZ,oDACF,CAEA,0BACE,cAAe,CACf,iBACF,CAIA,iCACE,qBACF,CAEA,kCACE,qBAAsB,CACtB,QACF,CACF,CAGA,8BACE,MAAW,UAAc,CACzB,IAAM,SAAY,CACpB,CAGA,yBACE,wCACE,cAAe,CACf,gBAAiB,CACjB,cAAe,CACf,eACF,CAEA,6CACE,QACF,CAEA,6CACE,SACF,CAEA,wCACE,UAAW,CACX,YACF,CAEA,0CACE,cACF,CAEA,8BACE,SAAU,CACV,cAAe,CACf,WACF,CAGF,CCl1BA,iEAJE,YAAa,CACb,qBASF,CANA,gCACE,UAAW,CACX,qBAAuB,CACvB,iBAGF,CAEA,uCACE,YAAa,CACb,6BAA8B,CAC9B,kBAAmB,CACnB,iBAAkB,CAClB,4BACF,CAEA,0CACE,QAAS,CACT,cACF,CAEA,qCACE,YAAa,CACb,gBAAiB,CACjB,eACF,CAEA,4BACE,kBAAmB,CACnB,mBAAoB,CACpB,4BACF,CAEA,uCACE,eAAgB,CAChB,gBAAiB,CACjB,kBACF,CAEA,4BACE,YAAa,CACb,6BAA8B,CAC9B,iBAAkB,CAClB,cACF,CAEA,4BACE,eAAiB,CACjB,eAAgB,CAChB,sBAAuB,CACvB,kBAAmB,CACnB,aACF,CAEA,4BACE,UACF,CAEA,8BACE,UAAW,CACX,cAAe,CACf,UACF,CAEA,gCACE,aACF,CAEA,qCACE,WAAY,CACZ,wBAAyB,CACzB,iBAAkB,CAClB,iBAAkB,CAClB,eACF,CAEA,+BACE,WAAY,CACZ,wBAAyB,CACzB,oBACF,CAEA,gCACE,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,OAAQ,CACR,WAAY,CACZ,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,UAAW,CACX,cAAe,CACf,eACF,CAEA,kCACE,gBAAiB,CACjB,cAAe,CACf,wBAAyB,CACzB,qBAAsB,CACtB,iBAAkB,CAClB,cAAe,CACf,UACF,CAEA,wCACE,wBACF,CAEA,gCACE,eAAgB,CAChB,qBAAsB,CACtB,iBAAkB,CAClB,wBACF,CAEA,6BACE,gBAAiB,CACjB,4BAA6B,CAC7B,wBAAyB,CACzB,YAAa,CACb,6BAA8B,CAC9B,kBACF,CAEA,gCACE,QAAS,CACT,cAAe,CACf,UACF,CAEA,8BACE,YAAa,CACb,OACF,CAEA,iEAEE,eAAgB,CAChB,cAAe,CACf,qBAAsB,CACtB,qBAAsB,CACtB,iBAAkB,CAClB,cAAe,CACf,UACF,CAEA,6EAEE,wBACF,CAEA,8BACE,WAAY,CACZ,gBAAiB,CACjB,eAAgB,CAChB,qBAAsB,CACtB,cAAe,CACf,UACF,CAEA,4BACE,aAAc,CACd,6BAA8B,CAC9B,oBAAqB,CACrB,oBACF,CAEA,2BACE,UAAW,CACX,gBACF,CAEA,4BACE,eAAiB,CACjB,gBACF,CAEA,sCACE,aACF,CAEA,sCACE,aACF,CAEA,uCACE,aACF,CAEA,8BACE,oBACF,CCzDA,iCACE,gBAAiB,CACjB,kDAA6D,CAC7D,YAAa,CACb,uEACF,CAGA,yBACE,YAAa,CACb,kBAAmB,CACnB,kBAAmB,CACnB,eAAgB,CAChB,gBAAiB,CACjB,iBACF,CAEA,2BACE,eAAiB,CACjB,WAAY,CACZ,iBAAkB,CAClB,kBAAmB,CACnB,cAAe,CACf,cAAe,CACf,iBAAkB,CAClB,oCAAyC,CACzC,6BACF,CAEA,iCACE,0BACF,CAEA,6BACE,cAAe,CACf,eAAgB,CAChB,aAAc,CACd,QACF,CAGA,iCACE,eAAgB,CAChB,aAAc,CACd,eAAiB,CACjB,kBAAmB,CACnB,YAAa,CACb,oCACF,CAEA,6BACE,YAAa,CACb,qBAAsB,CACtB,QACF,CAGA,+BACE,+BAAgC,CAChC,mBACF,CAEA,4CACE,kBACF,CAEA,gCACE,cAAe,CACf,eAAgB,CAChB,aAAc,CACd,iBAAkB,CAClB,kBAAmB,CACnB,+BAAgC,CAChC,oBACF,CAGA,6BACE,kBACF,CAEA,6BACE,aAAc,CACd,cAAe,CACf,eAAgB,CAChB,aAAc,CACd,iBACF,CAEA,6DACE,UAAW,CACX,iBAAkB,CAClB,wBAAyB,CACzB,kBAAmB,CACnB,cAAe,CACf,gCAAkC,CAClC,qBACF,CAEA,yEACE,YAAa,CACb,oBACF,CAEA,gCACE,eAAgB,CAChB,gBACF,CAGA,8BACE,yBAA0B,CAC1B,kBAAmB,CACnB,YAAa,CACb,iBAAkB,CAClB,cAAe,CACf,uBAAyB,CACzB,kBACF,CAEA,oDACE,oBAAqB,CACrB,wBACF,CAEA,wCACE,oBAAqB,CACrB,wBAAyB,CACzB,kBACF,CAEA,qCACE,aACF,CAEA,uCACE,cAAe,CACf,mBAAoB,CACpB,eACF,CAEA,8BACE,cAAe,CACf,aACF,CAGA,6BACE,YAAa,CACb,qBAAsB,CACtB,QACF,CAEA,6BACE,YAAa,CACb,kBAAmB,CACnB,QAAS,CACT,YAAa,CACb,kBAAmB,CACnB,kBAAmB,CACnB,wBACF,CAEA,gCACE,UAAW,CACX,WAAY,CACZ,iBAAkB,CAClB,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,cAAe,CACf,UAAY,CACZ,aAAc,CACd,kDAA6D,CAC7D,qBAAsB,CACtB,uBAA2B,CAC3B,2BACF,CAEA,6BACE,oCACF,CAEA,sCACE,kDACF,CAEA,sCACE,kDACF,CAEA,6BACE,MAAO,CACP,YAAa,CACb,qBAAsB,CACtB,OACF,CAEA,mCACE,gBAAiB,CACjB,qBAAsB,CACtB,iBAAkB,CAClB,cACF,CAEA,yCACE,YAAa,CACb,oBACF,CAEA,iCACE,cAAe,CACf,aAAc,CACd,iBACF,CAEA,6BACE,UAAW,CACX,WAAY,CACZ,iBAAkB,CAClB,WAAY,CACZ,kBAAmB,CACnB,UAAY,CACZ,cAAe,CACf,cAAe,CACf,6BAA+B,CAC/B,aACF,CAEA,mCACE,oBACF,CAGA,+BACE,YAAa,CACb,QAAS,CACT,sBAAuB,CACvB,gBACF,CAEA,wDACE,iBAAkB,CAClB,WAAY,CACZ,kBAAmB,CACnB,cAAe,CACf,cAAe,CACf,6BAA+B,CAC/B,eACF,CAEA,6BACE,kBAAmB,CACnB,UACF,CAEA,2BACE,kDAA6D,CAC7D,UACF,CAEA,oCACE,kBAAmB,CACnB,kBAAmB,CACnB,cACF,CAGA,sEACE,iBAAkB,CAClB,iBAAkB,CAClB,eAAgB,CAChB,aAAc,CACd,aACF,CAEA,+DACE,cAAe,CACf,kBACF,CAEA,4BACE,kDAA6D,CAC7D,UAAY,CACZ,WAAY,CACZ,iBAAkB,CAClB,kBAAmB,CACnB,cAAe,CACf,cAAe,CACf,eAAgB,CAChB,6BACF,CAQA,qHACE,0BACF,CAGA,qCACE,YAAa,CACb,kBAAmB,CACnB,QAAS,CACT,sBAAuB,CACvB,kBAAmB,CACnB,YAAa,CACb,kBAAmB,CACnB,kBAAmB,CACnB,wBACF,CAEA,6BACE,iBAAkB,CAClB,WAAY,CACZ,kBAAmB,CACnB,cAAe,CACf,eAAgB,CAChB,cAAe,CACf,uBAAyB,CACzB,kDAA6D,CAC7D,UAAY,CACZ,wCAA6C,CAC7C,eACF,CAEA,uCACE,kDAA6D,CAC7D,sCAA8B,CAC9B,uCACF,CAEA,kDACE,0BAA2B,CAC3B,wCACF,CAEA,6CACE,uCACF,CAEA,sCACE,kBAAmB,CACnB,kBAAmB,CACnB,cAAe,CACf,eACF,CAEA,iCACE,YAAa,CACb,qBAAsB,CACtB,kBAAmB,CACnB,OAAQ,CACR,aACF,CAEA,iCACE,cAAe,CACf,eAAgB,CAChB,iCAAqC,CACrC,aAAc,CACd,wCACF,CAEA,sCACE,cAAe,CACf,eAAgB,CAChB,oCACF,CAEA,wCACE,kBAAmB,CACnB,gBAAiB,CACjB,iBAAkB,CAClB,kBAAmB,CACnB,eACF,CAEA,6EACE,oBAAqB,CACrB,wBACF,CAEA,uCACE,UAAY,CACZ,kBAAmB,CACnB,mBACF,CAEA,0BACE,GACE,kBAAmB,CACnB,uCACF,CACA,IACE,qBAAsB,CACtB,uCACF,CACA,GACE,kBAAmB,CACnB,uCACF,CACF,CAEA,0BACE,OAAU,SAAY,CACtB,OAAY,UAAc,CAC5B,CAGA,yCACE,cAAe,CACf,KAAM,CACN,MAAO,CACP,OAAQ,CACR,QAAS,CACT,yBAA8B,CAC9B,YAAa,CACb,sBAAuB,CACvB,kBAAmB,CACnB,YACF,CAEA,2CACE,eAAiB,CACjB,kBAAmB,CACnB,qCAA0C,CAC1C,SAAU,CACV,eAAgB,CAChB,eAAgB,CAChB,eAAgB,CAChB,YACF,CAEA,8CACE,YAAa,CACb,kBAAmB,CACnB,cAAe,CACf,eAAgB,CAChB,aAAc,CACd,iBACF,CAEA,wCACE,eAAgB,CAChB,YAAa,CACb,sBAAuB,CACvB,YAAa,CACb,iBACF,CAEA,0CACE,aAAc,CACd,eAAiB,CACjB,YAAa,CACb,oCAAyC,CACzC,iBAAkB,CAClB,sCACF,CAEA,0CACE,aAAc,CACd,eAAiB,CACjB,YAAa,CACb,mCAAwC,CACxC,iBACF,CAEA,+BACE,aAAc,CACd,eAAiB,CACjB,YAAa,CACb,mCAAwC,CACxC,iBAAkB,CAClB,eAAgB,CAChB,iBACF,CAEA,0CACE,eAAgB,CAChB,gBAAiB,CACjB,wBAAyB,CACzB,UAAY,CACZ,WAAY,CACZ,iBAAkB,CAClB,cAAe,CACf,eACF,CAEA,gDACE,wBACF,CAGA,yBACE,iCACE,YACF,CAEA,qCACE,qBAAsB,CACtB,QAAS,CACT,YACF,CAEA,6BACE,UAAW,CACX,iBAAkB,CAClB,cAAe,CACf,cACF,CAEA,iCACE,cACF,CAMA,+DACE,YACF,CAEA,6BACE,kBAAmB,CACnB,kBAAmB,CACnB,QAAS,CACT,YACF,CAEA,gCACE,UAAW,CACX,WAAY,CACZ,cAAe,CACf,aACF,CAEA,mCACE,cAAe,CACf,gBACF,CAEA,6BACE,UAAW,CACX,WAAY,CACZ,cAAe,CACf,aACF,CAEA,+BACE,qBACF,CAEA,wDACE,UACF,CACF,CCt1CA,cACE,oBAAqB,CACrB,2BAA4B,CAC5B,uBAA2B,CAC3B,iBAAkB,CAClB,YAAa,CACb,WACF,CACA,qBACE,sBACF,CAEA,qDAEE,kCACF,CAEA,6KACE,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,UAAW,CACX,WACF,CAEA,qGACE,iBACF,CAEA,WACE,mBAAoB,CACpB,gjOAAijO,CACjjO,eAAmB,CACnB,iBACF,CACA,6HACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,2IACE,eACF,CAEA,sBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,6BACE,eACF,CAEA,8EACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,4FACE,eACF,CAEA,kFACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,gGACE,eACF,CAEA,iFACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,+FACE,eACF,CAEA,iFACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,+FACE,eACF,CAEA,wEACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,sFACE,eACF,CAEA,mFACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,iGACE,eACF,CAEA,iGACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,+GACE,eACF,CAEA,kBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,yBACE,eACF,CAEA,4aAKE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,6dAKE,eACF,CAEA,yMAEE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,qOAEE,eACF,CAEA,aACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,oBACE,eACF,CAEA,wEACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,sFACE,eACF,CAEA,sBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,6BACE,eACF,CAEA,wBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,+BACE,eACF,CAEA,6BACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,oCACE,eACF,CAEA,4BACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,mCACE,eACF,CAEA,gBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,uBACE,eACF,CAEA,cACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,qBACE,eACF,CAEA,iBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,wBACE,eACF,CAEA,0HACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,sJACE,eACF,CAEA,yBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,gCACE,eACF,CAEA,8BACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,qCACE,eACF,CAEA,+EACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,6FACE,eACF,CAEA,iBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,wBACE,eACF,CAEA,6EACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,2FACE,eACF,CAEA,wEACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,sFACE,eACF,CAEA,0EACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,wFACE,eACF,CAEA,0EACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,wFACE,eACF,CAEA,wEACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,sFACE,eACF,CAEA,0EACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,wFACE,eACF,CAEA,0EACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,wFACE,eACF,CAEA,kEACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,gFACE,eACF,CAEA,oBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,2BACE,eACF,CAEA,wBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,+BACE,eACF,CAEA,kBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,yBACE,eACF,CAEA,eACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,sBACE,eACF,CAEA,mGACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,iHACE,eACF,CAEA,yHACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,uIACE,eACF,CAEA,mBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,0BACE,eACF,CAEA,mBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,0BACE,eACF,CAEA,kBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,yBACE,eACF,CAEA,iBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,wBACE,eACF,CAEA,oBACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,2BACE,eACF,CAEA,qFACE,mBAAoB,CACpB,eAAmB,CACnB,iBACF,CACA,mGACE,eACF,CAEA,UACE,oBAAqB,CACrB,kBAAmB,CACnB,qBAAsB,CACtB,UAAW,CACX,qBAAsB,CACtB,iBAAkB,CAClB,SAAU,CACV,cAAe,CACf,aAAc,CACd,eAAmB,CACnB,iBAAkB,CAClB,sCAAyC,CACzC,iBACF,CACA,2BACE,iBACF,CACA,8BACE,oBAAsB,CACtB,qBACF,CAEA,yBACE,YACF,CAEA,+CAGE,kBACF,CAEA,aACE,mBAAoB,CACpB,iBAAkB,CAClB,mBAAoB,CACpB,2BAA4B,CAC5B,aAAc,CACd,cAAe,CACf,YAAa,CACb,eACF,CAEA,8FAKE,UAAW,CACX,cACF,CAEA,gOAKE,QACF,CAEA,6CACE,kBACF,CAEA,4CACE,eACF,CAEA,6CACE,2BACF,CAEA,4CACE,gBACF,CAOA,iEAJE,UAAW,CACX,WASF,CANA,oBACE,iBAAkB,CAClB,KAAM,CACN,MAGF,CAEA,wCACE,YACF,CAEA,yCAEE,SAAU,CACV,QAAS,CACT,WACF,CAEA,wEAEE,cAAe,CACf,eAAgB,CAChB,YAAa,CACb,MAAO,CACP,KAAM,CACN,QAAS,CACT,OACF,CAEA,+EAEE,oBAAsB,CACtB,qBAAuB,CACvB,uBAAyB,CACzB,aACF,CAEA,2CACE,WACF,CAEA,iCACE,iBAAkB,CAClB,UAAW,CACX,aAAc,CACd,+BAAoC,CACpC,YAAc,CACd,iBAAkB,CAClB,UACF,CAEA,uJAGE,QAAS,CACT,eACF,CAEA,YACE,sBACF,CAEA,cACE,UAAY,CACZ,cACF,CAEA,yBACE,UAAW,CACX,YAAa,CACb,iBAAkB,CAClB,KAAM,CACN,SACF,CAEA,kBACE,uBAAyB,CACzB,mBAAqB,CACrB,4BACF,CAEA,WACE,YAAa,CACb,UAAW,CACX,qBAAsB,CACtB,cAAe,CACf,sCAAyC,CACzC,iBAAkB,CAClB,WAAY,CACZ,YAAa,CACb,aACF,CAEA,kCAEE,aACF,CAEA,+BACE,aAAc,CACd,iBAAkB,CAClB,gBAAiB,CACjB,SAAU,CACV,aAAc,CACd,iBAAkB,CAClB,OAAQ,CACR,QAAS,CACT,SAAU,CACV,oBAAsB,CACtB,kBAAmB,CACnB,cAAe,CACf,SAAU,CACV,0BAA4B,CAC5B,wBAAyB,CACzB,kCAAuC,CACvC,kBAAoB,CACpB,kBACF,CACA,mCACE,SAAU,CACV,UAAW,CACX,iBAAkB,CAClB,OAAQ,CACR,QAAS,CACT,aAAc,CACd,8BACF,CAEA,0EAEE,iBAAkB,CAClB,wBAAqE,CACrE,qCAA2E,CAC3E,iBACF,CAEA,kKAIE,YACF,CAEA,+HACE,aACF,CAEA,iBACE,eAAgB,CAChB,WAAY,CACZ,aAAc,CACd,oBAAqB,CACrB,iBAAkB,CAClB,mBAAoB,CACpB,mBAAoB,CACpB,oBAAqB,CACrB,eAAgB,CAChB,uBAAwB,CACxB,oBAAqB,CAChB,eACP,CAEA,2DACE,0BAA6B,CAC7B,eACF,CAEA,yBACE,UAAW,CACX,WACF,CAEA,wCACE,cAAe,CACf,UAAW,CACX,iBAAkB,CAClB,OAAQ,CACR,QAAU,CACV,SACF,CACA,4BACE,yBAA8B,CAC9B,mEAA+E,CAC/E,aACF,CAEA,8BACE,qBACF,CAEA,4CACE,eAAgB,CAChB,eAAgB,CAChB,iBAAkB,CAClB,SACF,CAEA,iBACE,cACF,CAEA,8BACE,cACF,CAEA,gEACE,YACF,CAEA,4BACE,aAAc,CACd,SAAU,CACV,QAAS,CACT,sCAAyC,CACzC,aACF,CAEA,8BACE,qBACF,CAEA,4DACE,YACF,CAEA,aACE,YAAa,CACb,sBAAuB,CACvB,eAAgB,CAChB,QAAS,CACT,cAAgB,CAChB,iBAAkB,CAClB,eAAgB,CAChB,iBAAkB,CAClB,wBACF,CAEA,qHAGE,wBAAqE,CACrE,qCACF,CAEA,4IAIE,qBAAsB,CACtB,aACF,CACA,oMAIE,SACF,CAEA,4IAEE,eACF,CAEA,4BACE,iBAAkB,CAClB,wBAAyB,CACzB,aAAc,CACd,eAAgB,CAChB,SAAU,CACV,iBAAmB,CACnB,eAAiB,CACjB,cACF,CAEA,iCACE,YAAa,CACb,iBAAkB,CAClB,QAAS,CACT,UAAW,CACX,SAAU,CACV,QAAW,CACX,mBAAoB,CACpB,kCACF,CAEA,iDACE,UAAW,CACX,SACF,CAEA,mDACE,wBAAyB,CACzB,kCAAuC,CACvC,iBAAkB,CAClB,UAAW,CACX,YAAa,CACb,eACF,CAEA,2IAEE,cACF,CAEA,qEACE,eACF,CAEA,sEACE,eACF,CAEA,gNAGE,eACF,CAEA,+GAEE,aACF,CAEA,kCACE,kBAAoB,CACpB,eACF,CAEA,yCACE,mBACF,CAEA,oIAGE,UACF,CAEA,kCACE,SAAU,CACV,WAAY,CACZ,UAAW,CACX,iBAAkB,CAClB,QAAS,CACT,KAAM,CACN,SAAU,CACV,QAAS,CACT,kBACF,CAEA,oIAGE,aAAc,CACd,SACF,CAEA,0CACE,UAAW,CACX,WAAY,CACZ,QAAS,CACT,eACF,CAEA,2BACE,YAAa,CACb,UAAW,CACX,iBAAkB,CAClB,QAAS,CACT,MAAO,CACP,OAAQ,CACR,UAAW,CACX,wBAAyB,CACzB,kCACF,CAEA,0DACE,OACF,CAEA,8GACE,sBACF,CAEA,wEAEE,YAAa,CACb,kBAAmB,CACnB,SAAU,CACV,qCACF,CAEA,gEACE,kBAAmB,CACnB,SAAU,CACV,mBAAoB,CACpB,mCACF,CAEA,gHAGE,sBACF,CAEA,8JAEE,SAAU,CACV,kBAAmB,CACnB,mBACF,CAEA,uBACE,iBAAkB,CAClB,iBAAkB,CAClB,QAAS,CACT,SAAU,CACV,WAAY,CACZ,SAAU,CACV,SACF,CAEA,wCACE,UAAW,CACX,gBAAiB,CACjB,iBACF,CAEA,yCACE,eAAgB,CAChB,gBACF,CAEA,kCACE,aACF,CAEA,0BACE,oBACF,CAEA,qGAGE,wBACF,CAEA,oDACE,QAAS,CACT,kBAAmB,CACnB,UAAW,CACX,eAAgB,CAChB,SAAU,CACV,iBAAkB,CAClB,SACF,CAEA,qCACE,YACF,CAEA,gCACE,cAAe,CACf,SAAU,CACV,YAAa,CACb,kBAAmB,CACnB,aAAc,CACd,iBACF,CAEA,yCACE,cACF,CAEA,gCACE,YACF,CAEA,kCACE,YAAa,CACb,kBACF,CAEA,+BACE,SAAU,CACV,kBAAoB,CACpB,WACF,CAEA,qDACE,aACF,CAEA,gJAEE,wBACF,CAEA,oEACE,aACF,CAEA,0JAGE,iBAAkB,CAClB,aAAc,CACd,WAAY,CACZ,QAAS,CACT,SAAU,CACV,OACF,CAEA,6BACE,qBACF,CACA,oCACE,cAAgB,CAChB,iBAAkB,CAClB,WAAa,CACb,iBAAmB,CACnB,SACF,CAEA,iDACE,sBACF,CAEA,iCACE,iBAAkB,CAClB,UAAY,CACZ,WAAa,CACb,UAAY,CACZ,WAAa,CACb,mBAAoB,CACpB,iBAAmB,CACnB,SACF,CAEA,6BACE,+BACF,CAEA,iCACE,gCACF,CAEA,4BACE,qBAAsB,CACtB,mCAA0C,CAC1C,kBAAoB,CACpB,UAAW,CACX,WAAY,CACZ,sCAAyC,CACzC,aAAc,CACd,uBAAwB,CACxB,mBAAoB,CACpB,iBAAkB,CAClB,UAAW,CACX,iBAAkB,CAClB,SACF,CAEA,uDACE,YACF,CAEA,6NAGE,aAAc,CACd,cAAgB,CAChB,kBACF,CAEA,iEACE,aACF,CAEA,mDACE,YAAa,CACb,iBAAkB,CAClB,SAAU,CACV,WAAY,CACZ,qBAAsB,CACtB,SACF,CAMA,4IACE,aACF,CAEA,8JAEE,iBAAkB,CAClB,SAAU,CACV,mCACF,CAEA,qCACE,UAAW,CACX,qBAAsB,CACtB,+BACF,CAEA,sBACE,iBAAkB,CAClB,cAAe,CACf,SAAU,CACV,sBAAyB,CAEzB,0BAA2B,CAE3B,wBAAyB,CAEzB,qBAAsB,CACjB,gBAAiB,CACtB,wBAAqE,CACrE,qCACF,CAEA,+BACE,cACF,CAEA,4BACE,wBAA8B,CAC9B,uBACF,CAEA,2DACE,0BACF,CAEA,4BACE,cAAe,CACf,SACF,CACA,8BACE,cAAe,CACf,gBAAiB,CACjB,YACF,CAEA,oDACE,SACF,CAEA,gDACE,kBAAmB,CACnB,SAAU,CACV,SAAU,CACV,UAAW,CACX,gBACF,CAEA,4BACE,mBACF,CACA,4WACE,kBAAmB,CACnB,SAAU,CACV,iBAAkB,CAClB,yEACF,CACA,gfACE,SAAU,CACV,UAAW,CACX,cACF,CACA,oeACE,WAAY,CACZ,kBACF,CACA,2MACE,UAAW,CACX,oBACF,CACA,6EACE,SACF,CAEA,oEACE,UAAW,CACX,SAAU,CACV,YAAa,CACb,iFACF,CAEA,sEACE,8EACF,CAEA,4BACE,YACF,CAEA,0BACE,mBACF,CAEA,sCACE,SAAU,CACV,WACF,CAEA,oCACE,UAAY,CACZ,UAAW,CACX,kBACF,CAEA,4BACE,iBAAkB,CAClB,QAAS,CACT,MAAO,CACP,qBACF,CACA,mCACE,iBAAkB,CAClB,cAAgB,CAChB,SACF,CAEA,uCACE,UACF,CACA,8CACE,SAAW,CACX,UAAY,CACZ,SACF,CAEA,gDACE,YACF,CAEA,gCACE,iBAAkB,CAClB,UAAY,CACZ,WAAa,CACb,mBAAoB,CACpB,SACF,CAEA,yCACE,WACF,CACA,gDACE,iBAAmB,CACnB,WACF,CAEA,uDACE,WAAa,CACb,0BACF,CAEA,qDACE,UAAY,CACZ,0BACF,CAEA,sDACE,SACF,CAEA,sDACE,WACF,CAEA,wDACE,UACF,CAEA,+BACE,SAAU,CACV,UAAW,CACX,UAAW,CACX,wBAAyB,CACzB,kCACF,CAEA,2CACE,SACF,CAEA,8BACE,qBAAsB,CACtB,mCAA0C,CAC1C,kBAAoB,CACpB,UAAW,CACX,WAAY,CACZ,sCAAyC,CACzC,aAAc,CACd,uBAAwB,CACxB,mBAAoB,CACpB,iBAAkB,CAClB,UAAW,CACX,iBAAkB,CAClB,SACF,CAEA,2IAEE,aAAc,CACd,aAAc,CACd,kBACF,CAEA,6IAEE,QAAS,CACT,SACF,CAEA,iEACE,aACF,CAEA,iDACE,YAAa,CACb,iBAAkB,CAClB,UAAW,CACX,UAAW,CACX,qBAAsB,CACtB,SACF,CAEA,oDACE,SAAU,CACV,WACF,CAEA,uDACE,aACF,CAEA,mEACE,iBAAkB,CAClB,SAAU,CACV,mCACF,CAEA,uCACE,UAAW,CACX,qBAAsB,CACtB,+BACF,CAEA,YACE,oBAAqB,CACrB,qBAAsB,CACtB,cAAe,CACf,QAAS,CACT,SAAU,CACV,iBAAkB,CAClB,KAAM,CACN,OAAQ,CACR,QAAS,CACT,MAAO,CACP,WACF,CAEA,oEAEE,YACF,CAEA,yIAGE,aACF,CAEA,gBACE,UAAW,CACX,WAAY,CACZ,qBAAmB,CAAnB,kBACF,CAEA,4BACE,YAAa,CACb,sBAAuB,CACvB,SAAU,CACV,aAAc,CACd,eACF,CAEA,kFAEE,YACF,CAEA,oCACE,kBAAmB,CACnB,cAAe,CACf,SAAU,CACV,mBAAoB,CACpB,WAAY,CACZ,iBAAmB,CACnB,kBAAoB,CACpB,aAAc,CACd,eAAgB,CAChB,UAAW,CACX,aACF,CAEA,iHAEE,YACF,CAEA,uDACE,WACF,CAEA,gDACE,iBAAmB,CACnB,UACF,CAEA,iDACE,aACF,CAEA,wCACE,SAAU,CACV,UAAW,CACX,mBAAoB,CACpB,SACF,CAEA,6EACE,SACF,CAEA,qEACE,QACF,CAEA,4BACE,SAAU,CACV,aAAc,CACd,eAAgB,CAChB,aAAc,CACd,UAAW,CACX,gBAAiB,CACjB,iBACF,CAEA,4GAIE,YACF,CAEA,kBACE,YAAa,CACb,eACF,CAEA,8DACE,YACF,CAEA,4BACE,cACF,CAEA,kDACE,SACF,CAEA,wBACE,iBAAkB,CAClB,UAAW,CACX,MAAO,CACP,OAAQ,CACR,KAAM,CACN,mBACF,CAEA,mCACE,YACF,CAEA,wHAEE,UACF,CAEA,0BACE,eAAgB,CAChB,iBAAkB,CAClB,kBACF,CAEA,eACE,UACF,CAEA,cACE,UACF,CAEA,YACE,aACF,CAEA,wCACE,0BACF,CAEA,wJAEE,4BACF,CAEA,0DACE,2BAA6B,CAC7B,mBACF,CAEA,2BACE,sCACE,KAAM,CACN,OAAQ,CACR,QAAS,CACT,MACF,CACF,CACA,0CACE,cAAe,CACf,SACF,CACA,8GAEE,YACF,CAEA,kCACE,cAAe,CACf,SACF,CACA,8FAEE,YACF,CAEA,gFAEE,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,UAAW,CACX,WACF,CAEA,4CACE,mBAAoB,CACpB,eAAgB,CAChB,aAAc,CACd,iBACF,CAEA,6BACE,SAAU,CACV,MACF,CAEA,wDACE,eAAgB,CAChB,iBACF,CAEA,qBACE,YAAa,CACb,iBAAkB,CAClB,OAAQ,CACR,QAAS,CACT,8BAAgC,CAChC,WAAa,CACb,eAAgB,CAChB,mCAAyC,CACzC,qBAAsB,CACtB,2BAA4B,CAC5B,SAAU,CACV,UAAW,CACX,iBAAkB,CAClB,iBACF,CAEA,oEAEE,YAAa,CACb,sBAAuB,CACvB,kBAAmB,CACnB,iDACF,CAEA,gCACE,YACF,CAEA,uDAEE,UAAW,CACX,iBAAkB,CAClB,kBAAmB,CACnB,aAAc,CACd,cAAe,CACf,qBAAsB,CACtB,SAAU,CACV,cAAe,CACf,wBAAyB,CACzB,qBACF,CAEA,kKAIE,uGACF,CAEA,kFAEE,qBACF,CAEA,gFAEE,qBAAoC,CACpC,oBACF,CAEA,4BACE,GACE,kBACF,CACF,CACA,4BACE,GACE,uBACF,CACF,CACA,4BACE,GACE,wBACF,CACA,IACE,wBACF,CACA,IACE,qBACF,CACA,IACE,wBACF,CACA,GACE,wBACF,CACF,CACA,mDACE,YACF,CAEA,kCACE,UACF,CAEA,uDACE,YACF,CAEA,sEACE,WAAY,CACZ,YACF,CAEA,4GACE,qBAAsB,CACtB,oBAAqB,CACrB,mBACF,CAEA,mHACE,mBAAoB,CACpB,eAAgB,CAChB,eAAgB,CAChB,mBACF,CAEA,oDACE,YACF,CAEA,qNAEE,qBAAsB,CACtB,oBAAqB,CACrB,mBACF,CAEA,mOAEE,mBAAoB,CACpB,gBAAiB,CACjB,eAAgB,CAChB,mBACF,CAEA,mzBAgBE,YACF,CACA,2+BAEE,UACF,CACA,mGACE,YACF,CACA,wDACE,SAAU,CACV,aACF,CAEA,0CACE,wBAAyB,CACzB,mCAAwC,CACxC,UAAW,CACX,UACF,CACA,0EACE,UACF,CAEA,oCACE,YACF,CAEA,mDACE,aACF,CAEA,4JAGE,kBACF,CAEA,sDACE,gBAAiB,CACjB,qBACF,CAEA,yBACE,mDACE,YAAa,CACb,6BAA8B,CAC9B,sBAAuB,CACvB,wBACF,CACA,iDACE,kBACF,CACA,sDACE,gBACF,CACA,gNAGE,yBACF,CACF,CACA,gCACE,iBACF,CAEA,0BACE,gBAAiB,CACjB,kBACF,CAEA,kCACE,WAAY,CACZ,WACF,CAEA,uCACE,oBAAqB,CACrB,mBACF,CAEA,8CACE,eACF,CAEA,gCACE,UAAW,CACX,eAAiB,CACjB,eACF,CAEA,oCACE,oBACF,CAEA,qFAEE,mBAAoB,CACpB,oBAAqB,CACrB,uDACF,CAEA,0CACE,wBACF,CAEA,oCACE,qBAAsB,CACtB,0DAA8G,CAC9G,aAAc,CACd,cAAe,CACf,iBACF,CAEA,iDACE,gBACF,CAEA,eACE,yBAA8B,CAC9B,gFAAyG,CACzG,eAAgB,CAChB,eAAgB,CAChB,sBAAwB,CACxB,0BAA4B,CAC5B,mBAAoB,CACpB,iBAAkB,CAClB,KAAM,CACN,UACF,CAEA,0BACE,YACF,CAEA,gDAEE,QAAS,CACT,eAAgB,CAChB,sBAAuB,CACvB,kBACF,CAEA,qBACE,eAAiB,CACjB,oBACF,CAEA,8CACE,SAAU,CACV,qBACF,CAiBA,2LACE,cACF,CACA,gCACE,iBAAkB,CAClB,UAAW,CACX,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,kCAAuC,CACvC,cAAe,CACf,SAAU,CACV,qBACF,CAEA,sDACE,YACF,CAEA,oIAEE,SACF,CAEA,qCACE,cACF,CAEA,yCACE,QACF,CAEA,0CACE,SACF,CAEA,wCACE,OACF,CAEA,6CACE,OACF,CAEA,2CACE,UACF,CAEA,sCACE,kCACF,CAEA,aACE,2CACE,iBACF,CACF,CACA,oBACE,iBAAkB,CAClB,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,WAAY,CACZ,aACF,CAEA,uDACE,YACF,CAEA,qCACE,YACF,CChxCA,oCACE,gBAAiB,CACjB,kDAA6D,CAC7D,YAAa,CACb,uEACF,CAGA,gCACE,YAAa,CACb,kBAAmB,CACnB,kBAAmB,CACnB,gBAAiB,CACjB,gBAAiB,CACjB,iBACF,CAEA,2BACE,6BAAoC,CACpC,mCAA0C,CAC1C,UAAY,CACZ,iBAAkB,CAClB,kBAAmB,CACnB,cAAe,CACf,cAAe,CACf,iBAAkB,CAClB,0BAA2B,CAC3B,uBACF,CAEA,iCACE,6BAAoC,CACpC,0BACF,CAEA,6BACE,cAAe,CACf,eAAgB,CAChB,UAAY,CACZ,QACF,CAGA,kCACE,gBAAiB,CACjB,aACF,CAEA,iCACE,8BAAqC,CACrC,kBAAmB,CACnB,YAAa,CACb,oCAAyC,CACzC,0BACF,CAEA,qCACE,kBAAmB,CACnB,kBAAmB,CACnB,eAAgB,CAChB,oCACF,CAGA,+CACE,kBAAmB,CACnB,qBACF,CAEA,oEACE,iBAAkB,CAClB,yBAA8B,CAC9B,mCAA0C,CAC1C,uBAAyB,CACzB,OAAQ,CACR,QAAS,CACT,8BACF,CAEA,0EACE,yBAA8B,CAC9B,yCACF,CAEA,gEACE,yBAA8B,CAC9B,0BAA2B,CAC3B,2BACF,CAEA,qEACE,UACF,CAEA,kEACE,kDACF,CAKA,6BACE,kBAAmB,CACnB,iBACF,CAEA,8BACE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","sources":["webpack://baby-log/./src/components/LazyImage.vue","webpack://baby-log/./src/components/PerformancePanel.vue","webpack://baby-log/./src/views/Home.vue","webpack://baby-log/./src/views/EventDetail.vue","webpack://baby-log/./src/components/ChunkUploader.vue","webpack://baby-log/./src/views/AddEditEvent.vue","webpack://baby-log/./node_modules/video.js/dist/video-js.css","webpack://baby-log/./src/views/VideoPlayer.vue","webpack://baby-log/./node_modules/vue3-video-play/dist/style.css","webpack://baby-log/./src/views/ChunkUploadDemo.vue"],"sourcesContent":["<template>\r\n  <div \r\n    class=\"lazy-image-container\"\r\n    :class=\"{ \r\n      'loaded': imageLoaded, \r\n      'error': imageError,\r\n      'small': small \r\n    }\"\r\n    ref=\"containerRef\"\r\n  >\r\n    <!-- 加载中状态 -->\r\n    <div v-if=\"!imageLoaded && !imageError\" class=\"loading-placeholder\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <span class=\"loading-text\">加载中...</span>\r\n    </div>\r\n    \r\n    <!-- 错误状态 -->\r\n    <div v-else-if=\"imageError\" class=\"error-placeholder\">\r\n      <span class=\"error-icon\">📷</span>\r\n      <span class=\"error-text\">加载失败</span>\r\n      <button class=\"retry-button\" @click=\"retryLoad\" v-if=\"retryCount < maxRetries\">重试</button>\r\n    </div>\r\n    \r\n    <!-- 实际图片 -->\r\n    <img\r\n      v-if=\"shouldLoad\"\r\n      :src=\"optimizedSrc\"\r\n      :alt=\"alt\"\r\n      @load=\"onImageLoad\"\r\n      @error=\"onImageError\"\r\n      class=\"lazy-image\"\r\n      :style=\"{ opacity: imageLoaded ? 1 : 0 }\"\r\n      loading=\"lazy\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted, computed } from 'vue'\r\nimport { imagePerformanceMonitor } from '@/utils/imagePerformance'\r\nimport { optimizeImageUrl } from '@/utils/imageOptimization'\r\n\r\nexport default {\r\n  name: 'LazyImage',\r\n  props: {\r\n    src: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    alt: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    small: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 触发加载的距离（像素）\r\n    threshold: {\r\n      type: Number,\r\n      default: 200\r\n    },\r\n    // 是否启用预加载\r\n    preload: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 加载优先级（high, normal, low）\r\n    priority: {\r\n      type: String,\r\n      default: 'normal',\r\n      validator: (value) => ['high', 'normal', 'low'].includes(value)\r\n    }\r\n  },\r\n  setup(props) {\r\n    const containerRef = ref(null)\r\n    const shouldLoad = ref(false)\r\n    const imageLoaded = ref(false)\r\n    const imageError = ref(false)\r\n    const retryCount = ref(0)\r\n    const maxRetries = 2\r\n    const currentSrc = ref(props.src)\r\n    let observer = null\r\n    let performanceEventId = null\r\n\r\n    // 优化后的图片URL\r\n    const optimizedSrc = computed(() => {\r\n      const options = {\r\n        quality: props.priority === 'low' ? 'low' : props.priority === 'high' ? 'high' : 'medium',\r\n        formatOptimization: true,\r\n        qualityOptimization: true\r\n      }\r\n      \r\n      return optimizeImageUrl(currentSrc.value, options)\r\n    })\r\n\r\n    // 创建Intersection Observer\r\n    const createObserver = () => {\r\n      if (!window.IntersectionObserver) {\r\n        // 如果不支持IntersectionObserver，直接加载\r\n        shouldLoad.value = true\r\n        return\r\n      }\r\n\r\n      observer = new IntersectionObserver(\r\n        (entries) => {\r\n          entries.forEach(entry => {\r\n            if (entry.isIntersecting || entry.intersectionRatio > 0) {\r\n              // 根据优先级决定加载延迟\r\n              const delay = props.priority === 'high' ? 0 : \r\n                           props.priority === 'normal' ? 100 : 300\r\n              \r\n              setTimeout(() => {\r\n                shouldLoad.value = true\r\n                // 开始性能监控\r\n                performanceEventId = imagePerformanceMonitor.startMonitoring(props.src)\r\n              }, delay)\r\n              \r\n              // 开始加载后取消观察\r\n              if (observer) {\r\n                observer.unobserve(entry.target)\r\n                observer = null\r\n              }\r\n            }\r\n          })\r\n        },\r\n        {\r\n          rootMargin: `${props.threshold}px`,\r\n          threshold: 0.01\r\n        }\r\n      )\r\n\r\n      if (containerRef.value) {\r\n        observer.observe(containerRef.value)\r\n      }\r\n    }\r\n\r\n    const onImageLoad = () => {\r\n      imageLoaded.value = true\r\n      imageError.value = false\r\n      // 结束性能监控（成功）\r\n      if (performanceEventId) {\r\n        imagePerformanceMonitor.endMonitoring(performanceEventId, true)\r\n      }\r\n    }\r\n\r\n    const onImageError = () => {\r\n      retryCount.value++\r\n      if (retryCount.value <= maxRetries) {\r\n        // 延迟重试\r\n        setTimeout(() => {\r\n          // 更新图片源触发重新加载\r\n          currentSrc.value = `${props.src}?retry=${retryCount.value}&t=${Date.now()}`\r\n        }, 1000 * retryCount.value)\r\n      } else {\r\n        imageLoaded.value = false\r\n        imageError.value = true\r\n        // 结束性能监控（失败）\r\n        if (performanceEventId) {\r\n          imagePerformanceMonitor.endMonitoring(performanceEventId, false)\r\n        }\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      if (props.preload) {\r\n        // 如果启用预加载，直接开始加载\r\n        shouldLoad.value = true\r\n        // 开始性能监控\r\n        performanceEventId = imagePerformanceMonitor.startMonitoring(props.src)\r\n      } else {\r\n        createObserver()\r\n      }\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      if (observer) {\r\n        observer.disconnect()\r\n      }\r\n    })\r\n\r\n    const retryLoad = () => {\r\n      imageError.value = false\r\n      imageLoaded.value = false\r\n      \r\n      // 重新开始性能监控\r\n      performanceEventId = imagePerformanceMonitor.startMonitoring(props.src)\r\n      \r\n      // 更新当前图片源，添加重试参数\r\n      currentSrc.value = `${props.src}?retry=${retryCount.value}&t=${Date.now()}`\r\n    }\r\n\r\n    return {\r\n      containerRef,\r\n      shouldLoad,\r\n      imageLoaded,\r\n      imageError,\r\n      retryCount,\r\n      maxRetries,\r\n      currentSrc,\r\n      optimizedSrc,\r\n      onImageLoad,\r\n      onImageError,\r\n      retryLoad\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.lazy-image-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.lazy-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.loading-placeholder,\r\n.error-placeholder {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: #6c757d;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  padding: 10px;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid #e9ecef;\r\n  border-top: 2px solid #6c757d;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* 骨架屏效果 */\r\n.lazy-image-container::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: linear-gradient(90deg, \r\n    transparent 0%, \r\n    rgba(255, 255, 255, 0.6) 50%, \r\n    transparent 100%);\r\n  transform: translateX(-100%);\r\n  animation: shimmer 2s ease-in-out infinite;\r\n  z-index: 1;\r\n  pointer-events: none;\r\n}\r\n\r\n.lazy-image-container.loaded::before,\r\n.lazy-image-container.error::before {\r\n  animation: none;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n@keyframes shimmer {\r\n  0% {\r\n    transform: translateX(-100%);\r\n  }\r\n  50% {\r\n    transform: translateX(0%);\r\n  }\r\n  100% {\r\n    transform: translateX(100%);\r\n  }\r\n}\r\n\r\n/* 脉冲效果作为备选 */\r\n.lazy-image-container::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(108, 117, 125, 0.1);\r\n  animation: pulse 1.5s ease-in-out infinite alternate;\r\n  z-index: 0;\r\n}\r\n\r\n.lazy-image-container.loaded::after,\r\n.lazy-image-container.error::after {\r\n  display: none;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    opacity: 0.4;\r\n  }\r\n  100% {\r\n    opacity: 0.8;\r\n  }\r\n}\r\n\r\n.loading-text,\r\n.error-text {\r\n  font-size: 10px;\r\n  font-weight: 500;\r\n  opacity: 0.8;\r\n}\r\n\r\n.error-icon {\r\n  font-size: 20px;\r\n  margin-bottom: 5px;\r\n  opacity: 0.6;\r\n}\r\n\r\n.error-placeholder {\r\n  background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);\r\n  color: #721c24;\r\n}\r\n\r\n.retry-button {\r\n  background: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 8px;\r\n  cursor: pointer;\r\n  margin-top: 5px;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.retry-button:hover {\r\n  background: #c82333;\r\n}\r\n\r\n/* 小图片样式 */\r\n.lazy-image-container.small {\r\n  min-height: 60px;\r\n}\r\n\r\n.lazy-image-container.small .loading-spinner {\r\n  width: 16px;\r\n  height: 16px;\r\n  border-width: 1.5px;\r\n}\r\n\r\n.lazy-image-container.small .loading-text,\r\n.lazy-image-container.small .error-text {\r\n  font-size: 9px;\r\n}\r\n\r\n.lazy-image-container.small .error-icon {\r\n  font-size: 16px;\r\n}\r\n\r\n/* 加载完成后的样式 */\r\n.lazy-image-container.loaded {\r\n  background: transparent;\r\n}\r\n\r\n/* 悬停效果 */\r\n.lazy-image-container:hover {\r\n  transform: scale(1.02);\r\n}\r\n\r\n/* 响应式 */\r\n@media (max-width: 768px) {\r\n  .loading-text,\r\n  .error-text {\r\n    font-size: 9px;\r\n  }\r\n  \r\n  .loading-spinner {\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div v-if=\"showPanel\" class=\"performance-panel\">\r\n    <div class=\"panel-header\">\r\n      <h4>图片加载性能</h4>\r\n      <button class=\"close-btn\" @click=\"closePanel\">×</button>\r\n    </div>\r\n    <div class=\"panel-content\">\r\n      <div class=\"stat-row\">\r\n        <span>总计:</span>\r\n        <span>{{ stats.totalImages }}</span>\r\n      </div>\r\n      <div class=\"stat-row\">\r\n        <span>成功:</span>\r\n        <span>{{ stats.loadedImages }}</span>\r\n      </div>\r\n      <div class=\"stat-row\">\r\n        <span>失败:</span>\r\n        <span>{{ stats.failedImages }}</span>\r\n      </div>\r\n      <div class=\"stat-row\">\r\n        <span>成功率:</span>\r\n        <span>{{ stats.successRate }}</span>\r\n      </div>\r\n      <div class=\"stat-row\">\r\n        <span>平均耗时:</span>\r\n        <span>{{ stats.averageLoadTime }}</span>\r\n      </div>\r\n      <div class=\"recommendations\" v-if=\"recommendations.length > 0\">\r\n        <h5>建议:</h5>\r\n        <ul>\r\n          <li v-for=\"(rec, index) in recommendations\" :key=\"index\">{{ rec }}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- 开发环境下的触发按钮 -->\r\n  <button \r\n    v-if=\"isDevelopment && !showPanel\" \r\n    class=\"performance-toggle\"\r\n    @click=\"togglePanel\"\r\n  >\r\n    📊\r\n  </button>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport { imagePerformanceMonitor } from '@/utils/imagePerformance'\r\n\r\nexport default {\r\n  name: 'PerformancePanel',\r\n  setup() {\r\n    const showPanel = ref(false)\r\n    const stats = ref({})\r\n    const recommendations = ref([])\r\n    const isDevelopment = process.env.NODE_ENV === 'development'\r\n    let updateInterval = null\r\n\r\n    const togglePanel = () => {\r\n      showPanel.value = !showPanel.value\r\n      if (showPanel.value) {\r\n        updateStats()\r\n        startAutoUpdate()\r\n      } else {\r\n        stopAutoUpdate()\r\n      }\r\n    }\r\n\r\n    const closePanel = () => {\r\n      showPanel.value = false\r\n      stopAutoUpdate()\r\n    }\r\n\r\n    const updateStats = () => {\r\n      stats.value = imagePerformanceMonitor.getStats()\r\n      recommendations.value = imagePerformanceMonitor.getPerformanceRecommendations()\r\n    }\r\n\r\n    const startAutoUpdate = () => {\r\n      updateInterval = setInterval(updateStats, 2000) // 每2秒更新一次\r\n    }\r\n\r\n    const stopAutoUpdate = () => {\r\n      if (updateInterval) {\r\n        clearInterval(updateInterval)\r\n        updateInterval = null\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      if (isDevelopment) {\r\n        updateStats()\r\n      }\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      stopAutoUpdate()\r\n    })\r\n\r\n    return {\r\n      showPanel,\r\n      stats,\r\n      recommendations,\r\n      isDevelopment,\r\n      togglePanel,\r\n      closePanel\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.performance-panel {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 300px;\r\n  background: rgba(0, 0, 0, 0.9);\r\n  color: white;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  z-index: 9999;\r\n  backdrop-filter: blur(10px);\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.panel-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  padding-bottom: 8px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.panel-header h4 {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  color: #4CAF50;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  width: 24px;\r\n  height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.close-btn:hover {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.stat-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 5px;\r\n  padding: 2px 0;\r\n}\r\n\r\n.stat-row span:first-child {\r\n  color: #ccc;\r\n}\r\n\r\n.stat-row span:last-child {\r\n  color: #4CAF50;\r\n  font-weight: bold;\r\n}\r\n\r\n.recommendations {\r\n  margin-top: 15px;\r\n  padding-top: 10px;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.recommendations h5 {\r\n  margin: 0 0 8px 0;\r\n  font-size: 12px;\r\n  color: #FF9800;\r\n}\r\n\r\n.recommendations ul {\r\n  margin: 0;\r\n  padding-left: 15px;\r\n  list-style-type: disc;\r\n}\r\n\r\n.recommendations li {\r\n  margin-bottom: 4px;\r\n  line-height: 1.3;\r\n  color: #ffeb3b;\r\n  font-size: 10px;\r\n}\r\n\r\n.performance-toggle {\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  border: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  z-index: 9998;\r\n  backdrop-filter: blur(10px);\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.performance-toggle:hover {\r\n  background: rgba(0, 0, 0, 0.9);\r\n}\r\n\r\n/* 响应式 */\r\n@media (max-width: 768px) {\r\n  .performance-panel {\r\n    width: 280px;\r\n    right: 10px;\r\n    top: 10px;\r\n  }\r\n  \r\n  .performance-toggle {\r\n    right: 10px;\r\n    top: 10px;\r\n    width: 36px;\r\n    height: 36px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"home\">\r\n    <!-- 头部信息 -->\r\n    <header class=\"header\">\r\n      <div class=\"baby-info\">\r\n        <div class=\"avatar\">👶</div>\r\n        <div class=\"info\">\r\n          <h1 class=\"baby-name\">刘知许小朋友</h1>\r\n          <p class=\"baby-age\">{{ currentAge }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"stats\">\r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-number\">{{ totalEvents }}</div>\r\n          <div class=\"stat-label\">个事件</div>\r\n        </div>\r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-number\">{{ totalPhotos }}</div>\r\n          <div class=\"stat-label\">张照片</div>\r\n        </div>\r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-number\">{{ totalVideos }}</div>\r\n          <div class=\"stat-label\">个视频</div>\r\n        </div>\r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-number\">{{ totalAudios }}</div>\r\n          <div class=\"stat-label\">段录音</div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n\r\n\r\n\r\n    <!-- 时间线 -->\r\n    <div class=\"timeline-container\">\r\n      <div class=\"timeline-header\">\r\n        <h2 class=\"timeline-title\">成长时光轴</h2>\r\n        <div class=\"sort-control\">\r\n          <label class=\"sort-checkbox\">\r\n            <input \r\n              type=\"checkbox\" \r\n              v-model=\"sortAscending\" \r\n              @change=\"onSortChange\"\r\n            />\r\n            <span class=\"checkmark\"></span>\r\n            <span class=\"sort-label\">{{ sortAscending ? '最新在下' : '最新在上' }}</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 加载状态 -->\r\n      <div v-if=\"loading\" class=\"loading-container\">\r\n        <div class=\"loading-spinner\">⏳</div>\r\n        <p>正在加载成长记录...</p>\r\n      </div>\r\n      \r\n      <!-- 错误状态 -->\r\n      <div v-else-if=\"error\" class=\"error-container\">\r\n        <div class=\"error-icon\">⚠️</div>\r\n        <p>{{ error }}</p>\r\n        <button class=\"retry-btn\" @click=\"loadEventsList\">重试</button>\r\n      </div>\r\n      \r\n      <!-- 时间线内容 -->\r\n      <div v-else class=\"timeline\">\r\n        <div \r\n          v-for=\"(period, index) in sortedTimelinePeriods\" \r\n          :key=\"index\"\r\n          class=\"timeline-period\"\r\n        >\r\n          <div class=\"period-header\">\r\n            <div class=\"period-age\">{{ period.age }}</div>\r\n            <div class=\"period-date\">{{ period.date }}</div>\r\n          </div>\r\n          <div class=\"events-grid\">\r\n            <div \r\n              v-for=\"event in period.events\" \r\n              :key=\"event.id\"\r\n              class=\"event-card\"\r\n              :data-event-id=\"event.id\"\r\n              @click=\"viewEvent(event)\"\r\n            >\r\n              <div class=\"event-photos\">\r\n                <!-- 显示图片 -->\r\n                <LazyImage\r\n                  v-for=\"(image, photoIndex) in getAllMediaItems(event).slice(0, 4)\" \r\n                  :key=\"`${image.type}-${photoIndex}`\"\r\n                  :src=\"getMediaUrl(event.id, image.fileName, true)\"\r\n                  :alt=\"`${event.title} - ${image.type === 'video' ? '视频' : '图片'}${photoIndex + 1}`\"\r\n                  :small=\"getAllMediaItems(event).length > 1\"\r\n                  :preload=\"shouldPreloadImage(index, photoIndex)\"\r\n                  :priority=\"getImagePriority(index, photoIndex)\"\r\n                  :threshold=\"loadingStrategy.threshold\"\r\n                  class=\"photo-item\"\r\n                  :class=\"{ \r\n                    'small': getAllMediaItems(event).length > 1,\r\n                    'video-thumbnail': image.type === 'video'\r\n                  }\"\r\n                />\r\n                <div v-if=\"getAllMediaItems(event).length > 4\" class=\"more-photos\">\r\n                  +{{ getAllMediaItems(event).length - 4 }}\r\n                </div>\r\n              </div>\r\n              <div class=\"event-info\">\r\n                <h3 class=\"event-title\">{{ event.title }}</h3>\r\n                <p class=\"event-description\">{{ event.description }}</p>\r\n                <div class=\"event-meta\">\r\n                  <span v-if=\"event.media.audios.length > 0\" class=\"audio-indicator\">🎵</span>\r\n                  <span v-if=\"event.media.videos.length > 0\" class=\"video-indicator\">🎬</span>\r\n                  <span class=\"photo-count\">{{ event.media.images.length }}张照片</span>\r\n                  <span v-if=\"event.media.videos.length > 0\" class=\"video-count\">{{ event.media.videos.length }}个视频</span>\r\n                  <span v-if=\"event.media.audios.length > 0\" class=\"audio-count\">{{ event.media.audios.length }}段音频</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 快速添加按钮 -->\r\n    <button class=\"fab\" @click=\"addEvent\">\r\n      ➕\r\n    </button>\r\n\r\n    <!-- 性能监控面板（仅开发环境） -->\r\n    <PerformancePanel />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, nextTick } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport dayjs from 'dayjs'\r\nimport { getEventsList, getStats, getMediaUrl } from '@/api/events'\r\nimport LazyImage from '@/components/LazyImage.vue'\r\nimport PerformancePanel from '@/components/PerformancePanel.vue'\r\nimport { preloadEventImages } from '@/utils/imageUtils'\r\nimport { adaptiveImageLoader } from '@/utils/imagePerformance'\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  components: {\r\n    LazyImage,\r\n    PerformancePanel\r\n  },\r\n  setup() {\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n    const babyBirthDate = ref(dayjs('2025-05-09')) // 宝宝出生日期：2025年5月9日\r\n    \r\n    // 计算当前年龄\r\n    const currentAge = computed(() => {\r\n      const now = dayjs()\r\n      const birth = babyBirthDate.value\r\n      \r\n      // 如果出生日期在未来，返回\"即将出生\"\r\n      if (now.isBefore(birth)) {\r\n        return '即将出生'\r\n      }\r\n      \r\n      const totalMonths = now.diff(birth, 'month')\r\n      \r\n      if (totalMonths < 12) {\r\n        // 计算准确的天数：当前日期减去这个月开始时对应的出生月日\r\n        const monthStart = birth.add(totalMonths, 'month')\r\n        const days = now.diff(monthStart, 'day')\r\n        \r\n        if (totalMonths === 0) {\r\n          const totalDays = now.diff(birth, 'day')\r\n          return `${totalDays}天`\r\n        } else {\r\n          return `${totalMonths}个月${days > 0 ? ` ${days}天` : ''}`\r\n        }\r\n      } else {\r\n        const years = Math.floor(totalMonths / 12)\r\n        const remainingMonths = totalMonths % 12\r\n        return `${years}岁${remainingMonths > 0 ? ` ${remainingMonths}个月` : ''}`\r\n      }\r\n    })\r\n\r\n    // 从localStorage获取排序状态\r\n    const getSortPreference = () => {\r\n      try {\r\n        const saved = localStorage.getItem('baby-log-sort-ascending')\r\n        return saved !== null ? JSON.parse(saved) : false\r\n      } catch (error) {\r\n        console.warn('获取排序偏好失败:', error)\r\n        return false\r\n      }\r\n    }\r\n\r\n    // 保存排序状态到localStorage\r\n    const saveSortPreference = (ascending) => {\r\n      try {\r\n        localStorage.setItem('baby-log-sort-ascending', JSON.stringify(ascending))\r\n      } catch (error) {\r\n        console.warn('保存排序偏好失败:', error)\r\n      }\r\n    }\r\n\r\n    // 响应式数据\r\n    const timelinePeriods = ref([])\r\n    const loading = ref(true)\r\n    const error = ref('')\r\n    const sortAscending = ref(getSortPreference()) // 从localStorage获取初始状态\r\n    const stats = ref({\r\n      totalEvents: 0,\r\n      totalPhotos: 0,\r\n      totalVideos: 0,\r\n      totalAudios: 0\r\n    })\r\n\r\n    // 获取自适应加载策略\r\n    const loadingStrategy = adaptiveImageLoader.getLoadingStrategy()\r\n\r\n    // 加载事件列表\r\n    const loadEventsList = async () => {\r\n      try {\r\n        loading.value = true\r\n        error.value = ''\r\n        \r\n        const response = await getEventsList()\r\n        if (response.success) {\r\n          timelinePeriods.value = response.data\r\n          \r\n          // 预加载关键图片（根据网络情况调整数量）\r\n          const allEvents = response.data.flatMap(period => period.events)\r\n          if (allEvents.length > 0 && loadingStrategy.enablePreload) {\r\n            preloadEventImages(allEvents, loadingStrategy.preloadCount, getMediaUrl)\r\n          }\r\n        } else {\r\n          error.value = response.message || '获取事件列表失败'\r\n        }\r\n      } catch (err) {\r\n        error.value = '网络错误，请稍后重试'\r\n        console.error('加载事件列表失败:', err)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 加载统计数据\r\n    const loadStats = async () => {\r\n      try {\r\n        const response = await getStats()\r\n        if (response.success) {\r\n          stats.value = response.data\r\n        }\r\n      } catch (err) {\r\n        console.error('加载统计数据失败:', err)\r\n      }\r\n    }\r\n\r\n    // 计算统计数据（使用API获取的stats数据）\r\n    const totalEvents = computed(() => stats.value.totalEvents)\r\n    const totalPhotos = computed(() => stats.value.totalPhotos)\r\n    const totalVideos = computed(() => stats.value.totalVideos)\r\n    const totalAudios = computed(() => stats.value.totalAudios)\r\n\r\n    // 计算排序后的时间线数据\r\n    const sortedTimelinePeriods = computed(() => {\r\n      if (!timelinePeriods.value || timelinePeriods.value.length === 0) {\r\n        return []\r\n      }\r\n      \r\n      const sorted = [...timelinePeriods.value]\r\n      \r\n      if (sortAscending.value) {\r\n        // 正序：最旧的在上，最新的在下\r\n        return sorted.sort((a, b) => {\r\n          // 使用period中第一个事件的日期进行排序\r\n          const dateA = new Date(a.events[0]?.date || '1970-01-01')\r\n          const dateB = new Date(b.events[0]?.date || '1970-01-01')\r\n          return dateA - dateB\r\n        })\r\n      } else {\r\n        // 倒序：最新的在上，最旧的在下（默认）\r\n        return sorted.sort((a, b) => {\r\n          const dateA = new Date(a.events[0]?.date || '1970-01-01')\r\n          const dateB = new Date(b.events[0]?.date || '1970-01-01')\r\n          return dateB - dateA\r\n        })\r\n      }\r\n    })\r\n\r\n    // 方法\r\n    const viewEvent = (event) => {\r\n      console.log('查看事件:', event)\r\n      // 跳转到事件详情页\r\n      router.push(`/event/${event.id}`)\r\n    }\r\n\r\n    const addEvent = () => {\r\n      console.log('添加新事件')\r\n      // 跳转到添加事件页面\r\n      router.push('/add')\r\n    }\r\n    \r\n    const goToChunkUpload = () => {\r\n      console.log('前往分片上传页面')\r\n      // 跳转到分片上传页面\r\n      router.push('/chunk-upload')\r\n    }\r\n\r\n    const onSortChange = () => {\r\n      console.log('排序方式改变:', sortAscending.value ? '正序' : '倒序')\r\n      // 保存用户的排序偏好到localStorage\r\n      saveSortPreference(sortAscending.value)\r\n    }\r\n\r\n    // 判断是否应该预加载图片\r\n    const shouldPreloadImage = (eventIndex, photoIndex) => {\r\n      // 为前2个事件的第一张图片启用预加载\r\n      return eventIndex < 2 && photoIndex === 0\r\n    }\r\n\r\n    // 获取图片加载优先级\r\n    const getImagePriority = (eventIndex, photoIndex) => {\r\n      // 前3个事件的第一张图片为高优先级\r\n      if (eventIndex < 3 && photoIndex === 0) {\r\n        return 'high'\r\n      }\r\n      // 前6个事件的其他图片为普通优先级\r\n      if (eventIndex < 6) {\r\n        return 'normal'\r\n      }\r\n      // 其余为低优先级\r\n      return 'low'\r\n    }\r\n\r\n    // 获取所有媒体项目（图片和视频缩略图）\r\n    const getAllMediaItems = (event) => {\r\n      const allMedia = []\r\n      \r\n      // 添加图片\r\n      if (event.media.images && event.media.images.length > 0) {\r\n        event.media.images.forEach(image => {\r\n          allMedia.push({\r\n            ...image,\r\n            type: 'image'\r\n          })\r\n        })\r\n      }\r\n      \r\n      // 添加视频（作为缩略图显示）\r\n      if (event.media.videos && event.media.videos.length > 0) {\r\n        event.media.videos.forEach(video => {\r\n          allMedia.push({\r\n            ...video,\r\n            type: 'video'\r\n          })\r\n        })\r\n      }\r\n      \r\n      return allMedia\r\n    }\r\n\r\n    // 自动定位到指定事件\r\n    const scrollToEvent = async (eventId) => {\r\n      await nextTick()\r\n      \r\n      // 查找包含该事件的卡片元素\r\n      const eventCard = document.querySelector(`[data-event-id=\"${eventId}\"]`)\r\n      if (eventCard) {\r\n        // 滚动到指定位置并高亮显示\r\n        eventCard.scrollIntoView({ \r\n          behavior: 'smooth', \r\n          block: 'center' \r\n        })\r\n      \r\n      } else {\r\n        console.warn('未找到指定的事件卡片:', eventId)\r\n      }\r\n    }\r\n\r\n    // 查找最新事件ID\r\n    const findLatestEventId = () => {\r\n      if (timelinePeriods.value && timelinePeriods.value.length > 0) {\r\n        // 获取所有事件并按日期排序，找到最新的\r\n        const allEvents = timelinePeriods.value.flatMap(period => period.events)\r\n        if (allEvents.length > 0) {\r\n          const latestEvent = allEvents.sort((a, b) => new Date(b.date) - new Date(a.date))[0]\r\n          return latestEvent.id\r\n        }\r\n      }\r\n      return null\r\n    }\r\n\r\n    // 查找ID数字最接近的事件\r\n    const findClosestEventId = (targetId) => {\r\n      if (!timelinePeriods.value || timelinePeriods.value.length === 0) {\r\n        return null\r\n      }\r\n\r\n      const allEvents = timelinePeriods.value.flatMap(period => period.events)\r\n      if (allEvents.length === 0) {\r\n        return null\r\n      }\r\n\r\n      const targetIdNum = parseInt(targetId, 10)\r\n      if (isNaN(targetIdNum)) {\r\n        // 如果目标ID不是数字，返回最新事件\r\n        return findLatestEventId()\r\n      }\r\n\r\n      // 找到ID数字最接近的事件\r\n      let closestEvent = allEvents[0]\r\n      let minDifference = Math.abs(parseInt(closestEvent.id, 10) - targetIdNum)\r\n\r\n      for (const event of allEvents) {\r\n        const eventIdNum = parseInt(event.id, 10)\r\n        if (!isNaN(eventIdNum)) {\r\n          const difference = Math.abs(eventIdNum - targetIdNum)\r\n          if (difference < minDifference) {\r\n            minDifference = difference\r\n            closestEvent = event\r\n          }\r\n        }\r\n      }\r\n\r\n      return closestEvent.id\r\n    }\r\n\r\n    // 页面初始化\r\n    onMounted(async () => {\r\n      await Promise.all([\r\n        loadEventsList(),\r\n        loadStats()\r\n      ])\r\n      \r\n      // 检查是否需要定位到特定事件\r\n      const highlightId = route.query.highlight\r\n      if (highlightId) {\r\n        // 检查该事件是否存在\r\n        const allEvents = timelinePeriods.value.flatMap(period => period.events)\r\n        const targetEvent = allEvents.find(event => String(event.id) === String(highlightId))\r\n        \r\n        if (targetEvent) {\r\n          // 事件存在，定位到该事件\r\n          scrollToEvent(highlightId)\r\n        } else {\r\n          // 事件不存在，寻找ID数字最接近的事件\r\n          const closestEventId = findClosestEventId(highlightId)\r\n          if (closestEventId) {\r\n            scrollToEvent(closestEventId)\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    return {\r\n      currentAge,\r\n      timelinePeriods,\r\n      sortedTimelinePeriods,\r\n      sortAscending,\r\n      totalEvents,\r\n      totalPhotos,\r\n      totalVideos,\r\n      totalAudios,\r\n      loading,\r\n      error,\r\n      viewEvent,\r\n      addEvent,\r\n      goToChunkUpload,\r\n      loadEventsList,\r\n      onSortChange,\r\n      getSortPreference,\r\n      saveSortPreference,\r\n      getMediaUrl,\r\n      scrollToEvent,\r\n      findLatestEventId,\r\n      findClosestEventId,\r\n      shouldPreloadImage,\r\n      getImagePriority,\r\n      getAllMediaItems,\r\n      loadingStrategy\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n  padding: 20px;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n}\r\n\r\n/* 头部信息 */\r\n.header {\r\n  background: white;\r\n  border-radius: 20px;\r\n  padding: 25px;\r\n  margin: 0 auto 30px auto;\r\n  max-width: 800px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n  backdrop-filter: blur(10px);\r\n}\r\n\r\n.baby-info {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.avatar {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 40px;\r\n  margin-right: 20px;\r\n}\r\n\r\n.baby-name {\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin: 0 0 5px 0;\r\n}\r\n\r\n.baby-age {\r\n  font-size: 16px;\r\n  color: #7f8c8d;\r\n  margin: 0;\r\n}\r\n\r\n.stats {\r\n  display: flex;\r\n  gap: 20px;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n\r\n.stat-item {\r\n  text-align: center;\r\n}\r\n\r\n.stat-number {\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  color: #e74c3c;\r\n  line-height: 1;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #7f8c8d;\r\n  margin-top: 5px;\r\n}\r\n\r\n\r\n\r\n/* 时间线 */\r\n.timeline-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.timeline-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.timeline-title {\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n}\r\n\r\n.sort-control {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.sort-checkbox {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  color: #7f8c8d;\r\n  user-select: none;\r\n}\r\n\r\n.sort-checkbox input[type=\"checkbox\"] {\r\n  display: none;\r\n}\r\n\r\n.checkmark {\r\n  width: 18px;\r\n  height: 18px;\r\n  border: 2px solid #bdc3c7;\r\n  border-radius: 4px;\r\n  margin-right: 8px;\r\n  position: relative;\r\n  transition: all 0.3s ease;\r\n  background: white;\r\n}\r\n\r\n.sort-checkbox input[type=\"checkbox\"]:checked + .checkmark {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border-color: #667eea;\r\n}\r\n\r\n.sort-checkbox input[type=\"checkbox\"]:checked + .checkmark::after {\r\n  content: '✓';\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: white;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n}\r\n\r\n.sort-label {\r\n  font-weight: 500;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.sort-checkbox:hover .sort-label {\r\n  color: #5a6c7d;\r\n}\r\n\r\n.timeline-period {\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.period-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.period-age {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 25px;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  margin-right: 15px;\r\n}\r\n\r\n.period-date {\r\n  color: #7f8c8d;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 事件网格 */\r\n.events-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.event-card {\r\n  background: white;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.event-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.event-card.highlight-event {\r\n  animation: highlightPulse 3s ease-in-out;\r\n  border: 3px solid #3498db;\r\n  box-shadow: 0 0 20px rgba(52, 152, 219, 0.3);\r\n}\r\n\r\n@keyframes highlightPulse {\r\n  0% {\r\n    border-color: #3498db;\r\n    box-shadow: 0 0 20px rgba(52, 152, 219, 0.3);\r\n  }\r\n  50% {\r\n    border-color: #2980b9;\r\n    box-shadow: 0 0 30px rgba(41, 128, 185, 0.5);\r\n  }\r\n  100% {\r\n    border-color: #3498db;\r\n    box-shadow: 0 0 20px rgba(52, 152, 219, 0.3);\r\n  }\r\n}\r\n\r\n.event-photos {\r\n  height: 150px;\r\n  background: #f8f9fa;\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 10px;\r\n  gap: 5px;\r\n}\r\n\r\n.photo-item {\r\n  flex: 1;\r\n  min-height: 60px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.photo-item.small {\r\n  max-width: 48%;\r\n  max-height: 65px;\r\n}\r\n\r\n.photo-item.video-thumbnail {\r\n  position: relative;\r\n}\r\n\r\n.photo-item.video-thumbnail::after {\r\n  content: '▶️';\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 12px;\r\n  pointer-events: none;\r\n}\r\n\r\n.more-photos {\r\n  position: absolute;\r\n  bottom: 15px;\r\n  right: 15px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border-radius: 15px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n}\r\n\r\n.event-info {\r\n  padding: 20px;\r\n}\r\n\r\n.event-title {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin: 0 0 10px 0;\r\n}\r\n\r\n.event-description {\r\n  font-size: 14px;\r\n  color: #7f8c8d;\r\n  line-height: 1.6;\r\n  margin: 0 0 15px 0;\r\n}\r\n\r\n.event-meta {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  font-size: 12px;\r\n  color: #95a5a6;\r\n}\r\n\r\n.audio-indicator, .video-indicator {\r\n  font-size: 14px;\r\n}\r\n\r\n.video-indicator {\r\n  color: #8e44ad;\r\n}\r\n\r\n.audio-indicator {\r\n  color: #e67e22;\r\n}\r\n\r\n/* 悬浮添加按钮 */\r\n.fab {\r\n  position: fixed;\r\n  bottom: 30px;\r\n  right: 30px;\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);\r\n  color: white;\r\n  border: none;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  box-shadow: 0 4px 20px rgba(255, 107, 107, 0.4);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.fab:hover {\r\n  transform: scale(1.1);\r\n  box-shadow: 0 6px 25px rgba(255, 107, 107, 0.5);\r\n}\r\n\r\n.fab-upload {\r\n  bottom: 100px;\r\n  background: linear-gradient(135deg, #4e54c8 0%, #8f94fb 100%);\r\n  box-shadow: 0 4px 20px rgba(78, 84, 200, 0.4);\r\n}\r\n\r\n.fab-upload:hover {\r\n  box-shadow: 0 6px 25px rgba(78, 84, 200, 0.5);\r\n}\r\n\r\n/* 加载和错误状态 */\r\n.loading-container, .error-container {\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.loading-spinner, .error-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.retry-btn {\r\n  background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  margin-top: 15px;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.retry-btn:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .home {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .header {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .baby-info {\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n  \r\n  .avatar {\r\n    margin-right: 0;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .stats {\r\n    justify-content: center;\r\n    gap: 15px;\r\n  }\r\n  \r\n  .stat-item {\r\n    flex: 1;\r\n    min-width: 60px;\r\n  }\r\n  \r\n  .events-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .period-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n  }\r\n\r\n  .timeline-header {\r\n    flex-direction: column;\r\n    gap: 15px;\r\n    align-items: center;\r\n  }\r\n\r\n  .timeline-title {\r\n    text-align: center;\r\n  }\r\n\r\n\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"event-detail\">\r\n    <!-- 返回按钮 -->\r\n    <header class=\"detail-header\">\r\n      <button class=\"back-btn\" @click=\"goBack\">\r\n        ← 返回\r\n      </button>\r\n      <h1 class=\"page-title\">事件详情</h1>\r\n    </header>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading\">\r\n      <div class=\"loading-spinner\">⏳</div>\r\n      <p>正在加载事件详情...</p>\r\n    </div>\r\n\r\n    <!-- 错误状态 -->\r\n    <div v-else-if=\"error\" class=\"error-container\">\r\n      <div class=\"error-icon\">⚠️</div>\r\n      <p>{{ error }}</p>\r\n      <button class=\"retry-btn\" @click=\"loadEventDetail\">重试</button>\r\n    </div>\r\n\r\n    <!-- 事件信息 -->\r\n    <div class=\"event-container\" v-else-if=\"event\">\r\n      <div class=\"event-header\">\r\n        <h2 class=\"event-title\">{{ event.title }}</h2>\r\n        <div class=\"event-meta-info\">\r\n          <span class=\"event-date\">{{ formatDate(event.date) }}</span>\r\n          <span class=\"event-age\">{{ getAgeAtEvent(event.date) }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 照片展示 -->\r\n      <div class=\"photos-section\" v-if=\"event.media.images && event.media.images.length > 0\">\r\n        <h3 class=\"section-title\">照片 ({{ event.media.images.length }}张)</h3>\r\n        <div class=\"photos-grid\">\r\n          <div \r\n            v-for=\"(image, index) in event.media.images\" \r\n            :key=\"index\"\r\n            class=\"photo-item\"\r\n            @click=\"openPhotoViewer(index)\"\r\n          >\r\n            <div \r\n              class=\"photo-placeholder\"\r\n              :style=\"{ backgroundImage: `url(${getMediaUrl(event.id, image.fileName,true)})` }\"\r\n            >\r\n              <span v-if=\"!image.fileName\" class=\"photo-icon\">📷</span>\r\n              <span class=\"photo-index\">{{ index + 1 }}</span>\r\n            </div>\r\n            <p class=\"media-desc\">{{ image.desc }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 视频展示 -->\r\n      <div class=\"videos-section\" v-if=\"event.media.videos && event.media.videos.length > 0\">\r\n        <h3 class=\"section-title\">视频 ({{ event.media.videos.length }}个)</h3>\r\n        <div class=\"videos-grid\">\r\n          <div \r\n            v-for=\"(video, index) in event.media.videos\" \r\n            :key=\"index\"\r\n            class=\"video-item\"\r\n          >\r\n            <div class=\"video-container\" @click=\"openVideoPlayer(video, index)\">\r\n              <div \r\n                class=\"video-preview\"\r\n                :style=\"{ backgroundImage: `url(${getMediaUrl(event.id, video.fileName, true)})` }\"\r\n              >\r\n                <span v-if=\"!video.fileName\" class=\"video-icon\">🎬</span>\r\n              </div>\r\n              <div class=\"video-overlay\">\r\n                <span class=\"play-overlay\">▶️</span>\r\n                <span class=\"video-duration\" v-if=\"video.duration\">{{ formatDuration(video.duration) }}</span>\r\n              </div>\r\n            </div>\r\n            <p class=\"media-desc\">{{ video.desc }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 音频播放 -->\r\n      <div class=\"audio-section\" v-if=\"event.media.audios && event.media.audios.length > 0\">\r\n        <h3 class=\"section-title\">录音 ({{ event.media.audios.length }}段)</h3>\r\n        <div class=\"audio-list\">\r\n          <div \r\n            v-for=\"(audio, index) in event.media.audios\" \r\n            :key=\"index\"\r\n            class=\"audio-item\"\r\n          >\r\n            <div class=\"audio-player\">\r\n              <button class=\"play-btn\" @click=\"toggleAudio(audio, index)\">\r\n                <span v-if=\"currentPlayingAudio === index && isAudioPlaying\">⏸️</span>\r\n                <span v-else-if=\"currentPlayingAudio === index && isAudioLoading\">⏳</span>\r\n                <span v-else>▶️</span>\r\n              </button>\r\n              <div class=\"audio-info\">\r\n                <span class=\"audio-desc\">{{ audio.desc }}</span>\r\n                <div class=\"audio-progress\" v-if=\"currentPlayingAudio === index\">\r\n                  <div class=\"progress-bar\">\r\n                    <div \r\n                      class=\"progress-fill\" \r\n                      :style=\"{ width: audioProgress + '%' }\"\r\n                    ></div>\r\n                  </div>\r\n                  <span class=\"time-display\">\r\n                    {{ formatTime(audioCurrentTime) }} / {{ formatTime(audioDuration) }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"audio-controls\" v-if=\"currentPlayingAudio === index\">\r\n                <button class=\"volume-btn\" @click=\"toggleMute\">\r\n                  {{ isAudioMuted ? '🔇' : '🔊' }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <!-- 隐藏的音频元素 -->\r\n            <audio \r\n              :ref=\"`audioPlayer${index}`\"\r\n              :src=\"getMediaUrl(event.id, audio.fileName)\"\r\n              @loadedmetadata=\"onAudioLoadedMetadata\"\r\n              @timeupdate=\"onAudioTimeUpdate\"\r\n              @ended=\"onAudioEnded\"\r\n              @error=\"onAudioError\"\r\n              @loadstart=\"onAudioLoadStart\"\r\n              @canplay=\"onAudioCanPlay\"\r\n              preload=\"metadata\"\r\n            ></audio>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 事件描述 -->\r\n      <div class=\"description-section\">\r\n        <h3 class=\"section-title\">详细描述</h3>\r\n        <p class=\"event-description\">{{ event.description }}</p>\r\n      </div>\r\n\r\n      <!-- 其他信息 -->\r\n      <div class=\"additional-info\">\r\n        <div class=\"info-item\" v-if=\"event.location\">\r\n          <span class=\"info-label\">地点:</span>\r\n          <span class=\"info-value\">{{ event.location }}</span>\r\n        </div>\r\n        <div class=\"info-item\">\r\n          <span class=\"info-label\">记录时间:</span>\r\n          <span class=\"info-value\">{{ formatDateTime(event.date) }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 操作按钮 -->\r\n      <div class=\"action-buttons\">\r\n        <button class=\"edit-btn\" @click=\"editEvent\">\r\n          ✏️ 编辑\r\n        </button>\r\n        <button class=\"delete-btn\" @click=\"deleteEvent\">\r\n          🗑️ 删除\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n    <!-- 照片查看器模态框 -->\r\n    <div class=\"photo-modal\" v-if=\"showPhotoViewer\" @click=\"closePhotoViewer\">\r\n      <div class=\"modal-content\" @click.stop @touchstart=\"handleTouchStart\" @touchmove=\"handleTouchMove\" @touchend=\"handleTouchEnd\">\r\n        <button class=\"modal-close\" @click=\"closePhotoViewer\">✕</button>\r\n        \r\n        <!-- PC端缩放控制按钮 -->\r\n        <div class=\"zoom-controls desktop-only\">\r\n          <button class=\"zoom-btn\" @click=\"zoomOut\" :disabled=\"imageScale <= minScale\">−</button>\r\n          <span class=\"zoom-level\">{{ Math.round(imageScale * 100) }}%</span>\r\n          <button class=\"zoom-btn\" @click=\"zoomIn\" :disabled=\"imageScale >= maxScale\">+</button>\r\n          <button class=\"zoom-btn reset\" @click=\"resetZoom\" v-if=\"imageScale !== 1\">重置</button>\r\n        </div>\r\n        \r\n        <div class=\"photo-viewer\">\r\n          <button class=\"nav-btn prev\" @click=\"prevPhoto\" v-if=\"currentPhotoIndex > 0\">‹</button>\r\n          <div class=\"current-photo\">\r\n            <div \r\n              class=\"large-photo-container\"\r\n              @dblclick=\"handleDoubleClick\"\r\n            >\r\n              <div \r\n                class=\"large-photo-placeholder\"\r\n                :style=\"{\r\n                  backgroundImage: `url(${getMediaUrl(event.id, event.media.images[currentPhotoIndex].fileName)})`,\r\n                  transform: `scale(${imageScale}) translate(${imageTranslateX}px, ${imageTranslateY}px)`,\r\n                  transition: imageScale === 1 ? 'transform 0.3s ease' : 'none'\r\n                }\"\r\n              >\r\n                <span v-if=\"!event.media.images[currentPhotoIndex].fileName\" class=\"photo-icon\">📷</span>\r\n              </div>\r\n            </div>\r\n            <p class=\"photo-counter\">{{ currentPhotoIndex + 1 }} / {{ event.media.images.length }}</p>\r\n            <div class=\"swipe-hint\">\r\n              <span class=\"hint-text\" v-if=\"imageScale <= 1\">← 滑动切换 →</span>\r\n              <span class=\"hint-text\" v-else>双击重置缩放</span>\r\n            </div>\r\n          </div>\r\n          <button class=\"nav-btn next\" @click=\"nextPhoto\" v-if=\"currentPhotoIndex < event.media.images.length - 1\">›</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport dayjs from 'dayjs'\r\nimport { getEventById, deleteEvent, getMediaUrl } from '@/api/events'\r\nimport { createPhotoViewerGesture } from '@/utils/touchGestureManager'\r\n\r\nexport default {\r\n  name: 'EventDetail',\r\n  components: {\r\n  },\r\n  setup() {\r\n    const route = useRoute()\r\n    const router = useRouter()\r\n    \r\n    const event = ref(null)\r\n    const isPlaying = ref(false)\r\n    const showPhotoViewer = ref(false)\r\n    const currentPhotoIndex = ref(0)\r\n\r\n    const currentPlayingAudio = ref(-1)\r\n    const isAudioPlaying = ref(false)\r\n    const isAudioLoading = ref(false)\r\n    const isAudioMuted = ref(false)\r\n    const audioProgress = ref(0)\r\n    const audioCurrentTime = ref(0)\r\n    const audioDuration = ref(0)\r\n    const currentAudioElement = ref(null)\r\n    const loading = ref(true)\r\n    const error = ref('')\r\n    \r\n    // 图片缩放相关\r\n    const imageScale = ref(1)\r\n    const imageTranslateX = ref(0)\r\n    const imageTranslateY = ref(0)\r\n    const minScale = 0.5\r\n    const maxScale = 3\r\n    \r\n    // 触摸手势管理器\r\n    const gestureManager = ref(null)\r\n    \r\n\r\n\r\n    // 获取事件详情\r\n    const loadEventDetail = async () => {\r\n      try {\r\n        loading.value = true\r\n        error.value = ''\r\n        \r\n        const eventId = route.params.id\r\n        const response = await getEventById(eventId)\r\n        \r\n        if (response.success) {\r\n          event.value = response.data\r\n        } else {\r\n          error.value = response.message || '获取事件详情失败'\r\n          // 如果事件不存在，3秒后返回首页\r\n          if (response.message === '事件不存在') {\r\n            setTimeout(() => {\r\n              router.push('/')\r\n            }, 3000)\r\n          }\r\n        }\r\n      } catch (err) {\r\n        error.value = '网络错误，请稍后重试'\r\n        console.error('加载事件详情失败:', err)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 格式化日期\r\n    const formatDate = (date) => {\r\n      return dayjs(date).format('YYYY年MM月DD日')\r\n    }\r\n\r\n    // 格式化完整日期时间\r\n    const formatDateTime = (date) => {\r\n      return dayjs(date).format('YYYY年MM月DD日 HH:mm')\r\n    }\r\n\r\n    // 计算事件发生时宝宝的年龄\r\n    const getAgeAtEvent = (eventDate) => {\r\n      const birth = dayjs('2025-05-09')\r\n      const eventDay = dayjs(eventDate)\r\n      const totalMonths = eventDay.diff(birth, 'month')\r\n      \r\n      if (totalMonths < 12) {\r\n        const monthStart = birth.add(totalMonths, 'month')\r\n        const days = eventDay.diff(monthStart, 'day')\r\n        \r\n        if (totalMonths === 0) {\r\n          const totalDays = eventDay.diff(birth, 'day')\r\n          return `出生第${totalDays}天`\r\n        } else {\r\n          return `${totalMonths}个月${days > 0 ? `${days}天` : ''}`\r\n        }\r\n      } else {\r\n        const years = Math.floor(totalMonths / 12)\r\n        const remainingMonths = totalMonths % 12\r\n        return `${years}岁${remainingMonths > 0 ? `${remainingMonths}个月` : ''}`\r\n      }\r\n    }\r\n\r\n    // 返回首页\r\n    const goBack = () => {\r\n      // 返回首页时传递当前事件ID，用于定位\r\n      router.push({\r\n        path: '/',\r\n        query: { highlight: event.value?.id }\r\n      })\r\n    }\r\n\r\n    // 打开照片查看器\r\n    const openPhotoViewer = (index) => {\r\n      currentPhotoIndex.value = index\r\n      showPhotoViewer.value = true\r\n      // 初始化手势管理器\r\n      setTimeout(() => {\r\n        initGestureManager()\r\n        gestureManager.value.activate()\r\n      }, 100)\r\n    }\r\n\r\n    // 关闭照片查看器\r\n    const closePhotoViewer = () => {\r\n      showPhotoViewer.value = false\r\n      // 停用手势管理器\r\n      if (gestureManager.value) {\r\n        gestureManager.value.deactivate()\r\n      }\r\n      // 重置缩放状态\r\n      resetImageTransform()\r\n    }\r\n    \r\n    // 重置图片变换\r\n    const resetImageTransform = () => {\r\n      imageScale.value = 1\r\n      imageTranslateX.value = 0\r\n      imageTranslateY.value = 0\r\n    }\r\n    \r\n    // 放大图片\r\n    const zoomIn = () => {\r\n      if (imageScale.value < maxScale) {\r\n        imageScale.value = Math.min(imageScale.value * 1.5, maxScale)\r\n        // 同步手势管理器状态\r\n        if (gestureManager.value) {\r\n          gestureManager.value.setScale(imageScale.value)\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 缩小图片\r\n    const zoomOut = () => {\r\n      if (imageScale.value > minScale) {\r\n        imageScale.value = Math.max(imageScale.value / 1.5, minScale)\r\n        // 如果缩小后超出边界，重置位置\r\n        if (imageScale.value <= 1) {\r\n          imageTranslateX.value = 0\r\n          imageTranslateY.value = 0\r\n        }\r\n        // 同步手势管理器状态\r\n        if (gestureManager.value) {\r\n          gestureManager.value.setScale(imageScale.value)\r\n          gestureManager.value.setTranslate(imageTranslateX.value, imageTranslateY.value)\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 重置缩放\r\n    const resetZoom = () => {\r\n      resetImageTransform()\r\n      // 同步手势管理器状态\r\n      if (gestureManager.value) {\r\n        gestureManager.value.setScale(1)\r\n        gestureManager.value.setTranslate(0, 0)\r\n      }\r\n    }\r\n    \r\n    // 双击缩放（保留用于桌面端）\r\n    const handleDoubleClick = () => {\r\n      if (imageScale.value === 1) {\r\n        imageScale.value = 2\r\n        if (gestureManager.value) {\r\n          gestureManager.value.setScale(2)\r\n        }\r\n      } else {\r\n        resetImageTransform()\r\n        if (gestureManager.value) {\r\n          gestureManager.value.setScale(1)\r\n          gestureManager.value.setTranslate(0, 0)\r\n        }\r\n      }\r\n    }\r\n\r\n    // 上一张照片\r\n    const prevPhoto = () => {\r\n      if (currentPhotoIndex.value > 0) {\r\n        currentPhotoIndex.value--\r\n        resetImageTransform()\r\n        // 同步手势管理器状态\r\n        if (gestureManager.value) {\r\n          gestureManager.value.setScale(1)\r\n          gestureManager.value.setTranslate(0, 0)\r\n        }\r\n      }\r\n    }\r\n\r\n    // 下一张照片\r\n    const nextPhoto = () => {\r\n      if (currentPhotoIndex.value < event.value.media.images.length - 1) {\r\n        currentPhotoIndex.value++\r\n        resetImageTransform()\r\n        // 同步手势管理器状态\r\n        if (gestureManager.value) {\r\n          gestureManager.value.setScale(1)\r\n          gestureManager.value.setTranslate(0, 0)\r\n        }\r\n      }\r\n    }\r\n\r\n    // 打开视频播放器\r\n    const openVideoPlayer = (video, index) => {\r\n      // 跳转到专门的视频播放页面\r\n      router.push(`/video-player/${event.value.id}/${index}`)\r\n    }\r\n\r\n\r\n\r\n    // 格式化视频时长\r\n    const formatDuration = (seconds) => {\r\n      const mins = Math.floor(seconds / 60)\r\n      const secs = Math.floor(seconds % 60)\r\n      return `${mins}:${secs.toString().padStart(2, '0')}`\r\n    }\r\n\r\n    // 播放/暂停音频\r\n    const toggleAudio = async (audio, index) => {\r\n      const audioElement = document.querySelector(`audio[src*=\"${audio.fileName}\"]`)\r\n      \r\n      if (!audioElement) {\r\n        console.error('音频元素不存在')\r\n        return\r\n      }\r\n\r\n      // 如果正在播放同一个音频，则暂停\r\n      if (currentPlayingAudio.value === index && isAudioPlaying.value) {\r\n        audioElement.pause()\r\n        isAudioPlaying.value = false\r\n        return\r\n      }\r\n\r\n      // 停止之前播放的音频\r\n      if (currentAudioElement.value && currentAudioElement.value !== audioElement) {\r\n        currentAudioElement.value.pause()\r\n        currentAudioElement.value.currentTime = 0\r\n      }\r\n\r\n      try {\r\n        currentPlayingAudio.value = index\r\n        currentAudioElement.value = audioElement\r\n        isAudioLoading.value = true\r\n        \r\n        await audioElement.play()\r\n        isAudioPlaying.value = true\r\n        isAudioLoading.value = false\r\n      } catch (error) {\r\n        console.error('音频播放失败:', error)\r\n        isAudioLoading.value = false\r\n        isAudioPlaying.value = false\r\n        alert('音频播放失败，请检查网络连接')\r\n      }\r\n    }\r\n\r\n    // 音频加载开始\r\n    const onAudioLoadStart = () => {\r\n      isAudioLoading.value = true\r\n    }\r\n\r\n    // 音频可以播放\r\n    const onAudioCanPlay = () => {\r\n      isAudioLoading.value = false\r\n    }\r\n\r\n    // 音频元数据加载完成\r\n    const onAudioLoadedMetadata = (e) => {\r\n      const audio = e.target\r\n      audioDuration.value = audio.duration || 0\r\n    }\r\n\r\n    // 音频时间更新\r\n    const onAudioTimeUpdate = (e) => {\r\n      const audio = e.target\r\n      audioCurrentTime.value = audio.currentTime\r\n      if (audioDuration.value > 0) {\r\n        audioProgress.value = (audio.currentTime / audioDuration.value) * 100\r\n      }\r\n    }\r\n\r\n    // 音频播放结束\r\n    const onAudioEnded = () => {\r\n      isAudioPlaying.value = false\r\n      currentPlayingAudio.value = -1\r\n      audioProgress.value = 0\r\n      audioCurrentTime.value = 0\r\n      currentAudioElement.value = null\r\n    }\r\n\r\n    // 音频播放错误\r\n    const onAudioError = (e) => {\r\n      console.error('音频播放错误:', e)\r\n      isAudioPlaying.value = false\r\n      isAudioLoading.value = false\r\n      currentPlayingAudio.value = -1\r\n      alert('音频加载失败，请检查网络连接')\r\n    }\r\n\r\n    // 切换静音\r\n    const toggleMute = () => {\r\n      if (currentAudioElement.value) {\r\n        isAudioMuted.value = !isAudioMuted.value\r\n        currentAudioElement.value.muted = isAudioMuted.value\r\n      }\r\n    }\r\n\r\n    // 格式化时间显示\r\n    const formatTime = (seconds) => {\r\n      if (!seconds || isNaN(seconds)) return '0:00'\r\n      const mins = Math.floor(seconds / 60)\r\n      const secs = Math.floor(seconds % 60)\r\n      return `${mins}:${secs.toString().padStart(2, '0')}`\r\n    }\r\n\r\n    // 初始化手势管理器\r\n    const initGestureManager = () => {\r\n      if (gestureManager.value) {\r\n        gestureManager.value.deactivate()\r\n      }\r\n      \r\n      gestureManager.value = createPhotoViewerGesture({\r\n        minScale: minScale,\r\n        maxScale: maxScale\r\n      })\r\n      \r\n      // 设置手势回调\r\n      gestureManager.value.on('swipeLeft', () => {\r\n        nextPhoto()\r\n      })\r\n      \r\n      gestureManager.value.on('swipeRight', () => {\r\n        prevPhoto()\r\n      })\r\n      \r\n      gestureManager.value.on('scale', (data) => {\r\n        imageScale.value = data.scale\r\n        imageTranslateX.value = data.translateX\r\n        imageTranslateY.value = data.translateY\r\n      })\r\n      \r\n      gestureManager.value.on('drag', (data) => {\r\n        imageTranslateX.value = data.translateX\r\n        imageTranslateY.value = data.translateY\r\n      })\r\n      \r\n      gestureManager.value.on('doubleTap', (data) => {\r\n        if (data.currentScale === 1) {\r\n          // 放大到2倍\r\n          const newScale = 2\r\n          imageScale.value = newScale\r\n          gestureManager.value.setScale(newScale)\r\n        } else {\r\n          // 重置缩放\r\n          resetZoom()\r\n          gestureManager.value.setScale(1)\r\n          gestureManager.value.setTranslate(0, 0)\r\n        }\r\n      })\r\n    }\r\n\r\n    // 触摸事件代理函数\r\n    const handleTouchStart = (e) => {\r\n      if (!showPhotoViewer.value || !gestureManager.value) return\r\n      gestureManager.value.handleTouchStart(e)\r\n    }\r\n\r\n    const handleTouchMove = (e) => {\r\n      if (!showPhotoViewer.value || !gestureManager.value) return\r\n      gestureManager.value.handleTouchMove(e)\r\n    }\r\n\r\n    const handleTouchEnd = (e) => {\r\n      if (!showPhotoViewer.value || !gestureManager.value) return\r\n      gestureManager.value.handleTouchEnd(e)\r\n    }\r\n\r\n    // 键盘事件处理\r\n    const handleKeyDown = (e) => {\r\n      if (!showPhotoViewer.value) return\r\n      \r\n      switch (e.key) {\r\n        case 'ArrowLeft':\r\n          e.preventDefault()\r\n          prevPhoto()\r\n          break\r\n        case 'ArrowRight':\r\n          e.preventDefault()\r\n          nextPhoto()\r\n          break\r\n        case 'Escape':\r\n          e.preventDefault()\r\n          closePhotoViewer()\r\n          break\r\n      }\r\n    }\r\n\r\n    // 编辑事件\r\n    const editEvent = () => {\r\n      console.log('编辑事件:', event.value.id)\r\n      // 跳转到编辑页面\r\n      router.push(`/edit/${event.value.id}`)\r\n    }\r\n\r\n    // 删除事件\r\n    const handleDeleteEvent = async () => {\r\n      if (confirm('确定要删除这个事件吗？此操作不可恢复。')) {\r\n        try {\r\n          const response = await deleteEvent(event.value.id)\r\n          if (response.success) {\r\n            // 删除成功，返回首页并传递已删除的ID，让首页定位到最接近的事件\r\n            router.push({\r\n              path: '/',\r\n              query: { highlight: event.value.id }\r\n            })\r\n          } else {\r\n            alert(response.message || '删除失败')\r\n          }\r\n        } catch (err) {\r\n          alert('网络错误，删除失败')\r\n          console.error('删除事件失败:', err)\r\n        }\r\n      }\r\n    }\r\n\r\n    onMounted(async () => {\r\n      await loadEventDetail()\r\n      // 确保页面滚动到顶部\r\n      window.scrollTo(0, 0)\r\n      \r\n      // 添加键盘事件监听\r\n      document.addEventListener('keydown', handleKeyDown)\r\n    })\r\n\r\n    // 组件卸载时移除事件监听\r\n    onBeforeUnmount(() => {\r\n      document.removeEventListener('keydown', handleKeyDown)\r\n    })\r\n\r\n    return {\r\n      event,\r\n      isPlaying,\r\n      showPhotoViewer,\r\n      currentPhotoIndex,\r\n      currentPlayingAudio,\r\n      isAudioPlaying,\r\n      isAudioLoading,\r\n      isAudioMuted,\r\n      audioProgress,\r\n      audioCurrentTime,\r\n      audioDuration,\r\n      currentAudioElement,\r\n      loading,\r\n      error,\r\n      formatDate,\r\n      formatDateTime,\r\n      getAgeAtEvent,\r\n      goBack,\r\n      openPhotoViewer,\r\n      closePhotoViewer,\r\n      prevPhoto,\r\n      nextPhoto,\r\n      openVideoPlayer,\r\n      formatDuration,\r\n      toggleAudio,\r\n      onAudioLoadStart,\r\n      onAudioCanPlay,\r\n      onAudioLoadedMetadata,\r\n      onAudioTimeUpdate,\r\n      onAudioEnded,\r\n      onAudioError,\r\n      toggleMute,\r\n      formatTime,\r\n      editEvent,\r\n      deleteEvent: handleDeleteEvent,\r\n      loadEventDetail,\r\n      getMediaUrl,\r\n      handleTouchStart,\r\n      handleTouchMove,\r\n      handleTouchEnd,\r\n      handleKeyDown,\r\n      initGestureManager,\r\n      // 缩放相关\r\n      imageScale,\r\n      imageTranslateX,\r\n      imageTranslateY,\r\n      minScale,\r\n      maxScale,\r\n      zoomIn,\r\n      zoomOut,\r\n      resetZoom,\r\n      handleDoubleClick,\r\n      // 手势管理器\r\n      gestureManager\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.event-detail {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n  padding: 20px;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n}\r\n\r\n/* 头部 */\r\n.detail-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  max-width: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.back-btn {\r\n  background: white;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin-right: 20px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.back-btn:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.page-title {\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n}\r\n\r\n/* 事件容器 */\r\n.event-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  background: white;\r\n  border-radius: 20px;\r\n  padding: 30px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.event-header {\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.event-title {\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  color: #2c3e50;\r\n  margin: 0 0 15px 0;\r\n}\r\n\r\n.event-meta-info {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  font-size: 16px;\r\n}\r\n\r\n.event-date {\r\n  color: #e74c3c;\r\n  font-weight: 600;\r\n}\r\n\r\n.event-age {\r\n  color: #7f8c8d;\r\n}\r\n\r\n/* 区块标题 */\r\n.section-title {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin: 30px 0 15px 0;\r\n  padding-bottom: 10px;\r\n  border-bottom: 2px solid #ecf0f1;\r\n}\r\n\r\n/* 媒体区域通用样式 */\r\n.photos-section, .videos-section, .audio-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n/* 照片区域 */\r\n.photos-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n  gap: 15px;\r\n}\r\n\r\n.photo-item {\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.photo-item:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.photo-placeholder {\r\n  height: 150px;\r\n  background: linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%);\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 30px;\r\n  color: white;\r\n  position: relative;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.photo-icon {\r\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.video-icon {\r\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.photo-index {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 12px;\r\n}\r\n\r\n/* 视频区域 */\r\n.videos-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 15px;\r\n}\r\n\r\n.video-item {\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.video-item:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.video-container {\r\n  position: relative;\r\n  height: 150px;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.video-preview {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(135deg, #8e44ad 0%, #9b59b6 100%);\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 30px;\r\n  color: white;\r\n}\r\n\r\n.video-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.video-container:hover .video-overlay {\r\n  background: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.play-overlay {\r\n  font-size: 40px;\r\n  color: white;\r\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.video-container:hover .play-overlay {\r\n  transform: scale(1.2);\r\n}\r\n\r\n.video-duration {\r\n  position: absolute;\r\n  bottom: 8px;\r\n  right: 8px;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  color: white;\r\n  padding: 2px 6px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n}\r\n\r\n/* 媒体描述文字 */\r\n.media-desc {\r\n  font-size: 12px;\r\n  color: #7f8c8d;\r\n  margin: 5px 0 2px 0;\r\n  text-align: center;\r\n  line-height: 1.3;\r\n}\r\n\r\n.media-filename {\r\n  font-size: 11px;\r\n  color: #95a5a6;\r\n  text-align: center;\r\n  display: block;\r\n  font-style: italic;\r\n}\r\n\r\n/* 音频播放器 */\r\n.audio-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.audio-item {\r\n  background: #f8f9fa;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.audio-item audio {\r\n  display: none;\r\n}\r\n\r\n.audio-player {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  padding: 15px;\r\n}\r\n\r\n.play-btn {\r\n  width: 45px;\r\n  height: 45px;\r\n  border-radius: 50%;\r\n  border: none;\r\n  background: linear-gradient(135deg, #e67e22 0%, #d35400 100%);\r\n  color: white;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.play-btn:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.play-btn:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n  transform: none;\r\n}\r\n\r\n.audio-info {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.audio-desc {\r\n  font-size: 14px;\r\n  color: #2c3e50;\r\n  font-weight: 500;\r\n}\r\n\r\n.audio-progress {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.progress-bar {\r\n  flex: 1;\r\n  height: 4px;\r\n  background: #ecf0f1;\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background: linear-gradient(135deg, #e67e22 0%, #d35400 100%);\r\n  border-radius: 2px;\r\n  transition: width 0.1s ease;\r\n}\r\n\r\n.time-display {\r\n  font-size: 12px;\r\n  color: #7f8c8d;\r\n  min-width: 70px;\r\n  text-align: right;\r\n}\r\n\r\n.audio-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.volume-btn {\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  border: none;\r\n  background: rgba(231, 76, 60, 0.1);\r\n  color: #e74c3c;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.volume-btn:hover {\r\n  background: rgba(231, 76, 60, 0.2);\r\n  transform: scale(1.1);\r\n}\r\n\r\n.audio-filename {\r\n  font-size: 12px;\r\n  color: #7f8c8d;\r\n  font-style: italic;\r\n}\r\n\r\n/* 描述区域 */\r\n.description-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.event-description {\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n  color: #34495e;\r\n  margin: 0;\r\n}\r\n\r\n/* 附加信息 */\r\n.additional-info {\r\n  margin-bottom: 30px;\r\n  padding: 20px;\r\n  background: #f8f9fa;\r\n  border-radius: 10px;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.info-item:last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.info-label {\r\n  font-weight: 600;\r\n  color: #7f8c8d;\r\n  width: 100px;\r\n}\r\n\r\n.info-value {\r\n  color: #2c3e50;\r\n}\r\n\r\n/* 操作按钮 */\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 15px;\r\n  justify-content: center;\r\n}\r\n\r\n.edit-btn, .delete-btn {\r\n  padding: 12px 24px;\r\n  border: none;\r\n  border-radius: 25px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.edit-btn {\r\n  background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);\r\n  color: white;\r\n}\r\n\r\n.delete-btn {\r\n  background: linear-gradient(135deg, #ff7675 0%, #d63031 100%);\r\n  color: white;\r\n}\r\n\r\n.edit-btn:hover, .delete-btn:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n/* 加载状态 */\r\n.loading, .error-container {\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.loading-spinner, .error-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.retry-btn {\r\n  background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  margin-top: 15px;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.retry-btn:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n/* 模态框通用样式 */\r\n.photo-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.9);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  max-width: 90vw;\r\n  max-height: 90vh;\r\n}\r\n\r\n.modal-close {\r\n  position: absolute;\r\n  top: -40px;\r\n  right: 0;\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n}\r\n\r\n.photo-viewer {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.current-photo {\r\n  text-align: center;\r\n}\r\n\r\n.large-photo-container {\r\n  width: 500px;\r\n  height: 400px;\r\n  overflow: hidden;\r\n  border-radius: 15px;\r\n  position: relative;\r\n  margin-bottom: 15px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.large-photo-placeholder {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%);\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 80px;\r\n  color: white;\r\n  cursor: grab;\r\n  transform-origin: center;\r\n}\r\n\r\n.large-photo-placeholder:active {\r\n  cursor: grabbing;\r\n}\r\n\r\n.photo-counter {\r\n  color: white;\r\n  font-size: 16px;\r\n  margin: 0;\r\n}\r\n\r\n.swipe-hint {\r\n  margin-top: 10px;\r\n  opacity: 0.7;\r\n}\r\n\r\n.hint-text {\r\n  color: white;\r\n  font-size: 12px;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  padding: 4px 12px;\r\n  border-radius: 15px;\r\n  display: inline-block;\r\n}\r\n\r\n/* 照片容器添加触摸样式 */\r\n.large-photo-placeholder {\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  touch-action: pan-x pan-y pinch-zoom;\r\n}\r\n\r\n/* 缩放控制按钮 */\r\n.zoom-controls {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  padding: 8px 15px;\r\n  border-radius: 25px;\r\n  z-index: 1002;\r\n}\r\n\r\n.zoom-btn {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  color: white;\r\n  font-size: 16px;\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background 0.2s ease;\r\n}\r\n\r\n.zoom-btn:hover:not(:disabled) {\r\n  background: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n.zoom-btn:disabled {\r\n  opacity: 0.3;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.zoom-btn.reset {\r\n  font-size: 12px;\r\n  width: auto;\r\n  padding: 0 12px;\r\n  border-radius: 16px;\r\n}\r\n\r\n.zoom-level {\r\n  color: white;\r\n  font-size: 14px;\r\n  min-width: 45px;\r\n  text-align: center;\r\n}\r\n\r\n/* 桌面端显示 */\r\n.desktop-only {\r\n  display: block;\r\n}\r\n\r\n.nav-btn {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  color: white;\r\n  font-size: 40px;\r\n  padding: 20px 15px;\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  transition: background 0.2s ease;\r\n}\r\n\r\n.nav-btn:hover {\r\n  background: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .event-detail {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .event-container {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .photos-grid {\r\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\r\n  }\r\n  \r\n  .videos-grid {\r\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n  }\r\n  \r\n  .photo-placeholder, .video-placeholder {\r\n    height: 120px;\r\n    font-size: 24px;\r\n  }\r\n  \r\n  .play-overlay {\r\n    font-size: 30px;\r\n  }\r\n  \r\n  .large-photo-container {\r\n    width: 90vw;\r\n    height: 300px;\r\n  }\r\n  \r\n  .large-photo-placeholder {\r\n    font-size: 60px;\r\n  }\r\n  \r\n  /* 移动端隐藏缩放控制按钮 */\r\n  .desktop-only {\r\n    display: none;\r\n  }\r\n  \r\n  .photo-viewer {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    align-items: center;\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 0 50px;  /* 为翻页按钮留出空间 */\r\n  }\r\n  \r\n  .photo-viewer .nav-btn {\r\n    position: fixed;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    z-index: 1001;\r\n    background: rgba(0, 0, 0, 0.7);\r\n    border: 2px solid rgba(255, 255, 255, 0.3);\r\n    color: white;\r\n    font-size: 24px;\r\n    padding: 12px 8px;\r\n    min-width: 40px;\r\n    min-height: 40px;\r\n    border-radius: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .photo-viewer .nav-btn.prev {\r\n    left: 10px;\r\n  }\r\n  \r\n  .photo-viewer .nav-btn.next {\r\n    right: 10px;\r\n  }\r\n  \r\n  .photo-viewer .nav-btn:hover,\r\n  .photo-viewer .nav-btn:active {\r\n    background: rgba(0, 0, 0, 0.8);\r\n    border-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n  \r\n  .photo-viewer .nav-btn:active {\r\n    transform: translateY(-50%) scale(0.95);\r\n  }\r\n  \r\n  .swipe-hint {\r\n    display: block;\r\n    margin-top: 15px;\r\n  }\r\n  \r\n  .hint-text {\r\n    font-size: 11px;\r\n    opacity: 0.8;\r\n    animation: fadeInOut 3s ease-in-out infinite;\r\n  }\r\n  \r\n  .nav-btn {\r\n    font-size: 30px;\r\n    padding: 15px 10px;\r\n  }\r\n  \r\n\r\n  \r\n  .action-buttons {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .event-meta-info {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n}\r\n\r\n/* 动画定义 */\r\n@keyframes fadeInOut {\r\n  0%, 100% { opacity: 0.4; }\r\n  50% { opacity: 1; }\r\n}\r\n\r\n/* 更小屏幕设备的优化 */\r\n@media (max-width: 480px) {\r\n  .photo-viewer .nav-btn {\r\n    font-size: 20px;\r\n    padding: 10px 6px;\r\n    min-width: 36px;\r\n    min-height: 36px;\r\n  }\r\n  \r\n  .photo-viewer .nav-btn.prev {\r\n    left: 5px;\r\n  }\r\n  \r\n  .photo-viewer .nav-btn.next {\r\n    right: 5px;\r\n  }\r\n  \r\n  .large-photo-container {\r\n    width: 95vw;\r\n    height: 250px;\r\n  }\r\n  \r\n  .large-photo-placeholder {\r\n    font-size: 50px;\r\n  }\r\n  \r\n  .modal-close {\r\n    top: -35px;\r\n    font-size: 20px;\r\n    padding: 8px;\r\n  }\r\n  \r\n\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"chunk-uploader\">\r\n    <!-- 上传进度对话框 -->\r\n    <div class=\"upload-dialog\">\r\n      <div class=\"upload-dialog-header\">\r\n        <h3>文件上传进度</h3>\r\n        <button \r\n          type=\"button\" \r\n          class=\"toggle-logs-btn\" \r\n          @click=\"showLogs = !showLogs\"\r\n        >\r\n          {{ showLogs ? '隐藏日志' : '显示日志' }}\r\n        </button>\r\n      </div>\r\n      <div class=\"upload-dialog-body\">\r\n        <div v-for=\"(file, index) in uploadTasks\" :key=\"index\" class=\"file-item\">\r\n          <div class=\"file-info\">\r\n            <div class=\"file-name\">{{ file.name }}</div>\r\n            <div class=\"file-size\">{{ formatFileSize(file.size) }}</div>\r\n            <div class=\"file-status\">\r\n              {{ getFileStatus(file) }}\r\n              <span v-if=\"file.error\" class=\"error-message\">: {{ file.error }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"progress-container\">\r\n            <div class=\"progress-bar\" :style=\"{ width: file.progress + '%' }\"></div>\r\n            <div class=\"progress-text\">{{ file.progress.toFixed(1) }}%</div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 日志区域 -->\r\n        <div v-if=\"showLogs\" class=\"log-container\">\r\n          <div class=\"log-header\">\r\n            <h4>上传日志</h4>\r\n            <div class=\"log-actions\">\r\n              <button \r\n                type=\"button\" \r\n                class=\"clear-logs-btn\" \r\n                @click=\"clearLogs\"\r\n              >\r\n                清空日志\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"copy-logs-btn\"\r\n                @click=\"copyLogs\"\r\n              >\r\n                复制日志\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"log-content\" ref=\"logContent\">\r\n            <div v-for=\"(log, index) in logs\" :key=\"index\" class=\"log-entry\" :class=\"getLogClass(log)\">\r\n              <span class=\"log-time\">{{ log.time }}</span>\r\n              <span class=\"log-level\">[{{ log.level }}]</span>\r\n              <span class=\"log-message\">{{ log.message }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { initChunk, uploadChunk, completeChunk } from '../api/events';\r\nimport SparkMD5 from 'spark-md5';\r\n\r\nexport default {\r\n  name: 'ChunkUploader',\r\n  props: {\r\n    // 最大并行上传文件数\r\n    maxParallelFiles: {\r\n      type: Number,\r\n      default: 3\r\n    },\r\n    // 每个文件最大并行分片数\r\n    maxParallelChunks: {\r\n      type: Number,\r\n      default: 3\r\n    },\r\n    // 每个分片大小(bytes) - 默认 512k\r\n    chunkSize: {\r\n      type: Number,\r\n      default:  512 * 1024\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      uploadTasks: [],\r\n      activeUploads: 0,\r\n      isUploading: false,\r\n      showLogs: false,\r\n      logs: [],\r\n      maxLogs: 100  // 最多保存的日志条数\r\n    };\r\n  },\r\n  computed: {\r\n    allTasksCompleted() {\r\n      return this.uploadTasks.length > 0 && \r\n             this.uploadTasks.every(task => task.status === 'completed' || task.status === 'error');\r\n    }\r\n  },\r\n  methods: {\r\n    // 日志相关方法\r\n    log(level, message) {\r\n      const time = new Date().toLocaleTimeString();\r\n      this.logs.unshift({ time, level, message });\r\n      \r\n      // 限制日志数量\r\n      if (this.logs.length > this.maxLogs) {\r\n        this.logs = this.logs.slice(0, this.maxLogs);\r\n      }\r\n      \r\n      // 同时输出到控制台\r\n      switch (level) {\r\n        case 'ERROR':\r\n          console.error(message);\r\n          break;\r\n        case 'WARN':\r\n          console.warn(message);\r\n          break;\r\n        case 'INFO':\r\n          console.log(message);\r\n          break;\r\n        default:\r\n          console.log(message);\r\n      }\r\n      \r\n      // 如果日志区域可见，滚动到最新日志\r\n      this.$nextTick(() => {\r\n        if (this.showLogs && this.$refs.logContent) {\r\n          this.$refs.logContent.scrollTop = 0;\r\n        }\r\n      });\r\n    },\r\n    \r\n    logInfo(message) {\r\n      this.log('INFO', message);\r\n    },\r\n    \r\n    logWarn(message) {\r\n      this.log('WARN', message);\r\n    },\r\n    \r\n    logError(message) {\r\n      this.log('ERROR', message);\r\n    },\r\n    \r\n    clearLogs() {\r\n      this.logs = [];\r\n    },\r\n    \r\n    copyLogs() {\r\n      // 将日志格式化为文本\r\n      const logText = this.logs\r\n        .map(log => `${log.time} [${log.level}] ${log.message}`)\r\n        .join('\\n');\r\n      \r\n      // 复制到剪贴板\r\n      navigator.clipboard.writeText(logText)\r\n        .then(() => {\r\n          this.logInfo('日志已复制到剪贴板');\r\n        })\r\n        .catch(err => {\r\n          this.logError('复制日志失败: ' + err);\r\n        });\r\n    },\r\n    \r\n    getLogClass(log) {\r\n      return {\r\n        'log-info': log.level === 'INFO',\r\n        'log-warn': log.level === 'WARN',\r\n        'log-error': log.level === 'ERROR'\r\n      };\r\n    },\r\n    \r\n    // 添加单个文件到上传队列并自动开始上传\r\n    addFile(file) {\r\n      try {\r\n        if (!file) {\r\n          this.logError('尝试添加文件，但文件对象为空!');\r\n          return null;\r\n        }\r\n        \r\n        this.logInfo(`添加文件到上传队列: ${file.name}, 大小: ${this.formatFileSize(file.size)}`);\r\n        \r\n        // 创建新任务\r\n        const newTask = {\r\n          file,\r\n          name: file.name,\r\n          size: file.size,\r\n          progress: 0,\r\n          status: 'pending', // pending, calculating, uploading, completed, error\r\n          error: null,\r\n          taskId: null,\r\n          totalChunks: Math.ceil(file.size / this.chunkSize),\r\n          uploadedChunks: 0,\r\n          chunkQueue: [],\r\n          md5: null,\r\n          captureTime: null\r\n        };\r\n        \r\n        // 添加到任务列表\r\n        this.uploadTasks.push(newTask);\r\n        this.logInfo(`添加成功，当前任务数: ${this.uploadTasks.length}`);\r\n        \r\n        // 自动开始计算该文件的MD5并上传\r\n        if (!this.isUploading) {\r\n          this.logInfo('启动上传流程');\r\n          setTimeout(() => {\r\n            try {\r\n              this.startUpload();\r\n            } catch (error) {\r\n              this.logError(`开始上传过程出错: ${error.message || error}`);\r\n            }\r\n          }, 100); // 添加小延迟确保DOM已更新\r\n        } else {\r\n          this.logInfo('已有上传任务进行中，新任务将排队等待');\r\n        }\r\n        \r\n        return newTask;\r\n      } catch (error) {\r\n        this.logError(`添加文件过程中发生错误: ${error.message || error}`);\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    clearCompletedTasks() {\r\n      // 清空已完成或错误的任务\r\n      this.uploadTasks = this.uploadTasks.filter(\r\n        task => task.status !== 'completed' && task.status !== 'error'\r\n      );\r\n    },\r\n    \r\n    formatFileSize(bytes) {\r\n      if (bytes < 1024) return bytes + ' B';\r\n      else if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(2) + ' KB';\r\n      else if (bytes < 1024 * 1024 * 1024) return (bytes / (1024 * 1024)).toFixed(2) + ' MB';\r\n      else return (bytes / (1024 * 1024 * 1024)).toFixed(2) + ' GB';\r\n    },\r\n    \r\n    getFileStatus(file) {\r\n      switch (file.status) {\r\n        case 'pending': return '等待上传';\r\n        case 'calculating': return '计算MD5...';\r\n        case 'uploading': return `上传中 (${file.uploadedChunks}/${file.totalChunks})`;\r\n        case 'verifying': return '验证中...';\r\n        case 'completed': return '完成';\r\n        case 'error': return '错误';\r\n        default: return file.status;\r\n      }\r\n    },\r\n    \r\n    async startUpload() {\r\n      if (this.isUploading) {\r\n        this.logInfo('已有上传任务进行中，跳过本次调用');\r\n        return;\r\n      }\r\n      \r\n      this.logInfo(`开始上传处理, 当前任务数: ${this.uploadTasks.length}`);\r\n      this.isUploading = true;\r\n      \r\n      try {\r\n        // 过滤出需要上传的任务\r\n        const pendingTasks = this.uploadTasks.filter(task => \r\n          task.status === 'pending' || (task.status === 'error' && !task.taskId)\r\n        );\r\n        \r\n        this.logInfo(`待处理任务数: ${pendingTasks.length}`);\r\n        \r\n        if (pendingTasks.length === 0) {\r\n          this.logInfo('没有待处理的任务，标记上传过程结束');\r\n          this.isUploading = false;\r\n          // 检查是否需要触发完成事件\r\n          this.checkAllTasksCompleted();\r\n          return;\r\n        }\r\n        \r\n        // 开始计算MD5\r\n        this.logInfo(`开始处理 ${pendingTasks.length} 个任务的MD5计算`);\r\n        for (const task of pendingTasks) {\r\n          await this.calculateFileMD5(task);\r\n        }\r\n      } catch (error) {\r\n        this.logError(`上传处理过程中发生错误: ${error.message || error}`);\r\n        this.isUploading = false;\r\n      }\r\n    },\r\n    \r\n    async calculateFileMD5(task) {\r\n      this.logInfo(`开始计算MD5，文件: ${task.name}`);\r\n      task.status = 'calculating';\r\n      \r\n      try {\r\n        const md5 = await this.computeFileMD5(task.file);\r\n        this.logInfo(`MD5计算完成: ${md5}`);\r\n        task.md5 = md5;\r\n        await this.prepareFileUpload(task);\r\n      } catch (error) {\r\n        this.logError(`MD5计算失败: ${error.message || error}`);\r\n        task.status = 'error';\r\n        task.error = 'MD5计算失败';\r\n        this.checkAllTasksCompleted();\r\n      }\r\n    },\r\n    \r\n    async computeFileMD5(file) {\r\n      return new Promise((resolve, reject) => {\r\n        this.logInfo(`开始分片计算MD5: ${file.name}, 大小: ${file.size}字节`);\r\n        \r\n        // 对于非常小的文件，使用简单的算法\r\n        if (file.size < 1024 * 1024) { // 小于1MB的文件\r\n          this.logInfo('小文件使用简单MD5计算');\r\n          const reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            try {\r\n              const arrayBuffer = e.target.result;\r\n              const spark = new SparkMD5.ArrayBuffer();\r\n              spark.append(arrayBuffer);\r\n              const hash = spark.end();\r\n              resolve(hash);\r\n            } catch (err) {\r\n              reject(err);\r\n            }\r\n          };\r\n          reader.onerror = (err) => reject(err);\r\n          reader.readAsArrayBuffer(file);\r\n          return;\r\n        }\r\n        \r\n        // 对于大文件，使用分片计算\r\n        const blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;\r\n        const chunkSize = 2097152; // 2MB per chunk for MD5 calculation\r\n        const chunks = Math.ceil(file.size / chunkSize);\r\n        let currentChunk = 0;\r\n        const spark = new SparkMD5.ArrayBuffer();\r\n        const fileReader = new FileReader();\r\n        \r\n        this.logInfo(`文件将分为 ${chunks} 个块计算`);\r\n        \r\n        fileReader.onload = (e) => {\r\n          try {\r\n            spark.append(e.target.result); // Append array buffer\r\n            currentChunk++;\r\n            \r\n            const progress = Math.round((currentChunk / chunks) * 100);\r\n            if (currentChunk % 10 === 0 || currentChunk === chunks) {\r\n              this.logInfo(`MD5计算进度: ${progress}%`);\r\n            }\r\n            \r\n            if (currentChunk < chunks) {\r\n              loadNext();\r\n            } else {\r\n              const hash = spark.end();\r\n              this.logInfo(`MD5计算完成: ${hash}`);\r\n              resolve(hash); // Return the MD5 hash\r\n            }\r\n          } catch (error) {\r\n            this.logError(`MD5计算中发生错误: ${error.message || error}`);\r\n            reject(error);\r\n          }\r\n        };\r\n        \r\n        fileReader.onerror = (error) => {\r\n          this.logError(`FileReader错误: ${error.message || error}`);\r\n          reject(error);\r\n        };\r\n        \r\n        const loadNext = () => {\r\n          try {\r\n            const start = currentChunk * chunkSize;\r\n            const end = Math.min(file.size, start + chunkSize);\r\n            const chunk = blobSlice.call(file, start, end);\r\n            fileReader.readAsArrayBuffer(chunk);\r\n          } catch (error) {\r\n            this.logError(`加载下一个块时出错: ${error.message || error}`);\r\n            reject(error);\r\n          }\r\n        };\r\n        \r\n        loadNext();\r\n      });\r\n    },\r\n    \r\n    async prepareFileUpload(task) {\r\n      try {\r\n        this.logInfo(`准备上传文件: ${task.name}`);\r\n        \r\n        // 准备分块上传请求\r\n        const initRequest = {\r\n          fileName: task.name,\r\n          fileType: task.file.type,\r\n          fileSize: task.file.size,\r\n          chunkCount: task.totalChunks,\r\n          fileMD5: task.md5\r\n        };\r\n        \r\n        this.logInfo(`发送初始化请求: ${JSON.stringify(initRequest)}`);\r\n        \r\n        // 初始化分块上传\r\n        const response = await initChunk(initRequest);\r\n        this.logInfo(`初始化响应: ${JSON.stringify(response)}`);\r\n        \r\n        if (response.success && response.data) {\r\n          task.taskId = response.data.taskId;\r\n          task.status = 'uploading';\r\n          this.logInfo(`获得任务ID: ${task.taskId}, 创建分片队列`);\r\n          \r\n          this.createChunkQueue(task);\r\n          this.processUploadQueue();\r\n        } else {\r\n          this.logError(`初始化失败: ${JSON.stringify(response)}`);\r\n          task.status = 'error';\r\n          task.error = response.message || '初始化上传失败';\r\n          this.checkAllTasksCompleted();\r\n        }\r\n      } catch (error) {\r\n        this.logError(`上传准备错误: ${error.message || error}`);\r\n        task.status = 'error';\r\n        task.error = '准备上传失败';\r\n        this.checkAllTasksCompleted();\r\n      }\r\n    },\r\n    \r\n    createChunkQueue(task) {\r\n      const { file } = task;\r\n      const { chunkSize } = this;\r\n      task.chunkQueue = [];\r\n      \r\n      for (let i = 0; i < task.totalChunks; i++) {\r\n        const start = i * chunkSize;\r\n        const end = Math.min(file.size, start + chunkSize);\r\n        const chunkFile = file.slice(start, end);\r\n        \r\n        task.chunkQueue.push({\r\n          index: i,\r\n          file: chunkFile,\r\n          uploaded: false,\r\n          uploading: false,\r\n          retries: 0\r\n        });\r\n      }\r\n    },\r\n    \r\n    async processUploadQueue() {\r\n      this.logInfo('处理上传队列');\r\n      \r\n      // 计算当前正在上传的文件数\r\n      this.activeUploads = this.uploadTasks.filter(task => \r\n        task.status === 'uploading' && task.chunkQueue.some(chunk => chunk.uploading)\r\n      ).length;\r\n      \r\n      this.logInfo(`当前活跃上传数: ${this.activeUploads}, 最大并行: ${this.maxParallelFiles}`);\r\n      \r\n      // 检查是否可以开始新的文件上传\r\n      for (const task of this.uploadTasks) {\r\n        if (task.status === 'uploading' && !task.chunkQueue.some(chunk => chunk.uploading)) {\r\n          if (this.activeUploads < this.maxParallelFiles) {\r\n            this.logInfo(`开始上传文件: ${task.name}`);\r\n            this.uploadFileChunks(task);\r\n            this.activeUploads++;\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 如果没有活跃上传但有等待中的任务，尝试再次处理\r\n      if (this.activeUploads === 0) {\r\n        const pendingTasks = this.uploadTasks.filter(task => \r\n          task.status === 'uploading' && task.chunkQueue.some(chunk => !chunk.uploaded)\r\n        );\r\n        \r\n        if (pendingTasks.length > 0) {\r\n          this.logInfo('重新尝试处理等待中的任务');\r\n          for (const task of pendingTasks.slice(0, this.maxParallelFiles)) {\r\n            this.uploadFileChunks(task);\r\n            this.activeUploads++;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    async uploadFileChunks(task) {\r\n      this.logInfo(`处理文件分片上传: ${task.name}`);\r\n      \r\n      // 计算当前活动的分片上传数量\r\n      const activeChunks = task.chunkQueue.filter(chunk => chunk.uploading).length;\r\n      this.logInfo(`活跃分片数: ${activeChunks}, 总分片数: ${task.totalChunks}, 已完成: ${task.uploadedChunks}`);\r\n      \r\n      // 如果所有分片已上传，完成上传\r\n      if (task.chunkQueue.every(chunk => chunk.uploaded)) {\r\n        this.logInfo(`所有分片已上传，完成文件 ${task.name}`);\r\n        await this.completeFileUpload(task);\r\n        return;\r\n      }\r\n      \r\n      // 上传更多分片，直到达到并行限制\r\n      let startedNewUploads = 0;\r\n      for (let i = 0; i < task.chunkQueue.length && activeChunks + startedNewUploads < this.maxParallelChunks; i++) {\r\n        const chunk = task.chunkQueue[i];\r\n        if (!chunk.uploaded && !chunk.uploading) {\r\n          this.logInfo(`开始上传分片 ${i+1}/${task.totalChunks}`);\r\n          chunk.uploading = true;\r\n          this.uploadChunk(task, chunk);\r\n          startedNewUploads++;\r\n        }\r\n      }\r\n      \r\n      this.logInfo(`开始了 ${startedNewUploads} 个新分片上传`);\r\n    },\r\n    \r\n    async uploadChunk(task, chunk) {\r\n      try {\r\n        this.logInfo(`上传分片: 文件=${task.name}, 分片索引=${chunk.index}, 分片大小=${chunk.file.size}字节`);\r\n        \r\n        // 使用 API 上传分片\r\n        const response = await uploadChunk(task.taskId, chunk.index, chunk.file);\r\n        this.logInfo(`分片上传响应: ${JSON.stringify(response)}`);\r\n        \r\n        if (response.success) {\r\n          chunk.uploaded = true;\r\n          chunk.uploading = false;\r\n          task.uploadedChunks++;\r\n          \r\n          // 更新进度\r\n          task.progress = (task.uploadedChunks / task.totalChunks) * 100;\r\n          this.logInfo(`分片上传成功: ${chunk.index}, 进度: ${task.progress.toFixed(1)}%`);\r\n          \r\n          // 继续上传更多分片\r\n          this.uploadFileChunks(task);\r\n        } else {\r\n          this.logWarn(`分片上传失败: ${chunk.index}, 错误: ${response.message}`);\r\n          // 重试逻辑\r\n          if (chunk.retries < 3) {\r\n            chunk.retries++;\r\n            chunk.uploading = false;\r\n            this.logInfo(`将在1秒后重试分片 ${chunk.index} (尝试 ${chunk.retries}/3)`);\r\n            // 稍后重试\r\n            setTimeout(() => {\r\n              this.uploadChunk(task, chunk);\r\n            }, 1000);\r\n          } else {\r\n            chunk.uploading = false;\r\n            task.status = 'error';\r\n            task.error = response.message || `分片 ${chunk.index + 1} 上传失败`;\r\n            this.logError(`分片 ${chunk.index} 达到最大重试次数, 标记任务为错误`);\r\n            this.checkAllTasksCompleted();\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.logError(`分片上传错误: ${error.message || error}`);\r\n        // 重试逻辑同上\r\n        if (chunk.retries < 3) {\r\n          chunk.retries++;\r\n          chunk.uploading = false;\r\n          this.logInfo(`将在1秒后重试分片 ${chunk.index} (尝试 ${chunk.retries}/3)`);\r\n          setTimeout(() => {\r\n            this.uploadChunk(task, chunk);\r\n          }, 1000);\r\n        } else {\r\n          chunk.uploading = false;\r\n          task.status = 'error';\r\n          task.error = `分片 ${chunk.index + 1} 上传失败`;\r\n          this.logError(`分片 ${chunk.index} 达到最大重试次数, 标记任务为错误`);\r\n          this.checkAllTasksCompleted();\r\n        }\r\n      }\r\n      \r\n      // 检查其他任务的上传\r\n      this.processUploadQueue();\r\n    },\r\n    \r\n    async completeFileUpload(task) {\r\n      this.logInfo(`完成文件上传: ${task.name}, 任务ID: ${task.taskId}`);\r\n      task.status = 'verifying';\r\n      \r\n      try {\r\n        this.logInfo('发送完成请求');\r\n        const response = await completeChunk(task.taskId);\r\n        this.logInfo(`完成响应: ${JSON.stringify(response)}`);\r\n        \r\n        if (response.success) {\r\n          // 检查MD5是否匹配\r\n          if (response.data.mD5Verified) {\r\n            task.status = 'completed';\r\n            this.logInfo(`文件 ${task.name} 上传完成并验证成功`);\r\n            \r\n            const fileInfo = {\r\n              fileName: response.data.originalName,\r\n              serverFileName: response.data.serverFileName,\r\n              size: response.data.size,\r\n              md5: response.data.mD5,\r\n              captureTime: response.data.captureTime || null\r\n            };\r\n            \r\n            // 如果捕获时间存在，记录在任务对象上\r\n            if (response.data.captureTime) {\r\n              task.captureTime = response.data.captureTime;\r\n              this.logInfo(`文件 ${task.name} 含有捕获时间: ${task.captureTime}`);\r\n            }\r\n            \r\n            this.logInfo(`发出上传完成事件: ${JSON.stringify(fileInfo)}`);\r\n            this.$emit('upload-complete', fileInfo);\r\n          } else {\r\n            this.logError(`MD5验证失败: ${JSON.stringify(response.data)}`);\r\n            task.status = 'error';\r\n            task.error = `MD5校验失败，期望: ${response.data.expectedMD5}，实际: ${response.data.mD5}`;\r\n          }\r\n        } else {\r\n          this.logError(`完成上传失败: ${JSON.stringify(response)}`);\r\n          task.status = 'error';\r\n          task.error = response.message || '完成上传失败';\r\n        }\r\n      } catch (error) {\r\n        this.logError(`上传完成处理错误: ${error.message || error}`);\r\n        task.status = 'error';\r\n        task.error = '完成上传失败';\r\n      }\r\n      \r\n      // 检查是否所有任务都已完成\r\n      this.checkAllTasksCompleted();\r\n      \r\n      // 处理下一个文件上传\r\n      this.processUploadQueue();\r\n    },\r\n    \r\n    checkAllTasksCompleted() {\r\n      this.logInfo('检查是否所有任务都已完成');\r\n      \r\n      // 检查所有任务是否完成\r\n      const isAllCompleted = this.uploadTasks.every(\r\n        task => task.status === 'completed' || task.status === 'error'\r\n      );\r\n      \r\n      this.logInfo(`所有任务是否完成: ${isAllCompleted}`);\r\n      if (isAllCompleted && this.uploadTasks.length > 0) {\r\n        this.logInfo('所有任务都已完成，发出全部完成事件');\r\n        this.isUploading = false;\r\n        \r\n        // 查找第一个有捕获时间的任务\r\n        let captureTime = null;\r\n        const taskWithCaptureTime = this.uploadTasks.find(task => \r\n          task.status === 'completed' && task.captureTime\r\n        );\r\n        \r\n        if (taskWithCaptureTime) {\r\n          captureTime = taskWithCaptureTime.captureTime;\r\n          this.logInfo(`找到带有捕获时间的文件: ${taskWithCaptureTime.name}, 时间: ${captureTime}`);\r\n        }\r\n        \r\n        // 发出全部完成事件，同时传递首个捕获时间（如果有）\r\n        this.$emit('all-completed', { captureTime });\r\n        \r\n        // 汇总结果\r\n        const completedTasks = this.uploadTasks.filter(task => task.status === 'completed').length;\r\n        const errorTasks = this.uploadTasks.filter(task => task.status === 'error').length;\r\n        this.logInfo(`上传完成: ${completedTasks}个成功, ${errorTasks}个失败`);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chunk-uploader {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.upload-dialog {\r\n  width: 100%;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.upload-dialog-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.upload-dialog-header h3 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.upload-dialog-body {\r\n  padding: 16px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.file-item {\r\n  margin-bottom: 16px;\r\n  padding-bottom: 16px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.file-item:last-child {\r\n  margin-bottom: 0;\r\n  padding-bottom: 0;\r\n  border-bottom: none;\r\n}\r\n\r\n.file-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.file-name {\r\n  font-weight: bold;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  max-width: 50%;\r\n}\r\n\r\n.file-size {\r\n  color: #666;\r\n}\r\n\r\n.file-status {\r\n  width: 100%;\r\n  margin-top: 4px;\r\n  color: #555;\r\n}\r\n\r\n.error-message {\r\n  color: #f44336;\r\n}\r\n\r\n.progress-container {\r\n  height: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 4px;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-bar {\r\n  height: 100%;\r\n  background-color: #4caf50;\r\n  transition: width 0.3s;\r\n}\r\n\r\n.progress-text {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #333;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n}\r\n\r\n.toggle-logs-btn {\r\n  padding: 4px 10px;\r\n  font-size: 12px;\r\n  background-color: #f1f1f1;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  color: #333;\r\n}\r\n\r\n.toggle-logs-btn:hover {\r\n  background-color: #e9e9e9;\r\n}\r\n\r\n.log-container {\r\n  margin-top: 20px;\r\n  border: 1px solid #eee;\r\n  border-radius: 4px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.log-header {\r\n  padding: 8px 12px;\r\n  border-bottom: 1px solid #eee;\r\n  background-color: #f1f1f1;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.log-header h4 {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  color: #333;\r\n}\r\n\r\n.log-actions {\r\n  display: flex;\r\n  gap: 8px;\r\n}\r\n\r\n.clear-logs-btn,\r\n.copy-logs-btn {\r\n  padding: 3px 8px;\r\n  font-size: 11px;\r\n  background-color: #fff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  color: #333;\r\n}\r\n\r\n.clear-logs-btn:hover,\r\n.copy-logs-btn:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.log-content {\r\n  padding: 8px;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  font-family: monospace;\r\n  font-size: 12px;\r\n  color: #333;\r\n}\r\n\r\n.log-entry {\r\n  padding: 2px 0;\r\n  border-bottom: 1px dotted #eee;\r\n  white-space: pre-wrap;\r\n  word-break: break-all;\r\n}\r\n\r\n.log-time {\r\n  color: #666;\r\n  margin-right: 6px;\r\n}\r\n\r\n.log-level {\r\n  font-weight: bold;\r\n  margin-right: 6px;\r\n}\r\n\r\n.log-info .log-level {\r\n  color: #2196f3;\r\n}\r\n\r\n.log-warn .log-level {\r\n  color: #ff9800;\r\n}\r\n\r\n.log-error .log-level {\r\n  color: #f44336;\r\n}\r\n\r\n.log-message {\r\n  word-wrap: break-word;\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div class=\"add-edit-event\">\r\n    <!-- 头部 -->\r\n    <header class=\"header\">\r\n      <button class=\"back-btn\" @click=\"goBack\">\r\n        ← 返回\r\n      </button>\r\n      <h1 class=\"page-title\">{{ isEdit ? '编辑事件' : '新增事件' }}</h1>\r\n    </header>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"loading-spinner\">⏳</div>\r\n      <p>正在加载事件数据...</p>\r\n    </div>\r\n\r\n    <!-- 错误状态 -->\r\n    <div v-else-if=\"error && !isEdit\" class=\"error-container\">\r\n      <div class=\"error-icon\">⚠️</div>\r\n      <p>加载失败</p>\r\n      <button class=\"retry-btn\" @click=\"loadEditData\">重试</button>\r\n    </div>\r\n\r\n    <!-- 表单容器 -->\r\n    <div v-else class=\"form-container\">\r\n\r\n      \r\n      <form @submit.prevent=\"saveEvent\" class=\"event-form\">\r\n        <!-- 基本信息 -->\r\n        <div class=\"form-section\">\r\n          <h3 class=\"section-title\">基本信息</h3>\r\n          \r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\" for=\"title\">事件标题 *</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"title\"\r\n              v-model=\"formData.title\"\r\n              class=\"form-input\"\r\n              placeholder=\"请输入事件标题\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\" for=\"date\">事件日期 *</label>\r\n            <input \r\n              type=\"date\" \r\n              id=\"date\"\r\n              v-model=\"formData.date\"\r\n              class=\"form-input\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\" for=\"location\">地点</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"location\"\r\n              v-model=\"formData.location\"\r\n              class=\"form-input\"\r\n              placeholder=\"请输入地点\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\" for=\"description\">详细描述</label>\r\n            <textarea \r\n              id=\"description\"\r\n              v-model=\"formData.description\"\r\n              class=\"form-textarea\"\r\n              rows=\"4\"\r\n              placeholder=\"请输入详细描述\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 照片上传 -->\r\n        <div class=\"form-section\">\r\n          <h3 class=\"section-title\">照片</h3>\r\n          \r\n          <div class=\"upload-area\" @click=\"!uploading && triggerImageUpload()\" :class=\"{ uploading }\">\r\n            <input \r\n              type=\"file\" \r\n              ref=\"imageInput\" \r\n              @change=\"handleImageUpload\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              style=\"display: none;\"\r\n              :disabled=\"uploading\"\r\n            />\r\n            <div class=\"upload-placeholder\">\r\n              <span v-if=\"uploading\">⏳</span>\r\n              <span v-else>📷</span>\r\n              <p>{{ uploading ? '正在上传照片...' : '点击上传照片' }}</p>\r\n              <span class=\"upload-hint\" v-if=\"!uploading\">支持多张图片上传</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"media-list\" v-if=\"formData.media.images.length > 0\">\r\n            <div \r\n              v-for=\"(image, index) in formData.media.images\" \r\n              :key=\"`image-${index}`\"\r\n              class=\"media-item\"\r\n            >\r\n              <div \r\n                class=\"media-preview\"\r\n                :style=\"image.fileName && isEdit ? { backgroundImage: `url(${getMediaUrl(route.params.id, image.fileName)})` } : {}\"\r\n              >\r\n                <span v-if=\"!image.fileName || !isEdit\" class=\"media-icon\">📷</span>\r\n              </div>\r\n              <div class=\"media-info\">\r\n                <input \r\n                  type=\"text\" \r\n                  v-model=\"image.desc\"  \r\n                  class=\"media-desc-input\"\r\n                  placeholder=\"请输入图片描述\"\r\n                />\r\n              </div>\r\n              <button \r\n                type=\"button\" \r\n                class=\"remove-btn\"\r\n                @click=\"removeMedia('images', index)\"\r\n              >\r\n                ✕\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 视频上传 -->\r\n        <div class=\"form-section\">\r\n          <h3 class=\"section-title\">视频</h3>\r\n          \r\n          <div class=\"upload-area\" @click=\"!uploading && triggerVideoUpload()\" :class=\"{ uploading }\">\r\n            <input \r\n              type=\"file\" \r\n              ref=\"videoInput\" \r\n              @change=\"handleVideoUpload\"\r\n              accept=\"video/*\"\r\n              multiple\r\n              style=\"display: none;\"\r\n              :disabled=\"uploading\"\r\n            />\r\n            <div class=\"upload-placeholder\">\r\n              <span v-if=\"uploading\">⏳</span>\r\n              <span v-else>🎬</span>\r\n              <p>{{ uploading ? '正在上传视频...' : '点击上传视频' }}</p>\r\n              <span class=\"upload-hint\" v-if=\"!uploading\">支持多个视频上传</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"media-list\" v-if=\"formData.media.videos.length > 0\">\r\n            <div \r\n              v-for=\"(video, index) in formData.media.videos\" \r\n              :key=\"`video-${index}`\"\r\n              class=\"media-item\"\r\n            >\r\n              <div class=\"media-preview video\">\r\n                <span class=\"media-icon\">🎬</span>\r\n              </div>\r\n              <div class=\"media-info\">\r\n                <input \r\n                  type=\"text\" \r\n                  v-model=\"video.desc\"  \r\n                  class=\"media-desc-input\"\r\n                  placeholder=\"请输入视频描述\"\r\n                />\r\n              </div>\r\n              <button \r\n                type=\"button\" \r\n                class=\"remove-btn\"\r\n                @click=\"removeMedia('videos', index)\"\r\n              >\r\n                ✕\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 录音功能 -->\r\n        <div class=\"form-section\">\r\n          <h3 class=\"section-title\">录音</h3>\r\n          \r\n          <!-- 录音控制区域 -->\r\n          <div class=\"recording-controls\">\r\n            <button \r\n              type=\"button\" \r\n              class=\"record-btn\"\r\n              :class=\"{ recording: isRecording, disabled: uploading }\"\r\n              @click=\"toggleRecording\"\r\n              :disabled=\"uploading\"\r\n            >\r\n              <span v-if=\"isRecording\">⏹️ 停止录音</span>\r\n              <span v-else-if=\"uploading\">⏳ 上传中...</span>\r\n              <span v-else>🎤 开始录音</span>\r\n            </button>\r\n            \r\n            <div v-if=\"isRecording\" class=\"recording-info\">\r\n              <span class=\"recording-time\">{{ formatTime(recordingTime) }}</span>\r\n              <span class=\"recording-indicator\">🔴 录音中</span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 文件上传备选 -->\r\n          <div class=\"upload-area secondary\" @click=\"!uploading && !isRecording && triggerAudioUpload()\" :class=\"{ uploading, disabled: isRecording }\">\r\n            <input \r\n              type=\"file\" \r\n              ref=\"audioInput\" \r\n              @change=\"handleAudioUpload\"\r\n              accept=\"audio/*\"\r\n              multiple\r\n              style=\"display: none;\"\r\n              :disabled=\"uploading || isRecording\"\r\n            />\r\n            <div class=\"upload-placeholder\">\r\n              <span>📁</span>\r\n              <p>或者点击上传音频文件</p>\r\n              <span class=\"upload-hint\">支持多段音频上传</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"media-list\" v-if=\"formData.media.audios.length > 0\">\r\n            <div \r\n              v-for=\"(audio, index) in formData.media.audios\" \r\n              :key=\"`audio-${index}`\"\r\n              class=\"media-item\"\r\n            >\r\n              <div class=\"media-preview audio\">\r\n                <span class=\"media-icon\">🎙</span>\r\n              </div>\r\n              <div class=\"media-info\">\r\n                <input \r\n                  type=\"text\" \r\n                  v-model=\"audio.desc\"  \r\n                  class=\"media-desc-input\"\r\n                  placeholder=\"请输入音频描述\"\r\n                />\r\n              </div>\r\n              <button \r\n                type=\"button\" \r\n                class=\"remove-btn\"\r\n                @click=\"removeMedia('audios', index)\"\r\n              >\r\n                ✕\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 提交按钮 -->\r\n        <div class=\"form-actions\">\r\n          <button type=\"button\" class=\"cancel-btn\" @click=\"goBack\">\r\n            取消\r\n          </button>\r\n          <button type=\"submit\" class=\"save-btn\" :disabled=\"!isFormValid || saving\">\r\n            {{ saving ? '保存中...' : (isEdit ? '保存修改' : '创建事件') }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n      <!-- 分片上传组件 -->\r\n      <div v-if=\"showChunkUploader\" class=\"chunk-uploader-overlay\">\r\n        <div class=\"chunk-uploader-container\">\r\n          <h3>文件分片上传</h3>\r\n          <ChunkUploader\r\n            :maxParallelFiles=\"3\"\r\n            :maxParallelChunks=\"3\"\r\n            :chunkSize=\"2 * 1024 * 1024\"\r\n            @upload-complete=\"handleUploadComplete\"\r\n            @all-completed=\"handleAllUploadsCompleted\"\r\n            ref=\"chunkUploader\"\r\n          />\r\n          <!-- 上传状态指示器 -->\r\n          <div class=\"chunk-uploader-status\">\r\n            <div v-if=\"uploading\" class=\"upload-status-indicator\">\r\n              上传中...请等待\r\n            </div>\r\n            <div v-else class=\"upload-status-completed\">\r\n              上传已完成\r\n            </div>\r\n          </div>\r\n          <div v-if=\"uploading && uploaderStatus.taskCount === 0\" class=\"upload-error\">\r\n            <p>上传组件未正确初始化或未添加文件</p>\r\n            <button type=\"button\" class=\"retry-btn\" @click=\"retryUpload\">重试上传</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, onUnmounted, nextTick } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport dayjs from 'dayjs'\r\nimport { getEventById, createEvent, updateEvent, getMediaUrl } from '@/api/events'\r\nimport AudioRecorder from '@/utils/AudioRecorder'\r\nimport ChunkUploader from '@/components/ChunkUploader.vue'\r\n\r\nexport default {\r\n  name: 'AddEditEvent',\r\n  components: {\r\n    ChunkUploader\r\n  },\r\n  setup() {\r\n    const route = useRoute()\r\n    const router = useRouter()\r\n    \r\n    const imageInput = ref(null)\r\n    const videoInput = ref(null)\r\n    const audioInput = ref(null)\r\n    const loading = ref(false)\r\n    const saving = ref(false)\r\n    const uploading = ref(false)\r\n    const error = ref('')\r\n    \r\n    // 分片上传相关状态\r\n    const showChunkUploader = ref(false)\r\n    const uploadFiles = ref([])\r\n    const currentMediaType = ref('')\r\n    const chunkUploader = ref(null) // 分片上传组件的引用\r\n    \r\n    // 录音相关状态\r\n    const isRecording = ref(false)\r\n    const recordingTime = ref(0)\r\n    const audioRecorder = ref(null)\r\n    \r\n    const isEdit = computed(() => !!route.params.id)\r\n    \r\n    // 表单数据\r\n    const formData = ref({\r\n      title: '',\r\n      date: dayjs().format('YYYY-MM-DD'),\r\n      location: '',\r\n      description: '',\r\n      media: {\r\n        images: [],\r\n        videos: [],\r\n        audios: []\r\n      }\r\n    })\r\n\r\n    // 表单验证\r\n    const isFormValid = computed(() => {\r\n      return formData.value.title.trim() !== '' && formData.value.date !== ''\r\n    })\r\n    \r\n    // 上传组件状态\r\n    const uploaderStatus = computed(() => {\r\n      if (!chunkUploader.value) {\r\n        return { exists: false, taskCount: 0, isUploading: false };\r\n      }\r\n      \r\n      return {\r\n        exists: true,\r\n        taskCount: chunkUploader.value.uploadTasks?.length || 0,\r\n        isUploading: chunkUploader.value.isUploading || false\r\n      };\r\n    })\r\n\r\n    // 加载编辑数据\r\n    const loadEditData = async () => {\r\n      if (isEdit.value) {\r\n      try {\r\n        loading.value = true\r\n          \r\n          const eventId = route.params.id\r\n          const response = await getEventById(eventId)\r\n          \r\n          if (response.success) {\r\n            const event = response.data\r\n            formData.value = {\r\n              title: event.title,\r\n              date: event.date,\r\n              location: event.location || '',\r\n              description: event.description || '',\r\n              media: {\r\n                images: [...event.media.images],\r\n                videos: [...event.media.videos],\r\n                audios: [...event.media.audios]\r\n              }\r\n            }\r\n          } else {\r\n            alert(response.message || '获取事件数据失败')\r\n            // 如果事件不存在，返回首页\r\n            if (response.message === '事件不存在') {\r\n              setTimeout(() => {\r\n                router.push('/')\r\n              }, 1000)\r\n            }\r\n          }\r\n        } catch (err) {\r\n          alert('网络错误，请稍后重试')\r\n          console.error('加载编辑数据失败:', err)\r\n        } finally {\r\n          loading.value = false\r\n        }\r\n      }\r\n    }\r\n\r\n    // 触发文件上传\r\n    const triggerImageUpload = () => {\r\n      imageInput.value.click()\r\n    }\r\n\r\n    const triggerVideoUpload = () => {\r\n      videoInput.value.click()\r\n    }\r\n\r\n    const triggerAudioUpload = () => {\r\n      audioInput.value.click()\r\n    }\r\n\r\n    // 处理文件上传 - 使用分片上传\r\n    // 公共上传处理函数\r\n    const handleChunkUpload = (files, mediaType) => {\r\n      if (!files || files.length === 0) {\r\n        console.log('没有选择文件');\r\n        return;\r\n      }\r\n      \r\n      console.log(`处理文件上传: 类型=${mediaType}, 文件数=${files.length}`);\r\n      files.forEach((file, index) => {\r\n        console.log(`文件[${index}]: 名称=${file.name}, 大小=${file.size}字节, 类型=${file.type}`);\r\n      });\r\n      \r\n      // 保存文件和媒体类型，用于稍后上传\r\n      uploadFiles.value = [...files]; \r\n      currentMediaType.value = mediaType;\r\n      \r\n      // 显示上传对话框\r\n      showChunkUploader.value = true;\r\n      uploading.value = true;\r\n      \r\n      // 使用两层nextTick确保组件完全渲染后再添加文件\r\n      // 第一个nextTick等待showChunkUploader的变化生效\r\n      nextTick(() => {\r\n        console.log('第一个nextTick: 检查上传组件是否存在:', !!chunkUploader.value);\r\n        \r\n        // 第二个nextTick确保组件已完全初始化\r\n        nextTick(() => {\r\n          console.log('第二个nextTick: 再次检查组件:', !!chunkUploader.value);\r\n          \r\n          if (chunkUploader.value) {\r\n            console.log('添加文件到上传组件');\r\n            // 添加保存的文件到上传组件\r\n            uploadFiles.value.forEach((file, index) => {\r\n              console.log(`添加文件[${index}]: ${file.name} 到上传组件`);\r\n              try {\r\n                chunkUploader.value.addFile(file);\r\n                console.log(`文件[${index}]添加成功`);\r\n              } catch (error) {\r\n                console.error(`添加文件[${index}]失败:`, error);\r\n              }\r\n            });\r\n          } else {\r\n            console.error('两次nextTick后组件引用仍不存在!');\r\n            // 尝试直接获取组件\r\n            const uploader = document.querySelector('.chunk-uploader');\r\n            console.log('DOM中是否存在上传组件:', !!uploader);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    \r\n    // 处理图片上传\r\n    const handleImageUpload = (event) => {\r\n      const files = Array.from(event.target.files);\r\n      handleChunkUpload(files, 'images');\r\n      event.target.value = ''; // 清空input\r\n    }\r\n\r\n    // 处理视频上传\r\n    const handleVideoUpload = (event) => {\r\n      const files = Array.from(event.target.files);\r\n      handleChunkUpload(files, 'videos');\r\n      event.target.value = '';\r\n    }\r\n\r\n    // 处理音频上传\r\n    const handleAudioUpload = (event) => {\r\n      const files = Array.from(event.target.files);\r\n      handleChunkUpload(files, 'audios');\r\n      event.target.value = '';\r\n    }\r\n    \r\n    // 处理分片上传完成\r\n    const handleUploadComplete = (fileInfo) => {\r\n      console.log('收到单个文件上传完成事件:', fileInfo);\r\n      \r\n      // 根据当前媒体类型，添加到对应的媒体列表中\r\n      if (currentMediaType.value) {\r\n        console.log(`将文件添加到媒体类型: ${currentMediaType.value}`);\r\n        \r\n        // 检查是否是录音文件，如果是则添加特殊描述\r\n        let desc = fileInfo.fileName || '';\r\n        if (currentMediaType.value === 'audios' && uploadFiles.value.recordingDuration) {\r\n          desc = `录音 (${formatTime(uploadFiles.value.recordingDuration)})`;\r\n          console.log(`设置录音描述: ${desc}`);\r\n        }\r\n        \r\n        // 如果文件有捕获时间，记录在控制台\r\n        if (fileInfo.captureTime) {\r\n          console.log(`文件 ${fileInfo.fileName} 有捕获时间: ${fileInfo.captureTime}`);\r\n        }\r\n        \r\n        const mediaItem = {\r\n          fileName: fileInfo.serverFileName, // 使用服务器端文件名\r\n          desc: desc,\r\n          size: fileInfo.size,\r\n          uploadTime: new Date().toISOString(),\r\n          captureTime: fileInfo.captureTime || null // 保存捕获时间信息\r\n        };\r\n        \r\n        console.log('添加媒体项:', mediaItem);\r\n        formData.value.media[currentMediaType.value].push(mediaItem);\r\n        console.log(`当前${currentMediaType.value}数量: ${formData.value.media[currentMediaType.value].length}`);\r\n      } else {\r\n        console.warn('文件上传完成但媒体类型未设置!');\r\n      }\r\n    }\r\n    \r\n    // 所有文件上传完成\r\n    const handleAllUploadsCompleted = (data) => {\r\n      console.log('所有文件上传完成', data);\r\n      uploading.value = false;\r\n      \r\n      // 检查并处理捕获时间\r\n      if (data && data.captureTime) {\r\n        console.log(`获取到捕获时间: ${data.captureTime}`);\r\n        // 将捕获时间转换为日期格式 YYYY-MM-DD 并更新表单日期\r\n        try {\r\n          const captureDate = dayjs(data.captureTime).format('YYYY-MM-DD');\r\n          console.log(`将事件日期从 ${formData.value.date} 更新为 ${captureDate}`);\r\n          formData.value.date = captureDate;\r\n        } catch (error) {\r\n          console.error('无法解析捕获时间:', error);\r\n        }\r\n      }\r\n      \r\n      // 清除录音持续时间\r\n      if (uploadFiles.value.recordingDuration) {\r\n        uploadFiles.value.recordingDuration = null;\r\n        console.log('清除录音持续时间');\r\n      }\r\n      \r\n      recordingTime.value = 0;\r\n      \r\n      // 延迟隐藏上传区域，给用户一点时间看到完成状态\r\n      setTimeout(() => {\r\n        console.log('隐藏上传区域');\r\n        showChunkUploader.value = false;\r\n      }, 1000);\r\n    }\r\n    \r\n    // 重试上传\r\n    const retryUpload = () => {\r\n      console.log('重试上传, 文件数:', uploadFiles.value.length);\r\n      \r\n      if (!uploadFiles.value || uploadFiles.value.length === 0) {\r\n        console.warn('没有待上传文件，无法重试');\r\n        return;\r\n      }\r\n      \r\n      // 添加小延迟以确保组件已完全初始化\r\n      nextTick(() => {\r\n        if (chunkUploader.value) {\r\n          console.log('尝试重新添加文件到上传组件');\r\n          uploadFiles.value.forEach((file, index) => {\r\n            console.log(`重新添加文件[${index}]: ${file.name}`);\r\n            try {\r\n              chunkUploader.value.addFile(file);\r\n            } catch (error) {\r\n              console.error(`重新添加文件失败:`, error);\r\n            }\r\n          });\r\n        } else {\r\n          console.error('上传组件仍不可用');\r\n        }\r\n      });\r\n    }\r\n\r\n    // 录音相关方法\r\n    const initAudioRecorder = () => {\r\n      if (!audioRecorder.value) {\r\n        audioRecorder.value = new AudioRecorder()\r\n        \r\n        // 设置录音完成回调\r\n        audioRecorder.value.onStop = async (audioBlob, duration) => {\r\n          await uploadRecordedAudio(audioBlob, duration)\r\n        }\r\n        \r\n        // 设置录音时间更新回调\r\n        audioRecorder.value.onTimeUpdate = (time) => {\r\n          recordingTime.value = time\r\n        }\r\n        \r\n        // 设置错误回调\r\n        audioRecorder.value.onError = (err) => {\r\n          alert(`录音失败: ${err.message || '未知错误'}`)\r\n          isRecording.value = false\r\n          recordingTime.value = 0\r\n        }\r\n      }\r\n    }\r\n\r\n    const startRecording = async () => {\r\n      try {\r\n        if (!AudioRecorder.isSupported()) {\r\n          alert('当前浏览器不支持录音功能，请使用现代浏览器')\r\n          return\r\n        }\r\n\r\n        initAudioRecorder()\r\n        await audioRecorder.value.startRecording()\r\n        isRecording.value = true\r\n        recordingTime.value = 0\r\n      } catch (err) {\r\n        alert(err.message || '无法启动录音，请检查麦克风权限')\r\n        isRecording.value = false\r\n        console.error('录音启动失败:', err)\r\n      }\r\n    }\r\n\r\n    const stopRecording = () => {\r\n      if (audioRecorder.value && isRecording.value) {\r\n        audioRecorder.value.stopRecording()\r\n        isRecording.value = false\r\n      }\r\n    }\r\n\r\n    const toggleRecording = () => {\r\n      if (isRecording.value) {\r\n        stopRecording()\r\n      } else {\r\n        startRecording()\r\n      }\r\n    }\r\n\r\n    const uploadRecordedAudio = async (audioBlob, duration) => {\r\n      try {\r\n        // 创建文件名\r\n        const timestamp = new Date().toISOString().replace(/[:.]/g, '-')\r\n        const extension = audioRecorder.value.getFileExtension()\r\n        const fileName = `recording_${timestamp}.${extension}`\r\n        \r\n        // 创建File对象\r\n        const audioFile = new File([audioBlob], fileName, { \r\n          type: audioBlob.type \r\n        })\r\n\r\n        // 设置当前媒体类型为音频\r\n        currentMediaType.value = 'audios'\r\n        \r\n        // 记录录音持续时间，用于后续描述\r\n        uploadFiles.value = [audioFile]\r\n        uploadFiles.value.recordingDuration = duration\r\n        \r\n        // 显示上传对话框并设置上传中状态\r\n        showChunkUploader.value = true\r\n        uploading.value = true\r\n        \r\n        // 添加文件到上传组件 (会自动开始上传)\r\n        nextTick(() => {\r\n          if (chunkUploader.value) {\r\n            chunkUploader.value.addFile(audioFile);\r\n          }\r\n        });\r\n      } catch (err) {\r\n        alert('网络错误，录音上传失败')\r\n        console.error('录音上传失败:', err)\r\n        recordingTime.value = 0\r\n      }\r\n    }\r\n\r\n    // 格式化时间显示\r\n    const formatTime = (seconds) => {\r\n      const mins = Math.floor(seconds / 60)\r\n      const secs = seconds % 60\r\n      return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`\r\n    }\r\n\r\n    // 移除媒体文件\r\n    const removeMedia = (type, index) => {\r\n      formData.value.media[type].splice(index, 1)\r\n    }\r\n\r\n    // 保存事件\r\n    const saveEvent = async () => {\r\n      if (!isFormValid.value || saving.value) return\r\n\r\n      try {\r\n        saving.value = true\r\n\r\n        const eventData = {\r\n          title: formData.value.title,\r\n          date: formData.value.date,\r\n          location: formData.value.location,\r\n          description: formData.value.description,\r\n          media: {\r\n            images: formData.value.media.images.map(img => ({\r\n              fileName: img.fileName, // 这里保存的是服务器端文件名\r\n              desc: img.desc\r\n            })),\r\n            videos: formData.value.media.videos.map(vid => ({\r\n              fileName: vid.fileName, // 这里保存的是服务器端文件名\r\n              desc: vid.desc\r\n            })),\r\n            audios: formData.value.media.audios.map(aud => ({\r\n              fileName: aud.fileName, // 这里保存的是服务器端文件名\r\n              desc: aud.desc\r\n            }))\r\n          }\r\n        }\r\n\r\n        let response\r\n        if (isEdit.value) {\r\n          response = await updateEvent(route.params.id, eventData)\r\n        } else {\r\n          response = await createEvent(eventData)\r\n        }\r\n\r\n        if (response.success) {\r\n          // 保存成功，返回首页并定位到该事件\r\n          const eventId = isEdit.value ? route.params.id : response.data.id\r\n          router.push({\r\n            path: '/',\r\n            query: { highlight: eventId }\r\n          })\r\n        } else {\r\n          alert(response.message || '保存失败')\r\n        }\r\n      } catch (err) {\r\n        alert('网络错误，保存失败')\r\n        console.error('保存事件失败:', err)\r\n      } finally {\r\n        saving.value = false\r\n      }\r\n    }\r\n\r\n    // 返回\r\n    const goBack = () => {\r\n      if (isEdit.value) {\r\n        // 编辑模式下返回到详情页面\r\n        router.push(`/event/${route.params.id}`)\r\n      } else {\r\n        // 新增模式下返回到首页\r\n        router.push('/')\r\n      }\r\n    }\r\n\r\n    onMounted(async () => {\r\n      await loadEditData()\r\n    })\r\n\r\n    onUnmounted(() => {\r\n      // 清理录音资源\r\n      if (audioRecorder.value) {\r\n        audioRecorder.value.destroy()\r\n      }\r\n    })\r\n\r\n    return {\r\n      isEdit,\r\n      formData,\r\n      isFormValid,\r\n      loading,\r\n      saving,\r\n      uploading,\r\n      error,\r\n      imageInput,\r\n      videoInput,\r\n      audioInput,\r\n      isRecording,\r\n      recordingTime,\r\n      showChunkUploader,\r\n      uploadFiles,\r\n      currentMediaType,\r\n      uploaderStatus,\r\n      triggerImageUpload,\r\n      triggerVideoUpload,\r\n      triggerAudioUpload,\r\n      handleImageUpload,\r\n      handleVideoUpload,\r\n      handleAudioUpload,\r\n      handleUploadComplete,\r\n      handleAllUploadsCompleted,\r\n      toggleRecording,\r\n      formatTime,\r\n      removeMedia,\r\n      saveEvent,\r\n      goBack,\r\n      loadEditData,\r\n      getMediaUrl,\r\n      route,\r\n      retryUpload,\r\n      chunkUploader\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.add-edit-event {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n  padding: 20px;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n}\r\n\r\n/* 头部 */\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  max-width: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.back-btn {\r\n  background: white;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin-right: 20px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.back-btn:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.page-title {\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n}\r\n\r\n/* 表单容器 */\r\n.form-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  background: white;\r\n  border-radius: 20px;\r\n  padding: 30px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.event-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 30px;\r\n}\r\n\r\n/* 表单区块 */\r\n.form-section {\r\n  border-bottom: 1px solid #ecf0f1;\r\n  padding-bottom: 25px;\r\n}\r\n\r\n.form-section:last-of-type {\r\n  border-bottom: none;\r\n}\r\n\r\n.section-title {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin: 0 0 20px 0;\r\n  padding-bottom: 8px;\r\n  border-bottom: 2px solid #3498db;\r\n  display: inline-block;\r\n}\r\n\r\n/* 表单组 */\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-label {\r\n  display: block;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.form-input, .form-textarea {\r\n  width: 100%;\r\n  padding: 12px 16px;\r\n  border: 2px solid #ecf0f1;\r\n  border-radius: 10px;\r\n  font-size: 14px;\r\n  transition: border-color 0.3s ease;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.form-input:focus, .form-textarea:focus {\r\n  outline: none;\r\n  border-color: #3498db;\r\n}\r\n\r\n.form-textarea {\r\n  resize: vertical;\r\n  min-height: 100px;\r\n}\r\n\r\n/* 上传区域 */\r\n.upload-area {\r\n  border: 2px dashed #bdc3c7;\r\n  border-radius: 10px;\r\n  padding: 30px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.upload-area:hover:not(.uploading) {\r\n  border-color: #3498db;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.upload-area.uploading {\r\n  border-color: #f39c12;\r\n  background-color: #fef9e7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.upload-placeholder {\r\n  color: #7f8c8d;\r\n}\r\n\r\n.upload-placeholder p {\r\n  font-size: 16px;\r\n  margin: 10px 0 5px 0;\r\n  font-weight: 500;\r\n}\r\n\r\n.upload-hint {\r\n  font-size: 12px;\r\n  color: #95a5a6;\r\n}\r\n\r\n/* 媒体列表 */\r\n.media-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n.media-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  padding: 15px;\r\n  background: #f8f9fa;\r\n  border-radius: 10px;\r\n  border: 1px solid #ecf0f1;\r\n}\r\n\r\n.media-preview {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n  color: white;\r\n  flex-shrink: 0;\r\n  background: linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%);\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n}\r\n\r\n.media-icon {\r\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.media-preview.video {\r\n  background: linear-gradient(135deg, #8e44ad 0%, #9b59b6 100%);\r\n}\r\n\r\n.media-preview.audio {\r\n  background: linear-gradient(135deg, #e67e22 0%, #d35400 100%);\r\n}\r\n\r\n.media-info {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n\r\n.media-desc-input {\r\n  padding: 8px 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n}\r\n\r\n.media-desc-input:focus {\r\n  outline: none;\r\n  border-color: #3498db;\r\n}\r\n\r\n.media-filename {\r\n  font-size: 12px;\r\n  color: #7f8c8d;\r\n  font-style: italic;\r\n}\r\n\r\n.remove-btn {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  border: none;\r\n  background: #e74c3c;\r\n  color: white;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.remove-btn:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n/* 操作按钮 */\r\n.form-actions {\r\n  display: flex;\r\n  gap: 15px;\r\n  justify-content: center;\r\n  padding-top: 20px;\r\n}\r\n\r\n.cancel-btn, .save-btn {\r\n  padding: 12px 30px;\r\n  border: none;\r\n  border-radius: 25px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n  min-width: 120px;\r\n}\r\n\r\n.cancel-btn {\r\n  background: #95a5a6;\r\n  color: white;\r\n}\r\n\r\n.save-btn {\r\n  background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);\r\n  color: white;\r\n}\r\n\r\n.save-btn:disabled {\r\n  background: #bdc3c7;\r\n  cursor: not-allowed;\r\n  transform: none;\r\n}\r\n\r\n/* 加载和错误状态 */\r\n.loading-container, .error-container {\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.loading-spinner, .error-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.retry-btn {\r\n  background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  margin-top: 15px;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.retry-btn:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n\r\n\r\n.cancel-btn:hover, .save-btn:hover:not(:disabled) {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n/* 录音控制样式 */\r\n.recording-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n  padding: 20px;\r\n  background: #f8f9fa;\r\n  border-radius: 15px;\r\n  border: 2px solid #ecf0f1;\r\n}\r\n\r\n.record-btn {\r\n  padding: 15px 30px;\r\n  border: none;\r\n  border-radius: 30px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);\r\n  color: white;\r\n  box-shadow: 0 4px 15px rgba(231, 76, 60, 0.3);\r\n  min-width: 150px;\r\n}\r\n\r\n.record-btn.recording {\r\n  background: linear-gradient(135deg, #34495e 0%, #2c3e50 100%);\r\n  animation: pulse 1.5s infinite;\r\n  box-shadow: 0 4px 15px rgba(52, 73, 94, 0.3);\r\n}\r\n\r\n.record-btn:hover:not(:disabled) {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 20px rgba(231, 76, 60, 0.4);\r\n}\r\n\r\n.record-btn.recording:hover {\r\n  box-shadow: 0 6px 20px rgba(52, 73, 94, 0.4);\r\n}\r\n\r\n.record-btn:disabled {\r\n  background: #bdc3c7;\r\n  cursor: not-allowed;\r\n  transform: none;\r\n  box-shadow: none;\r\n}\r\n\r\n.recording-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 5px;\r\n  color: #e74c3c;\r\n}\r\n\r\n.recording-time {\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  font-family: 'Courier New', monospace;\r\n  color: #e74c3c;\r\n  text-shadow: 0 1px 3px rgba(231, 76, 60, 0.3);\r\n}\r\n\r\n.recording-indicator {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  animation: blink 1s infinite;\r\n}\r\n\r\n.upload-area.secondary {\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  border-color: #ddd;\r\n  background: #fafafa;\r\n  margin-top: 15px;\r\n}\r\n\r\n.upload-area.secondary:hover:not(.uploading):not(.disabled) {\r\n  border-color: #95a5a6;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.upload-area.disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n  pointer-events: none;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% { \r\n    transform: scale(1); \r\n    box-shadow: 0 4px 15px rgba(52, 73, 94, 0.3);\r\n  }\r\n  50% { \r\n    transform: scale(1.05); \r\n    box-shadow: 0 6px 20px rgba(52, 73, 94, 0.5);\r\n  }\r\n  100% { \r\n    transform: scale(1); \r\n    box-shadow: 0 4px 15px rgba(52, 73, 94, 0.3);\r\n  }\r\n}\r\n\r\n@keyframes blink {\r\n  0%, 50% { opacity: 1; }\r\n  51%, 100% { opacity: 0.3; }\r\n}\r\n\r\n/* 分片上传弹窗 */\r\n.chunk-uploader-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.chunk-uploader-container {\r\n  background: white;\r\n  border-radius: 15px;\r\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);\r\n  width: 90%;\r\n  max-width: 600px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n}\r\n\r\n.chunk-uploader-container h3 {\r\n  margin-top: 0;\r\n  margin-bottom: 20px;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  text-align: center;\r\n}\r\n\r\n.chunk-uploader-status {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.upload-status-indicator {\r\n  color: #3498db;\r\n  font-weight: bold;\r\n  padding: 10px;\r\n  background-color: rgba(52, 152, 219, 0.1);\r\n  border-radius: 6px;\r\n  animation: pulse 1.5s infinite;\r\n}\r\n\r\n.upload-status-completed {\r\n  color: #27ae60;\r\n  font-weight: bold;\r\n  padding: 10px;\r\n  background-color: rgba(39, 174, 96, 0.1);\r\n  border-radius: 6px;\r\n}\r\n\r\n.upload-error {\r\n  color: #e74c3c;\r\n  font-weight: bold;\r\n  padding: 10px;\r\n  background-color: rgba(231, 76, 60, 0.1);\r\n  border-radius: 6px;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.upload-error .retry-btn {\r\n  margin-top: 10px;\r\n  padding: 8px 16px;\r\n  background-color: #e74c3c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: normal;\r\n}\r\n\r\n.upload-error .retry-btn:hover {\r\n  background-color: #c0392b;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .add-edit-event {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .recording-controls {\r\n    flex-direction: column;\r\n    gap: 15px;\r\n    padding: 15px;\r\n  }\r\n  \r\n  .record-btn {\r\n    width: 100%;\r\n    padding: 12px 20px;\r\n    font-size: 14px;\r\n    min-width: auto;\r\n  }\r\n  \r\n  .recording-time {\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .form-container {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .upload-area {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .media-item {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    gap: 10px;\r\n    padding: 10px;\r\n  }\r\n  \r\n  .media-preview {\r\n    width: 40px;\r\n    height: 40px;\r\n    font-size: 20px;\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .media-desc-input {\r\n    font-size: 13px;\r\n    padding: 6px 10px;\r\n  }\r\n  \r\n  .remove-btn {\r\n    width: 28px;\r\n    height: 28px;\r\n    font-size: 12px;\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .form-actions {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .cancel-btn, .save-btn {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n",".vjs-svg-icon {\n  display: inline-block;\n  background-repeat: no-repeat;\n  background-position: center;\n  fill: currentColor;\n  height: 1.8em;\n  width: 1.8em;\n}\n.vjs-svg-icon:before {\n  content: none !important;\n}\n\n.vjs-svg-icon:hover,\n.vjs-control:focus .vjs-svg-icon {\n  filter: drop-shadow(0 0 0.25em #fff);\n}\n\n.vjs-modal-dialog .vjs-modal-dialog-content, .video-js .vjs-modal-dialog, .vjs-button > .vjs-icon-placeholder:before, .video-js .vjs-big-play-button .vjs-icon-placeholder:before {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.vjs-button > .vjs-icon-placeholder:before, .video-js .vjs-big-play-button .vjs-icon-placeholder:before {\n  text-align: center;\n}\n\n@font-face {\n  font-family: VideoJS;\n  src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAABTsAAsAAAAAIpAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAPgAAAFZRiV32Y21hcAAAAYQAAAEJAAAD5p42+VxnbHlmAAACkAAADtIAABckI4l972hlYWQAABFkAAAAKwAAADYsvIjpaGhlYQAAEZAAAAAdAAAAJA+RCL1obXR4AAARsAAAABcAAAC8Q2YAAGxvY2EAABHIAAAAYAAAAGB7CIGGbWF4cAAAEigAAAAfAAAAIAFAAI9uYW1lAAASSAAAASUAAAIK1cf1oHBvc3QAABNwAAABfAAAAnXdFqh1eJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGR7yDiBgZWBgaWQ5RkDA8MvCM0cwxDOeI6BgYmBlZkBKwhIc01hcPjI+FGPHcRdyA4RZgQRADaGCyYAAHic7dPXbcMwAEXRK1vuvffem749XAbKV3bjBA6fXsaIgMMLEWoQJaAEFKNnlELyQ4K27zib5PNF6vl8yld+TKr5kH0+cUw0xv00Hwvx2DResUyFKrV4XoMmLdp06NKjz4AhI8ZMmDJjzoIlK9Zs2LJjz4EjJ85cuHLjziPe/0UWL17mf2tqKLz/9jK9f8tXpGCoRdPKhtS0RqFkWvVQNtSKoVYNtWaoddPXEBqG2jQ9XWgZattQO4baNdSeofYNdWCoQ0MdGerYUCeGOjXUmaHODXVhqEtDXRnq2lA3hro11J2h7g31YKhHQz0Z6tlQL4Z6NdSbod4N9WGoT9MfHF6GmhnZLxyDcRMAAAB4nJ1YC1hU17U+a5/HMA4iA3NmVBDmoQwP5TFnHlFeA4gYiUFRQINoSCBAyK3G2yi+0aipYtFcHYo2xsb4NiY3+VrNxSaX5uvt495ozNdoYoxmem2/L8HGpLc+InB279pnhlGr5mvL4eyz99nrrL32eu1/DQcc/okdYgdHOA6MQKp4r9gx0EcMHMezOalVasW5BM7NcXoSb9fFgE6KtSSBxWz1FYDPG+vMBGcKb9cebu2VS5s2aaTkCvRSf6C7Y+Ppibm5E09v7IDs2/3uZQtbD0zIyppwoHXh/93ukmyYgdePNRp65p5v+3v/9otQl2O7wP34cT88p8Md2YxpYLQZoRcy6FlSBRnwnGAe6BPMSCZo+7NJVqS0cE4uHendzhSnbPH6TDqL1+Nme5LZXkCHnGyoH0kne30WH+gswhm3q+pt/mTas9NLS64GnjmSlTPw0wVQT/ewRaBgxtydy3cuUB9/6SW+vb5yRvr+t0eOfPKJZ/9t3+4tL7xj32Xd3thCxi+ge6ifdsAN+l5+wi5HQ/cCoeull1AszS7CUfEcJzK7sKWJAdJhCd0sPM4+EY7QDm5ov08hXRQXE5bf6PV5Q5+IjW7X7Nku92Ask4l2hCRRD6TPqISiCJeQna3SCFwrhrNzXHzo4yFevBwxpzxk8WCIIfkvVEKVy32SbT8n68gzgaslpaiO2zIGIyuSb7RNf9HSuN26y/7OC1tgEmpiyA6aD4qcgTOiLThwGG0eB694FI8NHLLN6OBlRVaMxNAFS4JdXUG6mW8PwpKuYLCLXKGbu8iwYNdgO06Sn3Th+/vyZAxs8Ro30DjHe9gy8Fywi24OMm7Qyzh3MTZVOMYhLBnoC+J79lpTUyQmorjhnMwlcQ5uPEYGpDjsOkkH49BjQLQBqs3jFtFdJNlksYmoQFDArLh8Xh+Qd6Ghcsb6FUuehDi+U/lqD71K/qiegeV1imcwjl7ExwiSrf4BZyCujV6cVcFo6VX+G9IcPyFjJnUufbU/jzrL1X99as36reXl8K32nFaOr+E8jWJEcJ55DpMVfSMe95/AJaOsGBH2GJCNpiRQbK4C8BjdmQA22QY2j03Em13i2YHqtNLU1NI04Yj2HJgA6fQc6VPNpA/D+Ryks554NnVy2mB72uRUfPLsqR4N0LOBQKArwJYO+5W2fgZX8oC1HR6HjNaQTVIG2FPwnTcXXGZZfNB7TE6pTKZUwaw91XWLAoFFGcnB5PHjsckgBjbWutrL+0h5Y1xw3DRGDumsnXb3MJwXrJIN5U7m0rgJ3yG5w4he5ckFG4pmNEkOm0/xOO4r4yL87wqtQM+hiJIVp+6iG2wPBKD35ElGkDx+UfC2v1mFG1o+M3AjNFty8biKMXwzyxnZLds8wYD2BxmCPHAldPOeLsy/0BugftYhVYFAhO8SqQ0j3oK7dHJZnI/jxmUS4onlxskSF8thmvNZjIrRZwEPxr0lBuLRuz3oy/FOHCsxwOPYh2M+e9u3J5pgPYz9gp6G7C9m0A11F9ddqKMfV+4sbq45/YspOysXvT+3pdFdYNg2fHbW8Dz301MqDVuGrz0Fuh0YMW8mddrpqzST7rV9BcvqPoNvadRndWp0p8HvbiqrFj5yFQ/vNFSXDpxpLEFWp+DcrF3FT1afWshFcmCfeAMjEvO65i0Y6XijQfSRPWx3TV/Df7Km3E1l+kLt56s/rwVzuRusNMhudznkwdLaS+QNdeal2jDPP4l9qHc98vTYZOSkxzD+njBWVWjFPKgipx6DkWvXQiW8OYcewVHE5yukinDMcfGgc0opDltYKDxIGBedkzc6jSfE7tlvESCDFUw0Hx0opS+U0lHCxNottbNWSxX9zZVvEhKWUSyBpaXwBc2a98M6UqPeXAs/GDon8Ax7hsthO8cM5HU7Ad0UvRR9lHmtyQKZ4MAe814X5h9MSUkQmhf96eVJ6p90OjIiqSIjvykvr2l5U55O/fPQKD+jIomYpNyGJQ25uQ2kIikRfAmuBHCPsWqkSDEqgZ5KDI2sifS/R43MbZg0idFHbCPNxXxZws1ACVE6hAhOdJwRkJLFBLPZpRGYJ50pko6XzMkgmSx40ljik6AQcKhFnLcQE6rF7PXFe1Ocoj0T3AXgSgJTDIhHRfHlYZKuSzc6uievOJGXY+i5GJkkTp7UM3y0LqATDbtFcbdBxO7o4T25JYlEjoH0uynUh8rapkxp62QN70svSF+hT4gGPlovlmcm/ComLi7mV4kTykV9NFWjE/QrwgQ4uIcAP0rQF4VZYRP2o3PhHHzfPMJj9Ir+uzKUlrH49ntT18AVvj1sc3YGjUT/Mt2Dxawa8ArcA7bCQIpvfwAYu22vEG/No/5RvPdA7g+AelLrPwzy+LtkLPhnpIxH14m4EYq8eeMHbPEPNm6G7Nv9B4jcFPZ8bJj0SEjP3MPgQdKTqqEoy2v6G32P/Y6dxOv04AxnoAeq+GILvUavtYCBXm+BaIhuodcfrN5B/V2EYMCPh+SxavjGyPwV0x4CJgUPGT0mQaODGBACIJZGsMXwAD0LGXx7l3CdAcKMIKI+f5CepWeD0BvyU/GcdBxPF8SwejC6LGZmAURFdsSWKR5HyHld2kbdIZO1Ixx+bnnzU7n5+blPNV9jnUDWhP2tC68tbN3PVIldsQPxSAcSpjOav7Q05uXn5zW2LLvDXn9B6syscPy9iDLEMmSrJz6nYuWMipukjM0AH8JkGS+XFyMRkzSCH7KD/hwm172SAyZYumHlefr5AddrtA0O0TnwaVZxcRY9Bfukn9Gf05N1r9DV9MoBsJ1f+ZrqUvtPHizJAntWybv7hmqLt6QLuK6ZS9Fqi1jO5rDoWPZXXII5Tgajg53cIXCjDCGIcYrRIY2n6+mXOa/W0bdhau3ryiEYe2FV/5oeaIYK/5w5frCyll6/cYO8DiNhw6t1MBWmznt91QX62UF1N7l0eHBZTRGpKaqpKVIPF9UcIzmReud9TSY75+K899GHbBu6wjoR7RKKZVYiYxSPf5/2wJT5e3NAhmUbVn5KLx1Ujg0+BGvpAIh0DezInTkzF37KVocxrKU3r1+XLtAe2lO3l66kfQfB/unKY+q8N375Ru8bc4pJXfEcESU95q+p8ZNZRTWH1d9FzvUdYXk5rLkcdkEisoKKVHQW/b3GEx6tPaYcoJfOr9wAbSBnv1IHpep0OExr4LPMkpJM+j7sly7UHkOzXjoAZljHCGiyegtNlwljM0v+c19ET9Pvst09a2Mtgcf5/ZSzYO5h1156+eyydfAsxGa9XAuF6vzjh6CssLq6ECysperXX0sX5h5ZdpZe3guxsGIPEtHk/aqXX1hVqP5HYVVVISkrrNqvXorIc+5Ou91Hnr/LcD2afi6eX7UBloOcs7cOpqgGaNfs1g7bNbs9z6wASaylN69d0/TFTIz6Ws8+oGV3mE2612wRTHKcVUbhjKadebloMc+dyXgMVtVK6BwMB/+mVW09igdRBWaRtNQX59d/VD//xdQ0TCiYNj1KT9sq6Wdu5WTbqk3qDXyDaLa1fv621LS01G3z61sD6lH8lAxDLicV921s6Bf92JOYvzNYCL1khbqBXEFUzC521N5NyzNaQIWhjyFyDoBIVrAjmv2UEaLlI+c6zw1jmVIPLLLZZUTj6GxGHW+mq1tgHXR2D85p4Q934+jLbtjVLcyCdS10NVzpHqxp4Q/hK7WopY/NRGx9HGsPGdFjOjcpjBnGYMVqY/4eqT5khWEHWUup2A/pTw7pdWgsWft7ETUERL96nRg0HNFPmCYba6pylECaExX89A9WLUOVB4oKLu/o1oqSYHCgLzBUlAz8hNFDRpeSU1XT+LRmDUgPaKbYdHDn9suF/tu13nHJij0N97LfS0QmqONuyONk7zvUI6Qa0pF9f2+oABL92AT6e0U//z9YqAiWtJLU1JK0gS+1aacwamiNqK067u9ZQ8f1d4qLodMzz3uL89Z68V/Hnr++hXWUuHgw8dfi972PeTyPefu3aNNucemQ74qFuIaJnVkOu4Q+yjuwmmC1FqZpl1i4uzoPxjkpPf3Xv545tl26Rr+dOvUd+omqJzch9dOeU7f10Y64nMcKK137DccIZq2WdXtdZjbEoLSzHwiMtrjYLDxpHQW8gjMX6XFYAE2zSWVD04EGYSs9MbO6sEo20BMEAB4mpvSypsKjZ4Stgzb+c3A9/MQT2+vrBy+qvyFxLUtLlSRF/Ri2wjfZ2dus2Q8lXx4608/jnqK5OOap6NY2PSjYYnECCjiEeLJll/pbmqfeIK+ps3+MxrlEhqmTPipVP7kqlF4VhpEb6r+Q7YOJg38kJ9SHBf3NBl6+9YchfbUjb5ahLSzUM3kPHmwFAsZ5rpai0S7E5xWzZ1j+fW7zsUWP2g5NXTw52ySCTrgG0+lbw60l2Y/CB185CoA8NK+tbRKxfjy6pm5hzQRRR+cMqv1Jbiw6STivtEvt3DRcy0QEh92JlUGo2PG4tSKHl00YD6xc8CK+YPYyy3io2lN8BcSjKRzrIV6ypOAobqxViJPaT9M9Hy5szY33mp7OX/Zu89L/7Ww5vqY2Y8b0pKgoiUhG5cPDPzq8qTV/WkzUOIvXVVA96kmjcBrr3HrYC/Wn+fYP6Z7T1rqy3zknbvqma/FvVk96fNXGkuaXrdHW5JGSxZT/2I/O73v+yNWafMdzc5NdxYurHs6h86e01sLKLz9EBrg+x36rxAaED7hRnAMx7Vzu+9wabh3zG8XLQjx0ablUJzmxdErxYT3kzQSd0SSafVqF5PXgpp0OyYJ1EyNHpGUZmvK575ySzd85JSqF7IBzSAbMM04+MbE58xF3/njXOGecSaermlw2y9PsSQdytLJVr8t+wg+rR8cZYoeNxVIzNdk3Bngi8U5LAlgTFoQnzJCa5EsCgYhCaGL+qPj7TdhG31p9tej3R04N//PXxNwJvyUqwaJqRPJY98TJ5TPndmflRAkAhBfe46sfKW5wizSge08Xb7Ca/GUVs55trngkKkrUS2WPzKttaaqq+idmahugkY+W6fN0I6i3gPt/x88U4wAAeJxjYGRgYADiGU9YXsXz23xl4GZnAIFH7fO+IdMc/WBxDgYmEAUASbMKwAB4nGNgZGBgZwABjj4Ghv//OfoZGBlQgT4ARicDZAAAAHicY2BgYGAfxJijD8Fmu4EqBwCSpgKpAAAAAAAADgBoAH4AzADgAQIBQgFsAZgB7gIuAooC0AL8A2IDjAOoA+AEMASwBNoFCAVaBcAGCAYuBnAGrAb2B04HigfSCCoIcAiGCJwIyAkkCVYJiAmsCfIKIApWCsQLknicY2BkYGDQZ2hmYGcAASYg5gJCBob/YD4DABqrAdAAeJxdkE1qg0AYhl8Tk9AIoVDaVSmzahcF87PMARLIMoFAl0ZHY1BHdBJIT9AT9AQ9RQ9Qeqy+yteNMzDzfM+88w0K4BY/cNAMB6N2bUaPPBLukybCLvleeAAPj8JD+hfhMV7hC3u4wxs7OO4NzQSZcI/8Ltwnfwi75E/hAR7wJTyk/xYeY49fYQ/PztM+jbTZ7LY6OWdBJdX/pqs6NYWa+zMxa13oKrA6Uoerqi/JwtpYxZXJ1coUVmeZUWVlTjq0/tHacjmdxuL90OR8O0UEDYMNdtiSEpz5XQGqzlm30kzUdAYFFOb8R7NOZk0q2lwAyz1i7oAr1xoXvrOgtYhZx8wY5KRV269JZ5yGpmzPTjQhvY9je6vEElPOuJP3mWKnP5M3V+YAAAB4nG2ReVPbMBDF/ULi2EkDBFqO3gdHLxUzDB9IkdexBllydRD49ihO3Ckz7B/a31utZnafkkGyiXnyclxhgB0MMUKKMTLkmGCKV5hhF3vYxxwHOMRrvMERjnGCU7zFO7zHB3zEJ3zGF3zFN5zhHBe4xHf8wE/8wm8w/MEVimTYKv44XR9MSCsUjVoeHE3vjQoNsSZ4mmxZmVWPjSz7jlou6/0qKOWEJdKMtCe793/hQfqxa6XWZHMXFl56RS4TvPXSaDeoy0zUUZB109KstDK8lHo5q6Qi1hcOnqkImubPS6aqRq7mlnaEWabub4iYblba3SRmgldS0+FWdhNtt04F14JUaqkl7tcpOpJtErvNt3Bd9HRT5JWxK25Ldjvp6br4hzfFiIdSmlzTg2fSUzNrLd1LE1ynxq4OVaVoKLjzJ60UPtj1RKzHzsbjly6inVnFBS2MucviPncU7Rr7lfTxRepDs1A2j3ZHRc7PuzFYSfE3ZOd4kjwBy227hA==) format(\"woff\");\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-play, .video-js .vjs-play-control .vjs-icon-placeholder, .video-js .vjs-big-play-button .vjs-icon-placeholder:before {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-play:before, .video-js .vjs-play-control .vjs-icon-placeholder:before, .video-js .vjs-big-play-button .vjs-icon-placeholder:before {\n  content: \"\\f101\";\n}\n\n.vjs-icon-play-circle {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-play-circle:before {\n  content: \"\\f102\";\n}\n\n.vjs-icon-pause, .video-js .vjs-play-control.vjs-playing .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-pause:before, .video-js .vjs-play-control.vjs-playing .vjs-icon-placeholder:before {\n  content: \"\\f103\";\n}\n\n.vjs-icon-volume-mute, .video-js .vjs-mute-control.vjs-vol-0 .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-volume-mute:before, .video-js .vjs-mute-control.vjs-vol-0 .vjs-icon-placeholder:before {\n  content: \"\\f104\";\n}\n\n.vjs-icon-volume-low, .video-js .vjs-mute-control.vjs-vol-1 .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-volume-low:before, .video-js .vjs-mute-control.vjs-vol-1 .vjs-icon-placeholder:before {\n  content: \"\\f105\";\n}\n\n.vjs-icon-volume-mid, .video-js .vjs-mute-control.vjs-vol-2 .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-volume-mid:before, .video-js .vjs-mute-control.vjs-vol-2 .vjs-icon-placeholder:before {\n  content: \"\\f106\";\n}\n\n.vjs-icon-volume-high, .video-js .vjs-mute-control .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-volume-high:before, .video-js .vjs-mute-control .vjs-icon-placeholder:before {\n  content: \"\\f107\";\n}\n\n.vjs-icon-fullscreen-enter, .video-js .vjs-fullscreen-control .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-fullscreen-enter:before, .video-js .vjs-fullscreen-control .vjs-icon-placeholder:before {\n  content: \"\\f108\";\n}\n\n.vjs-icon-fullscreen-exit, .video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-fullscreen-exit:before, .video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder:before {\n  content: \"\\f109\";\n}\n\n.vjs-icon-spinner {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-spinner:before {\n  content: \"\\f10a\";\n}\n\n.vjs-icon-subtitles, .video-js .vjs-subs-caps-button .vjs-icon-placeholder,\n.video-js.video-js:lang(en-GB) .vjs-subs-caps-button .vjs-icon-placeholder,\n.video-js.video-js:lang(en-IE) .vjs-subs-caps-button .vjs-icon-placeholder,\n.video-js.video-js:lang(en-AU) .vjs-subs-caps-button .vjs-icon-placeholder,\n.video-js.video-js:lang(en-NZ) .vjs-subs-caps-button .vjs-icon-placeholder, .video-js .vjs-subtitles-button .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-subtitles:before, .video-js .vjs-subs-caps-button .vjs-icon-placeholder:before,\n.video-js.video-js:lang(en-GB) .vjs-subs-caps-button .vjs-icon-placeholder:before,\n.video-js.video-js:lang(en-IE) .vjs-subs-caps-button .vjs-icon-placeholder:before,\n.video-js.video-js:lang(en-AU) .vjs-subs-caps-button .vjs-icon-placeholder:before,\n.video-js.video-js:lang(en-NZ) .vjs-subs-caps-button .vjs-icon-placeholder:before, .video-js .vjs-subtitles-button .vjs-icon-placeholder:before {\n  content: \"\\f10b\";\n}\n\n.vjs-icon-captions, .video-js:lang(en) .vjs-subs-caps-button .vjs-icon-placeholder,\n.video-js:lang(fr-CA) .vjs-subs-caps-button .vjs-icon-placeholder, .video-js .vjs-captions-button .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-captions:before, .video-js:lang(en) .vjs-subs-caps-button .vjs-icon-placeholder:before,\n.video-js:lang(fr-CA) .vjs-subs-caps-button .vjs-icon-placeholder:before, .video-js .vjs-captions-button .vjs-icon-placeholder:before {\n  content: \"\\f10c\";\n}\n\n.vjs-icon-hd {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-hd:before {\n  content: \"\\f10d\";\n}\n\n.vjs-icon-chapters, .video-js .vjs-chapters-button .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-chapters:before, .video-js .vjs-chapters-button .vjs-icon-placeholder:before {\n  content: \"\\f10e\";\n}\n\n.vjs-icon-downloading {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-downloading:before {\n  content: \"\\f10f\";\n}\n\n.vjs-icon-file-download {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-file-download:before {\n  content: \"\\f110\";\n}\n\n.vjs-icon-file-download-done {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-file-download-done:before {\n  content: \"\\f111\";\n}\n\n.vjs-icon-file-download-off {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-file-download-off:before {\n  content: \"\\f112\";\n}\n\n.vjs-icon-share {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-share:before {\n  content: \"\\f113\";\n}\n\n.vjs-icon-cog {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-cog:before {\n  content: \"\\f114\";\n}\n\n.vjs-icon-square {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-square:before {\n  content: \"\\f115\";\n}\n\n.vjs-icon-circle, .vjs-seek-to-live-control .vjs-icon-placeholder, .video-js .vjs-volume-level, .video-js .vjs-play-progress {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-circle:before, .vjs-seek-to-live-control .vjs-icon-placeholder:before, .video-js .vjs-volume-level:before, .video-js .vjs-play-progress:before {\n  content: \"\\f116\";\n}\n\n.vjs-icon-circle-outline {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-circle-outline:before {\n  content: \"\\f117\";\n}\n\n.vjs-icon-circle-inner-circle {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-circle-inner-circle:before {\n  content: \"\\f118\";\n}\n\n.vjs-icon-cancel, .video-js .vjs-control.vjs-close-button .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-cancel:before, .video-js .vjs-control.vjs-close-button .vjs-icon-placeholder:before {\n  content: \"\\f119\";\n}\n\n.vjs-icon-repeat {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-repeat:before {\n  content: \"\\f11a\";\n}\n\n.vjs-icon-replay, .video-js .vjs-play-control.vjs-ended .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-replay:before, .video-js .vjs-play-control.vjs-ended .vjs-icon-placeholder:before {\n  content: \"\\f11b\";\n}\n\n.vjs-icon-replay-5, .video-js .vjs-skip-backward-5 .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-replay-5:before, .video-js .vjs-skip-backward-5 .vjs-icon-placeholder:before {\n  content: \"\\f11c\";\n}\n\n.vjs-icon-replay-10, .video-js .vjs-skip-backward-10 .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-replay-10:before, .video-js .vjs-skip-backward-10 .vjs-icon-placeholder:before {\n  content: \"\\f11d\";\n}\n\n.vjs-icon-replay-30, .video-js .vjs-skip-backward-30 .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-replay-30:before, .video-js .vjs-skip-backward-30 .vjs-icon-placeholder:before {\n  content: \"\\f11e\";\n}\n\n.vjs-icon-forward-5, .video-js .vjs-skip-forward-5 .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-forward-5:before, .video-js .vjs-skip-forward-5 .vjs-icon-placeholder:before {\n  content: \"\\f11f\";\n}\n\n.vjs-icon-forward-10, .video-js .vjs-skip-forward-10 .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-forward-10:before, .video-js .vjs-skip-forward-10 .vjs-icon-placeholder:before {\n  content: \"\\f120\";\n}\n\n.vjs-icon-forward-30, .video-js .vjs-skip-forward-30 .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-forward-30:before, .video-js .vjs-skip-forward-30 .vjs-icon-placeholder:before {\n  content: \"\\f121\";\n}\n\n.vjs-icon-audio, .video-js .vjs-audio-button .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-audio:before, .video-js .vjs-audio-button .vjs-icon-placeholder:before {\n  content: \"\\f122\";\n}\n\n.vjs-icon-next-item {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-next-item:before {\n  content: \"\\f123\";\n}\n\n.vjs-icon-previous-item {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-previous-item:before {\n  content: \"\\f124\";\n}\n\n.vjs-icon-shuffle {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-shuffle:before {\n  content: \"\\f125\";\n}\n\n.vjs-icon-cast {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-cast:before {\n  content: \"\\f126\";\n}\n\n.vjs-icon-picture-in-picture-enter, .video-js .vjs-picture-in-picture-control .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-picture-in-picture-enter:before, .video-js .vjs-picture-in-picture-control .vjs-icon-placeholder:before {\n  content: \"\\f127\";\n}\n\n.vjs-icon-picture-in-picture-exit, .video-js.vjs-picture-in-picture .vjs-picture-in-picture-control .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-picture-in-picture-exit:before, .video-js.vjs-picture-in-picture .vjs-picture-in-picture-control .vjs-icon-placeholder:before {\n  content: \"\\f128\";\n}\n\n.vjs-icon-facebook {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-facebook:before {\n  content: \"\\f129\";\n}\n\n.vjs-icon-linkedin {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-linkedin:before {\n  content: \"\\f12a\";\n}\n\n.vjs-icon-twitter {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-twitter:before {\n  content: \"\\f12b\";\n}\n\n.vjs-icon-tumblr {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-tumblr:before {\n  content: \"\\f12c\";\n}\n\n.vjs-icon-pinterest {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-pinterest:before {\n  content: \"\\f12d\";\n}\n\n.vjs-icon-audio-description, .video-js .vjs-descriptions-button .vjs-icon-placeholder {\n  font-family: VideoJS;\n  font-weight: normal;\n  font-style: normal;\n}\n.vjs-icon-audio-description:before, .video-js .vjs-descriptions-button .vjs-icon-placeholder:before {\n  content: \"\\f12e\";\n}\n\n.video-js {\n  display: inline-block;\n  vertical-align: top;\n  box-sizing: border-box;\n  color: #fff;\n  background-color: #000;\n  position: relative;\n  padding: 0;\n  font-size: 10px;\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  font-family: Arial, Helvetica, sans-serif;\n  word-break: initial;\n}\n.video-js:-moz-full-screen {\n  position: absolute;\n}\n.video-js:-webkit-full-screen {\n  width: 100% !important;\n  height: 100% !important;\n}\n\n.video-js[tabindex=\"-1\"] {\n  outline: none;\n}\n\n.video-js *,\n.video-js *:before,\n.video-js *:after {\n  box-sizing: inherit;\n}\n\n.video-js ul {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n  list-style-position: outside;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.video-js.vjs-fluid,\n.video-js.vjs-16-9,\n.video-js.vjs-4-3,\n.video-js.vjs-9-16,\n.video-js.vjs-1-1 {\n  width: 100%;\n  max-width: 100%;\n}\n\n.video-js.vjs-fluid:not(.vjs-audio-only-mode),\n.video-js.vjs-16-9:not(.vjs-audio-only-mode),\n.video-js.vjs-4-3:not(.vjs-audio-only-mode),\n.video-js.vjs-9-16:not(.vjs-audio-only-mode),\n.video-js.vjs-1-1:not(.vjs-audio-only-mode) {\n  height: 0;\n}\n\n.video-js.vjs-16-9:not(.vjs-audio-only-mode) {\n  padding-top: 56.25%;\n}\n\n.video-js.vjs-4-3:not(.vjs-audio-only-mode) {\n  padding-top: 75%;\n}\n\n.video-js.vjs-9-16:not(.vjs-audio-only-mode) {\n  padding-top: 177.7777777778%;\n}\n\n.video-js.vjs-1-1:not(.vjs-audio-only-mode) {\n  padding-top: 100%;\n}\n\n.video-js.vjs-fill:not(.vjs-audio-only-mode) {\n  width: 100%;\n  height: 100%;\n}\n\n.video-js .vjs-tech {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.video-js.vjs-audio-only-mode .vjs-tech {\n  display: none;\n}\n\nbody.vjs-full-window,\nbody.vjs-pip-window {\n  padding: 0;\n  margin: 0;\n  height: 100%;\n}\n\n.vjs-full-window .video-js.vjs-fullscreen,\nbody.vjs-pip-window .video-js {\n  position: fixed;\n  overflow: hidden;\n  z-index: 1000;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n}\n\n.video-js.vjs-fullscreen:not(.vjs-ios-native-fs),\nbody.vjs-pip-window .video-js {\n  width: 100% !important;\n  height: 100% !important;\n  padding-top: 0 !important;\n  display: block;\n}\n\n.video-js.vjs-fullscreen.vjs-user-inactive {\n  cursor: none;\n}\n\n.vjs-pip-container .vjs-pip-text {\n  position: absolute;\n  bottom: 10%;\n  font-size: 2em;\n  background-color: rgba(0, 0, 0, 0.7);\n  padding: 0.5em;\n  text-align: center;\n  width: 100%;\n}\n\n.vjs-layout-tiny.vjs-pip-container .vjs-pip-text,\n.vjs-layout-x-small.vjs-pip-container .vjs-pip-text,\n.vjs-layout-small.vjs-pip-container .vjs-pip-text {\n  bottom: 0;\n  font-size: 1.4em;\n}\n\n.vjs-hidden {\n  display: none !important;\n}\n\n.vjs-disabled {\n  opacity: 0.5;\n  cursor: default;\n}\n\n.video-js .vjs-offscreen {\n  height: 1px;\n  left: -9999px;\n  position: absolute;\n  top: 0;\n  width: 1px;\n}\n\n.vjs-lock-showing {\n  display: block !important;\n  opacity: 1 !important;\n  visibility: visible !important;\n}\n\n.vjs-no-js {\n  padding: 20px;\n  color: #fff;\n  background-color: #000;\n  font-size: 18px;\n  font-family: Arial, Helvetica, sans-serif;\n  text-align: center;\n  width: 300px;\n  height: 150px;\n  margin: 0px auto;\n}\n\n.vjs-no-js a,\n.vjs-no-js a:visited {\n  color: #66A8CC;\n}\n\n.video-js .vjs-big-play-button {\n  font-size: 3em;\n  line-height: 1.5em;\n  height: 1.63332em;\n  width: 3em;\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  padding: 0;\n  margin-top: -0.81666em;\n  margin-left: -1.5em;\n  cursor: pointer;\n  opacity: 1;\n  border: 0.06666em solid #fff;\n  background-color: #2B333F;\n  background-color: rgba(43, 51, 63, 0.7);\n  border-radius: 0.3em;\n  transition: all 0.4s;\n}\n.vjs-big-play-button .vjs-svg-icon {\n  width: 1em;\n  height: 1em;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  line-height: 1;\n  transform: translate(-50%, -50%);\n}\n\n.video-js:hover .vjs-big-play-button,\n.video-js .vjs-big-play-button:focus {\n  border-color: #fff;\n  background-color: rgb(114.9141509434, 132.7028301887, 159.3858490566);\n  background-color: rgba(114.9141509434, 132.7028301887, 159.3858490566, 0.5);\n  transition: all 0s;\n}\n\n.vjs-controls-disabled .vjs-big-play-button,\n.vjs-has-started .vjs-big-play-button,\n.vjs-using-native-controls .vjs-big-play-button,\n.vjs-error .vjs-big-play-button {\n  display: none;\n}\n\n.vjs-has-started.vjs-paused.vjs-show-big-play-button-on-pause:not(.vjs-seeking, .vjs-scrubbing, .vjs-error) .vjs-big-play-button {\n  display: block;\n}\n\n.video-js button {\n  background: none;\n  border: none;\n  color: inherit;\n  display: inline-block;\n  font-size: inherit;\n  line-height: inherit;\n  text-transform: none;\n  text-decoration: none;\n  transition: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n       appearance: none;\n}\n\n.video-js.vjs-spatial-navigation-enabled .vjs-button:focus {\n  outline: 0.0625em solid white;\n  box-shadow: none;\n}\n\n.vjs-control .vjs-button {\n  width: 100%;\n  height: 100%;\n}\n\n.video-js .vjs-control.vjs-close-button {\n  cursor: pointer;\n  height: 3em;\n  position: absolute;\n  right: 0;\n  top: 0.5em;\n  z-index: 2;\n}\n.video-js .vjs-modal-dialog {\n  background: rgba(0, 0, 0, 0.8);\n  background: linear-gradient(180deg, rgba(0, 0, 0, 0.8), rgba(255, 255, 255, 0));\n  overflow: auto;\n}\n\n.video-js .vjs-modal-dialog > * {\n  box-sizing: border-box;\n}\n\n.vjs-modal-dialog .vjs-modal-dialog-content {\n  font-size: 1.2em;\n  line-height: 1.5;\n  padding: 20px 24px;\n  z-index: 1;\n}\n\n.vjs-menu-button {\n  cursor: pointer;\n}\n\n.vjs-menu-button.vjs-disabled {\n  cursor: default;\n}\n\n.vjs-workinghover .vjs-menu-button.vjs-disabled:hover .vjs-menu {\n  display: none;\n}\n\n.vjs-menu .vjs-menu-content {\n  display: block;\n  padding: 0;\n  margin: 0;\n  font-family: Arial, Helvetica, sans-serif;\n  overflow: auto;\n}\n\n.vjs-menu .vjs-menu-content > * {\n  box-sizing: border-box;\n}\n\n.vjs-scrubbing .vjs-control.vjs-menu-button:hover .vjs-menu {\n  display: none;\n}\n\n.vjs-menu li {\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  margin: 0;\n  padding: 0.2em 0;\n  line-height: 1.4em;\n  font-size: 1.2em;\n  text-align: center;\n  text-transform: lowercase;\n}\n\n.vjs-menu li.vjs-menu-item:focus,\n.vjs-menu li.vjs-menu-item:hover,\n.js-focus-visible .vjs-menu li.vjs-menu-item:hover {\n  background-color: rgb(114.9141509434, 132.7028301887, 159.3858490566);\n  background-color: rgba(114.9141509434, 132.7028301887, 159.3858490566, 0.5);\n}\n\n.vjs-menu li.vjs-selected,\n.vjs-menu li.vjs-selected:focus,\n.vjs-menu li.vjs-selected:hover,\n.js-focus-visible .vjs-menu li.vjs-selected:hover {\n  background-color: #fff;\n  color: #2B333F;\n}\n.vjs-menu li.vjs-selected .vjs-svg-icon,\n.vjs-menu li.vjs-selected:focus .vjs-svg-icon,\n.vjs-menu li.vjs-selected:hover .vjs-svg-icon,\n.js-focus-visible .vjs-menu li.vjs-selected:hover .vjs-svg-icon {\n  fill: #000000;\n}\n\n.video-js .vjs-menu *:not(.vjs-selected):focus:not(:focus-visible),\n.js-focus-visible .vjs-menu *:not(.vjs-selected):focus:not(.focus-visible) {\n  background: none;\n}\n\n.vjs-menu li.vjs-menu-title {\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 1em;\n  line-height: 2em;\n  padding: 0;\n  margin: 0 0 0.3em 0;\n  font-weight: bold;\n  cursor: default;\n}\n\n.vjs-menu-button-popup .vjs-menu {\n  display: none;\n  position: absolute;\n  bottom: 0;\n  width: 10em;\n  left: -3em;\n  height: 0em;\n  margin-bottom: 1.5em;\n  border-top-color: rgba(43, 51, 63, 0.7);\n}\n\n.vjs-pip-window .vjs-menu-button-popup .vjs-menu {\n  left: unset;\n  right: 1em;\n}\n\n.vjs-menu-button-popup .vjs-menu .vjs-menu-content {\n  background-color: #2B333F;\n  background-color: rgba(43, 51, 63, 0.7);\n  position: absolute;\n  width: 100%;\n  bottom: 1.5em;\n  max-height: 15em;\n}\n\n.vjs-layout-tiny .vjs-menu-button-popup .vjs-menu .vjs-menu-content,\n.vjs-layout-x-small .vjs-menu-button-popup .vjs-menu .vjs-menu-content {\n  max-height: 5em;\n}\n\n.vjs-layout-small .vjs-menu-button-popup .vjs-menu .vjs-menu-content {\n  max-height: 10em;\n}\n\n.vjs-layout-medium .vjs-menu-button-popup .vjs-menu .vjs-menu-content {\n  max-height: 14em;\n}\n\n.vjs-layout-large .vjs-menu-button-popup .vjs-menu .vjs-menu-content,\n.vjs-layout-x-large .vjs-menu-button-popup .vjs-menu .vjs-menu-content,\n.vjs-layout-huge .vjs-menu-button-popup .vjs-menu .vjs-menu-content {\n  max-height: 25em;\n}\n\n.vjs-workinghover .vjs-menu-button-popup.vjs-hover .vjs-menu,\n.vjs-menu-button-popup .vjs-menu.vjs-lock-showing {\n  display: block;\n}\n\n.video-js .vjs-menu-button-inline {\n  transition: all 0.4s;\n  overflow: hidden;\n}\n\n.video-js .vjs-menu-button-inline:before {\n  width: 2.222222222em;\n}\n\n.video-js .vjs-menu-button-inline:hover,\n.video-js .vjs-menu-button-inline:focus,\n.video-js .vjs-menu-button-inline.vjs-slider-active {\n  width: 12em;\n}\n\n.vjs-menu-button-inline .vjs-menu {\n  opacity: 0;\n  height: 100%;\n  width: auto;\n  position: absolute;\n  left: 4em;\n  top: 0;\n  padding: 0;\n  margin: 0;\n  transition: all 0.4s;\n}\n\n.vjs-menu-button-inline:hover .vjs-menu,\n.vjs-menu-button-inline:focus .vjs-menu,\n.vjs-menu-button-inline.vjs-slider-active .vjs-menu {\n  display: block;\n  opacity: 1;\n}\n\n.vjs-menu-button-inline .vjs-menu-content {\n  width: auto;\n  height: 100%;\n  margin: 0;\n  overflow: hidden;\n}\n\n.video-js .vjs-control-bar {\n  display: none;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 3em;\n  background-color: #2B333F;\n  background-color: rgba(43, 51, 63, 0.7);\n}\n\n.video-js.vjs-spatial-navigation-enabled .vjs-control-bar {\n  gap: 1px;\n}\n\n.video-js:not(.vjs-controls-disabled, .vjs-using-native-controls, .vjs-error) .vjs-control-bar.vjs-lock-showing {\n  display: flex !important;\n}\n\n.vjs-has-started .vjs-control-bar,\n.vjs-audio-only-mode .vjs-control-bar {\n  display: flex;\n  visibility: visible;\n  opacity: 1;\n  transition: visibility 0.1s, opacity 0.1s;\n}\n\n.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar {\n  visibility: visible;\n  opacity: 0;\n  pointer-events: none;\n  transition: visibility 1s, opacity 1s;\n}\n\n.vjs-controls-disabled .vjs-control-bar,\n.vjs-using-native-controls .vjs-control-bar,\n.vjs-error .vjs-control-bar {\n  display: none !important;\n}\n\n.vjs-audio.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar,\n.vjs-audio-only-mode.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar {\n  opacity: 1;\n  visibility: visible;\n  pointer-events: auto;\n}\n\n.video-js .vjs-control {\n  position: relative;\n  text-align: center;\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  width: 4em;\n  flex: none;\n}\n\n.video-js .vjs-control.vjs-visible-text {\n  width: auto;\n  padding-left: 1em;\n  padding-right: 1em;\n}\n\n.vjs-button > .vjs-icon-placeholder:before {\n  font-size: 1.8em;\n  line-height: 1.67;\n}\n\n.vjs-button > .vjs-icon-placeholder {\n  display: block;\n}\n\n.vjs-button > .vjs-svg-icon {\n  display: inline-block;\n}\n\n.video-js .vjs-control:focus:before,\n.video-js .vjs-control:hover:before,\n.video-js .vjs-control:focus {\n  text-shadow: 0em 0em 1em white;\n}\n\n.video-js *:not(.vjs-visible-text) > .vjs-control-text {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.video-js .vjs-custom-control-spacer {\n  display: none;\n}\n\n.video-js .vjs-progress-control {\n  cursor: pointer;\n  flex: auto;\n  display: flex;\n  align-items: center;\n  min-width: 4em;\n  touch-action: none;\n}\n\n.video-js .vjs-progress-control.disabled {\n  cursor: default;\n}\n\n.vjs-live .vjs-progress-control {\n  display: none;\n}\n\n.vjs-liveui .vjs-progress-control {\n  display: flex;\n  align-items: center;\n}\n\n.video-js .vjs-progress-holder {\n  flex: auto;\n  transition: all 0.2s;\n  height: 0.3em;\n}\n\n.video-js .vjs-progress-control .vjs-progress-holder {\n  margin: 0 10px;\n}\n\n.video-js .vjs-progress-control:hover .vjs-progress-holder,\n.video-js.vjs-scrubbing.vjs-touch-enabled .vjs-progress-control .vjs-progress-holder {\n  font-size: 1.6666666667em;\n}\n\n.video-js .vjs-progress-control:hover .vjs-progress-holder.disabled {\n  font-size: 1em;\n}\n\n.video-js .vjs-progress-holder .vjs-play-progress,\n.video-js .vjs-progress-holder .vjs-load-progress,\n.video-js .vjs-progress-holder .vjs-load-progress div {\n  position: absolute;\n  display: block;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  width: 0;\n}\n\n.video-js .vjs-play-progress {\n  background-color: #fff;\n}\n.video-js .vjs-play-progress:before {\n  font-size: 0.9em;\n  position: absolute;\n  right: -0.5em;\n  line-height: 0.35em;\n  z-index: 1;\n}\n\n.vjs-svg-icons-enabled .vjs-play-progress:before {\n  content: none !important;\n}\n\n.vjs-play-progress .vjs-svg-icon {\n  position: absolute;\n  top: -0.35em;\n  right: -0.4em;\n  width: 0.9em;\n  height: 0.9em;\n  pointer-events: none;\n  line-height: 0.15em;\n  z-index: 1;\n}\n\n.video-js .vjs-load-progress {\n  background: rgba(114.9141509434, 132.7028301887, 159.3858490566, 0.5);\n}\n\n.video-js .vjs-load-progress div {\n  background: rgba(114.9141509434, 132.7028301887, 159.3858490566, 0.75);\n}\n\n.video-js .vjs-time-tooltip {\n  background-color: #fff;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 0.3em;\n  color: #000;\n  float: right;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1em;\n  padding: 6px 8px 8px 8px;\n  pointer-events: none;\n  position: absolute;\n  top: -3.4em;\n  visibility: hidden;\n  z-index: 1;\n}\n\n.video-js .vjs-progress-holder:focus .vjs-time-tooltip {\n  display: none;\n}\n\n.video-js .vjs-progress-control:hover .vjs-time-tooltip,\n.video-js .vjs-progress-control:hover .vjs-progress-holder:focus .vjs-time-tooltip,\n.video-js.vjs-scrubbing.vjs-touch-enabled .vjs-progress-control .vjs-time-tooltip {\n  display: block;\n  font-size: 0.6em;\n  visibility: visible;\n}\n\n.video-js .vjs-progress-control.disabled:hover .vjs-time-tooltip {\n  font-size: 1em;\n}\n\n.video-js .vjs-progress-control .vjs-mouse-display {\n  display: none;\n  position: absolute;\n  width: 1px;\n  height: 100%;\n  background-color: #000;\n  z-index: 1;\n}\n\n.video-js .vjs-progress-control:hover .vjs-mouse-display {\n  display: block;\n}\n\n.video-js.vjs-scrubbing.vjs-touch-enabled .vjs-progress-control .vjs-mouse-display {\n  display: block;\n}\n\n.video-js.vjs-user-inactive .vjs-progress-control .vjs-mouse-display,\n.video-js.vjs-touch-enabled:not(.vjs-scrubbing) .vjs-progress-control .vjs-mouse-display {\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 1s, opacity 1s;\n}\n\n.vjs-mouse-display .vjs-time-tooltip {\n  color: #fff;\n  background-color: #000;\n  background-color: rgba(0, 0, 0, 0.8);\n}\n\n.video-js .vjs-slider {\n  position: relative;\n  cursor: pointer;\n  padding: 0;\n  margin: 0 0.45em 0 0.45em;\n  /* iOS Safari */\n  -webkit-touch-callout: none;\n  /* Safari, and Chrome 53 */\n  -webkit-user-select: none;\n  /* Non-prefixed version, currently supported by Chrome and Opera */\n  -moz-user-select: none;\n       user-select: none;\n  background-color: rgb(114.9141509434, 132.7028301887, 159.3858490566);\n  background-color: rgba(114.9141509434, 132.7028301887, 159.3858490566, 0.5);\n}\n\n.video-js .vjs-slider.disabled {\n  cursor: default;\n}\n\n.video-js .vjs-slider:focus {\n  text-shadow: 0em 0em 1em white;\n  box-shadow: 0 0 1em #fff;\n}\n\n.video-js.vjs-spatial-navigation-enabled .vjs-slider:focus {\n  outline: 0.0625em solid white;\n}\n\n.video-js .vjs-mute-control {\n  cursor: pointer;\n  flex: none;\n}\n.video-js .vjs-volume-control {\n  cursor: pointer;\n  margin-right: 1em;\n  display: flex;\n}\n\n.video-js .vjs-volume-control.vjs-volume-horizontal {\n  width: 5em;\n}\n\n.video-js .vjs-volume-panel .vjs-volume-control {\n  visibility: visible;\n  opacity: 0;\n  width: 1px;\n  height: 1px;\n  margin-left: -1px;\n}\n\n.video-js .vjs-volume-panel {\n  transition: width 1s;\n}\n.video-js .vjs-volume-panel.vjs-hover .vjs-volume-control, .video-js .vjs-volume-panel:active .vjs-volume-control, .video-js .vjs-volume-panel:focus .vjs-volume-control, .video-js .vjs-volume-panel .vjs-volume-control:active, .video-js .vjs-volume-panel.vjs-hover .vjs-mute-control ~ .vjs-volume-control, .video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active {\n  visibility: visible;\n  opacity: 1;\n  position: relative;\n  transition: visibility 0.1s, opacity 0.1s, height 0.1s, width 0.1s, left 0s, top 0s;\n}\n.video-js .vjs-volume-panel.vjs-hover .vjs-volume-control.vjs-volume-horizontal, .video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-horizontal, .video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-horizontal, .video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-horizontal, .video-js .vjs-volume-panel.vjs-hover .vjs-mute-control ~ .vjs-volume-control.vjs-volume-horizontal, .video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-horizontal {\n  width: 5em;\n  height: 3em;\n  margin-right: 0;\n}\n.video-js .vjs-volume-panel.vjs-hover .vjs-volume-control.vjs-volume-vertical, .video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-vertical, .video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-vertical, .video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-vertical, .video-js .vjs-volume-panel.vjs-hover .vjs-mute-control ~ .vjs-volume-control.vjs-volume-vertical, .video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-vertical {\n  left: -3.5em;\n  transition: left 0s;\n}\n.video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-hover, .video-js .vjs-volume-panel.vjs-volume-panel-horizontal:active, .video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active {\n  width: 10em;\n  transition: width 0.1s;\n}\n.video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-mute-toggle-only {\n  width: 4em;\n}\n\n.video-js .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical {\n  height: 8em;\n  width: 3em;\n  left: -3000em;\n  transition: visibility 1s, opacity 1s, height 1s 1s, width 1s 1s, left 1s 1s, top 1s 1s;\n}\n\n.video-js .vjs-volume-panel .vjs-volume-control.vjs-volume-horizontal {\n  transition: visibility 1s, opacity 1s, height 1s 1s, width 1s, left 1s 1s, top 1s 1s;\n}\n\n.video-js .vjs-volume-panel {\n  display: flex;\n}\n\n.video-js .vjs-volume-bar {\n  margin: 1.35em 0.45em;\n}\n\n.vjs-volume-bar.vjs-slider-horizontal {\n  width: 5em;\n  height: 0.3em;\n}\n\n.vjs-volume-bar.vjs-slider-vertical {\n  width: 0.3em;\n  height: 5em;\n  margin: 1.35em auto;\n}\n\n.video-js .vjs-volume-level {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: #fff;\n}\n.video-js .vjs-volume-level:before {\n  position: absolute;\n  font-size: 0.9em;\n  z-index: 1;\n}\n\n.vjs-slider-vertical .vjs-volume-level {\n  width: 0.3em;\n}\n.vjs-slider-vertical .vjs-volume-level:before {\n  top: -0.5em;\n  left: -0.3em;\n  z-index: 1;\n}\n\n.vjs-svg-icons-enabled .vjs-volume-level:before {\n  content: none;\n}\n\n.vjs-volume-level .vjs-svg-icon {\n  position: absolute;\n  width: 0.9em;\n  height: 0.9em;\n  pointer-events: none;\n  z-index: 1;\n}\n\n.vjs-slider-horizontal .vjs-volume-level {\n  height: 0.3em;\n}\n.vjs-slider-horizontal .vjs-volume-level:before {\n  line-height: 0.35em;\n  right: -0.5em;\n}\n\n.vjs-slider-horizontal .vjs-volume-level .vjs-svg-icon {\n  right: -0.3em;\n  transform: translateY(-50%);\n}\n\n.vjs-slider-vertical .vjs-volume-level .vjs-svg-icon {\n  top: -0.55em;\n  transform: translateX(-50%);\n}\n\n.video-js .vjs-volume-panel.vjs-volume-panel-vertical {\n  width: 4em;\n}\n\n.vjs-volume-bar.vjs-slider-vertical .vjs-volume-level {\n  height: 100%;\n}\n\n.vjs-volume-bar.vjs-slider-horizontal .vjs-volume-level {\n  width: 100%;\n}\n\n.video-js .vjs-volume-vertical {\n  width: 3em;\n  height: 8em;\n  bottom: 8em;\n  background-color: #2B333F;\n  background-color: rgba(43, 51, 63, 0.7);\n}\n\n.video-js .vjs-volume-horizontal .vjs-menu {\n  left: -2em;\n}\n\n.video-js .vjs-volume-tooltip {\n  background-color: #fff;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 0.3em;\n  color: #000;\n  float: right;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1em;\n  padding: 6px 8px 8px 8px;\n  pointer-events: none;\n  position: absolute;\n  top: -3.4em;\n  visibility: hidden;\n  z-index: 1;\n}\n\n.video-js .vjs-volume-control:hover .vjs-volume-tooltip,\n.video-js .vjs-volume-control:hover .vjs-progress-holder:focus .vjs-volume-tooltip {\n  display: block;\n  font-size: 1em;\n  visibility: visible;\n}\n\n.video-js .vjs-volume-vertical:hover .vjs-volume-tooltip,\n.video-js .vjs-volume-vertical:hover .vjs-progress-holder:focus .vjs-volume-tooltip {\n  left: 1em;\n  top: -12px;\n}\n\n.video-js .vjs-volume-control.disabled:hover .vjs-volume-tooltip {\n  font-size: 1em;\n}\n\n.video-js .vjs-volume-control .vjs-mouse-display {\n  display: none;\n  position: absolute;\n  width: 100%;\n  height: 1px;\n  background-color: #000;\n  z-index: 1;\n}\n\n.video-js .vjs-volume-horizontal .vjs-mouse-display {\n  width: 1px;\n  height: 100%;\n}\n\n.video-js .vjs-volume-control:hover .vjs-mouse-display {\n  display: block;\n}\n\n.video-js.vjs-user-inactive .vjs-volume-control .vjs-mouse-display {\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 1s, opacity 1s;\n}\n\n.vjs-mouse-display .vjs-volume-tooltip {\n  color: #fff;\n  background-color: #000;\n  background-color: rgba(0, 0, 0, 0.8);\n}\n\n.vjs-poster {\n  display: inline-block;\n  vertical-align: middle;\n  cursor: pointer;\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n}\n\n.vjs-has-started .vjs-poster,\n.vjs-using-native-controls .vjs-poster {\n  display: none;\n}\n\n.vjs-audio.vjs-has-started .vjs-poster,\n.vjs-has-started.vjs-audio-poster-mode .vjs-poster,\n.vjs-pip-container.vjs-has-started .vjs-poster {\n  display: block;\n}\n\n.vjs-poster img {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n}\n\n.video-js .vjs-live-control {\n  display: flex;\n  align-items: flex-start;\n  flex: auto;\n  font-size: 1em;\n  line-height: 3em;\n}\n\n.video-js:not(.vjs-live) .vjs-live-control,\n.video-js.vjs-liveui .vjs-live-control {\n  display: none;\n}\n\n.video-js .vjs-seek-to-live-control {\n  align-items: center;\n  cursor: pointer;\n  flex: none;\n  display: inline-flex;\n  height: 100%;\n  padding-left: 0.5em;\n  padding-right: 0.5em;\n  font-size: 1em;\n  line-height: 3em;\n  width: auto;\n  min-width: 4em;\n}\n\n.video-js.vjs-live:not(.vjs-liveui) .vjs-seek-to-live-control,\n.video-js:not(.vjs-live) .vjs-seek-to-live-control {\n  display: none;\n}\n\n.vjs-seek-to-live-control.vjs-control.vjs-at-live-edge {\n  cursor: auto;\n}\n\n.vjs-seek-to-live-control .vjs-icon-placeholder {\n  margin-right: 0.5em;\n  color: #888;\n}\n\n.vjs-svg-icons-enabled .vjs-seek-to-live-control {\n  line-height: 0;\n}\n\n.vjs-seek-to-live-control .vjs-svg-icon {\n  width: 1em;\n  height: 1em;\n  pointer-events: none;\n  fill: #888888;\n}\n\n.vjs-seek-to-live-control.vjs-control.vjs-at-live-edge .vjs-icon-placeholder {\n  color: red;\n}\n\n.vjs-seek-to-live-control.vjs-control.vjs-at-live-edge .vjs-svg-icon {\n  fill: red;\n}\n\n.video-js .vjs-time-control {\n  flex: none;\n  font-size: 1em;\n  line-height: 3em;\n  min-width: 2em;\n  width: auto;\n  padding-left: 1em;\n  padding-right: 1em;\n}\n\n.vjs-live .vjs-time-control,\n.vjs-live .vjs-time-divider,\n.video-js .vjs-current-time,\n.video-js .vjs-duration {\n  display: none;\n}\n\n.vjs-time-divider {\n  display: none;\n  line-height: 3em;\n}\n\n.vjs-normalise-time-controls:not(.vjs-live) .vjs-time-control {\n  display: flex;\n}\n\n.video-js .vjs-play-control {\n  cursor: pointer;\n}\n\n.video-js .vjs-play-control .vjs-icon-placeholder {\n  flex: none;\n}\n\n.vjs-text-track-display {\n  position: absolute;\n  bottom: 3em;\n  left: 0;\n  right: 0;\n  top: 0;\n  pointer-events: none;\n}\n\n.vjs-error .vjs-text-track-display {\n  display: none;\n}\n\n.video-js.vjs-controls-disabled .vjs-text-track-display,\n.video-js.vjs-user-inactive.vjs-playing .vjs-text-track-display {\n  bottom: 1em;\n}\n\n.video-js .vjs-text-track {\n  font-size: 1.4em;\n  text-align: center;\n  margin-bottom: 0.1em;\n}\n\n.vjs-subtitles {\n  color: #fff;\n}\n\n.vjs-captions {\n  color: #fc6;\n}\n\n.vjs-tt-cue {\n  display: block;\n}\n\nvideo::-webkit-media-text-track-display {\n  transform: translateY(-3em);\n}\n\n.video-js.vjs-controls-disabled video::-webkit-media-text-track-display,\n.video-js.vjs-user-inactive.vjs-playing video::-webkit-media-text-track-display {\n  transform: translateY(-1.5em);\n}\n\n.video-js.vjs-force-center-align-cues .vjs-text-track-cue {\n  text-align: center !important;\n  width: 80% !important;\n}\n\n@supports not (inset: 10px) {\n  .video-js .vjs-text-track-display > div {\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.video-js .vjs-picture-in-picture-control {\n  cursor: pointer;\n  flex: none;\n}\n.video-js.vjs-audio-only-mode .vjs-picture-in-picture-control,\n.vjs-pip-window .vjs-picture-in-picture-control {\n  display: none;\n}\n\n.video-js .vjs-fullscreen-control {\n  cursor: pointer;\n  flex: none;\n}\n.video-js.vjs-audio-only-mode .vjs-fullscreen-control,\n.vjs-pip-window .vjs-fullscreen-control {\n  display: none;\n}\n\n.vjs-playback-rate > .vjs-menu-button,\n.vjs-playback-rate .vjs-playback-rate-value {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.vjs-playback-rate .vjs-playback-rate-value {\n  pointer-events: none;\n  font-size: 1.5em;\n  line-height: 2;\n  text-align: center;\n}\n\n.vjs-playback-rate .vjs-menu {\n  width: 4em;\n  left: 0em;\n}\n\n.vjs-error .vjs-error-display .vjs-modal-dialog-content {\n  font-size: 1.4em;\n  text-align: center;\n}\n\n.vjs-loading-spinner {\n  display: none;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  opacity: 0.85;\n  text-align: left;\n  border: 0.6em solid rgba(43, 51, 63, 0.7);\n  box-sizing: border-box;\n  background-clip: padding-box;\n  width: 5em;\n  height: 5em;\n  border-radius: 50%;\n  visibility: hidden;\n}\n\n.vjs-seeking .vjs-loading-spinner,\n.vjs-waiting .vjs-loading-spinner {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  animation: vjs-spinner-show 0s linear 0.3s forwards;\n}\n\n.vjs-error .vjs-loading-spinner {\n  display: none;\n}\n\n.vjs-loading-spinner:before,\n.vjs-loading-spinner:after {\n  content: \"\";\n  position: absolute;\n  box-sizing: inherit;\n  width: inherit;\n  height: inherit;\n  border-radius: inherit;\n  opacity: 1;\n  border: inherit;\n  border-color: transparent;\n  border-top-color: white;\n}\n\n.vjs-seeking .vjs-loading-spinner:before,\n.vjs-seeking .vjs-loading-spinner:after,\n.vjs-waiting .vjs-loading-spinner:before,\n.vjs-waiting .vjs-loading-spinner:after {\n  animation: vjs-spinner-spin 1.1s cubic-bezier(0.6, 0.2, 0, 0.8) infinite, vjs-spinner-fade 1.1s linear infinite;\n}\n\n.vjs-seeking .vjs-loading-spinner:before,\n.vjs-waiting .vjs-loading-spinner:before {\n  border-top-color: rgb(255, 255, 255);\n}\n\n.vjs-seeking .vjs-loading-spinner:after,\n.vjs-waiting .vjs-loading-spinner:after {\n  border-top-color: rgb(255, 255, 255);\n  animation-delay: 0.44s;\n}\n\n@keyframes vjs-spinner-show {\n  to {\n    visibility: visible;\n  }\n}\n@keyframes vjs-spinner-spin {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes vjs-spinner-fade {\n  0% {\n    border-top-color: rgb(114.9141509434, 132.7028301887, 159.3858490566);\n  }\n  20% {\n    border-top-color: rgb(114.9141509434, 132.7028301887, 159.3858490566);\n  }\n  35% {\n    border-top-color: white;\n  }\n  60% {\n    border-top-color: rgb(114.9141509434, 132.7028301887, 159.3858490566);\n  }\n  100% {\n    border-top-color: rgb(114.9141509434, 132.7028301887, 159.3858490566);\n  }\n}\n.video-js.vjs-audio-only-mode .vjs-captions-button {\n  display: none;\n}\n\n.vjs-chapters-button .vjs-menu ul {\n  width: 24em;\n}\n\n.video-js.vjs-audio-only-mode .vjs-descriptions-button {\n  display: none;\n}\n\n.vjs-subs-caps-button + .vjs-menu .vjs-captions-menu-item .vjs-svg-icon {\n  width: 1.5em;\n  height: 1.5em;\n}\n\n.video-js .vjs-subs-caps-button + .vjs-menu .vjs-captions-menu-item .vjs-menu-item-text .vjs-icon-placeholder {\n  vertical-align: middle;\n  display: inline-block;\n  margin-bottom: -0.1em;\n}\n\n.video-js .vjs-subs-caps-button + .vjs-menu .vjs-captions-menu-item .vjs-menu-item-text .vjs-icon-placeholder:before {\n  font-family: VideoJS;\n  content: \"\\f10c\";\n  font-size: 1.5em;\n  line-height: inherit;\n}\n\n.video-js.vjs-audio-only-mode .vjs-subs-caps-button {\n  display: none;\n}\n\n.video-js .vjs-audio-button + .vjs-menu .vjs-descriptions-menu-item .vjs-menu-item-text .vjs-icon-placeholder,\n.video-js .vjs-audio-button + .vjs-menu .vjs-main-desc-menu-item .vjs-menu-item-text .vjs-icon-placeholder {\n  vertical-align: middle;\n  display: inline-block;\n  margin-bottom: -0.1em;\n}\n\n.video-js .vjs-audio-button + .vjs-menu .vjs-descriptions-menu-item .vjs-menu-item-text .vjs-icon-placeholder:before,\n.video-js .vjs-audio-button + .vjs-menu .vjs-main-desc-menu-item .vjs-menu-item-text .vjs-icon-placeholder:before {\n  font-family: VideoJS;\n  content: \" \\f12e\";\n  font-size: 1.5em;\n  line-height: inherit;\n}\n\n.video-js.vjs-layout-small .vjs-current-time,\n.video-js.vjs-layout-small .vjs-time-divider,\n.video-js.vjs-layout-small .vjs-duration,\n.video-js.vjs-layout-small .vjs-remaining-time,\n.video-js.vjs-layout-small .vjs-playback-rate,\n.video-js.vjs-layout-small .vjs-volume-control, .video-js.vjs-layout-x-small .vjs-current-time,\n.video-js.vjs-layout-x-small .vjs-time-divider,\n.video-js.vjs-layout-x-small .vjs-duration,\n.video-js.vjs-layout-x-small .vjs-remaining-time,\n.video-js.vjs-layout-x-small .vjs-playback-rate,\n.video-js.vjs-layout-x-small .vjs-volume-control, .video-js.vjs-layout-tiny .vjs-current-time,\n.video-js.vjs-layout-tiny .vjs-time-divider,\n.video-js.vjs-layout-tiny .vjs-duration,\n.video-js.vjs-layout-tiny .vjs-remaining-time,\n.video-js.vjs-layout-tiny .vjs-playback-rate,\n.video-js.vjs-layout-tiny .vjs-volume-control {\n  display: none;\n}\n.video-js.vjs-layout-small .vjs-volume-panel.vjs-volume-panel-horizontal:hover, .video-js.vjs-layout-small .vjs-volume-panel.vjs-volume-panel-horizontal:active, .video-js.vjs-layout-small .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active, .video-js.vjs-layout-small .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-hover, .video-js.vjs-layout-x-small .vjs-volume-panel.vjs-volume-panel-horizontal:hover, .video-js.vjs-layout-x-small .vjs-volume-panel.vjs-volume-panel-horizontal:active, .video-js.vjs-layout-x-small .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active, .video-js.vjs-layout-x-small .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-hover, .video-js.vjs-layout-tiny .vjs-volume-panel.vjs-volume-panel-horizontal:hover, .video-js.vjs-layout-tiny .vjs-volume-panel.vjs-volume-panel-horizontal:active, .video-js.vjs-layout-tiny .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active, .video-js.vjs-layout-tiny .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-hover {\n  width: auto;\n  width: initial;\n}\n.video-js.vjs-layout-x-small .vjs-progress-control, .video-js.vjs-layout-tiny .vjs-progress-control {\n  display: none;\n}\n.video-js.vjs-layout-x-small .vjs-custom-control-spacer {\n  flex: auto;\n  display: block;\n}\n\n.vjs-modal-dialog.vjs-text-track-settings {\n  background-color: #2B333F;\n  background-color: rgba(43, 51, 63, 0.75);\n  color: #fff;\n  height: 70%;\n}\n.vjs-spatial-navigation-enabled .vjs-modal-dialog.vjs-text-track-settings {\n  height: 80%;\n}\n\n.vjs-error .vjs-text-track-settings {\n  display: none;\n}\n\n.vjs-text-track-settings .vjs-modal-dialog-content {\n  display: table;\n}\n\n.vjs-text-track-settings .vjs-track-settings-colors,\n.vjs-text-track-settings .vjs-track-settings-font,\n.vjs-text-track-settings .vjs-track-settings-controls {\n  display: table-cell;\n}\n\n.vjs-text-track-settings .vjs-track-settings-controls {\n  text-align: right;\n  vertical-align: bottom;\n}\n\n@supports (display: grid) {\n  .vjs-text-track-settings .vjs-modal-dialog-content {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr;\n    padding: 20px 24px 0px 24px;\n  }\n  .vjs-track-settings-controls .vjs-default-button {\n    margin-bottom: 20px;\n  }\n  .vjs-text-track-settings .vjs-track-settings-controls {\n    grid-column: 1/-1;\n  }\n  .vjs-layout-small .vjs-text-track-settings .vjs-modal-dialog-content,\n  .vjs-layout-x-small .vjs-text-track-settings .vjs-modal-dialog-content,\n  .vjs-layout-tiny .vjs-text-track-settings .vjs-modal-dialog-content {\n    grid-template-columns: 1fr;\n  }\n}\n.vjs-text-track-settings select {\n  font-size: inherit;\n}\n\n.vjs-track-setting > select {\n  margin-right: 1em;\n  margin-bottom: 0.5em;\n}\n\n.vjs-text-track-settings fieldset {\n  margin: 10px;\n  border: none;\n}\n\n.vjs-text-track-settings fieldset span {\n  display: inline-block;\n  padding: 0 0.6em 0.8em;\n}\n\n.vjs-text-track-settings fieldset span > select {\n  max-width: 7.3em;\n}\n\n.vjs-text-track-settings legend {\n  color: #fff;\n  font-weight: bold;\n  font-size: 1.2em;\n}\n\n.vjs-text-track-settings .vjs-label {\n  margin: 0 0.5em 0.5em 0;\n}\n\n.vjs-track-settings-controls button:focus,\n.vjs-track-settings-controls button:active {\n  outline-style: solid;\n  outline-width: medium;\n  background-image: linear-gradient(0deg, #fff 88%, rgb(114.9141509434, 132.7028301887, 159.3858490566) 100%);\n}\n\n.vjs-track-settings-controls button:hover {\n  color: rgba(43, 51, 63, 0.75);\n}\n\n.vjs-track-settings-controls button {\n  background-color: #fff;\n  background-image: linear-gradient(-180deg, #fff 88%, rgb(114.9141509434, 132.7028301887, 159.3858490566) 100%);\n  color: #2B333F;\n  cursor: pointer;\n  border-radius: 2px;\n}\n\n.vjs-track-settings-controls .vjs-default-button {\n  margin-right: 1em;\n}\n\n.vjs-title-bar {\n  background: rgba(0, 0, 0, 0.9);\n  background: linear-gradient(180deg, rgba(0, 0, 0, 0.9) 0%, rgba(0, 0, 0, 0.7) 60%, rgba(0, 0, 0, 0) 100%);\n  font-size: 1.2em;\n  line-height: 1.5;\n  transition: opacity 0.1s;\n  padding: 0.666em 1.333em 4em;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n\n.vjs-error .vjs-title-bar {\n  display: none;\n}\n\n.vjs-title-bar-title,\n.vjs-title-bar-description {\n  margin: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.vjs-title-bar-title {\n  font-weight: bold;\n  margin-bottom: 0.333em;\n}\n\n.vjs-playing.vjs-user-inactive .vjs-title-bar {\n  opacity: 0;\n  transition: opacity 1s;\n}\n\n.video-js .vjs-skip-forward-5 {\n  cursor: pointer;\n}\n.video-js .vjs-skip-forward-10 {\n  cursor: pointer;\n}\n.video-js .vjs-skip-forward-30 {\n  cursor: pointer;\n}\n.video-js .vjs-skip-backward-5 {\n  cursor: pointer;\n}\n.video-js .vjs-skip-backward-10 {\n  cursor: pointer;\n}\n.video-js .vjs-skip-backward-30 {\n  cursor: pointer;\n}\n.video-js .vjs-transient-button {\n  position: absolute;\n  height: 3em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(50, 50, 50, 0.5);\n  cursor: pointer;\n  opacity: 1;\n  transition: opacity 1s;\n}\n\n.video-js:not(.vjs-has-started) .vjs-transient-button {\n  display: none;\n}\n\n.video-js.not-hover .vjs-transient-button:not(.force-display),\n.video-js.vjs-user-inactive .vjs-transient-button:not(.force-display) {\n  opacity: 0;\n}\n\n.video-js .vjs-transient-button span {\n  padding: 0 0.5em;\n}\n\n.video-js .vjs-transient-button.vjs-left {\n  left: 1em;\n}\n\n.video-js .vjs-transient-button.vjs-right {\n  right: 1em;\n}\n\n.video-js .vjs-transient-button.vjs-top {\n  top: 1em;\n}\n\n.video-js .vjs-transient-button.vjs-near-top {\n  top: 4em;\n}\n\n.video-js .vjs-transient-button.vjs-bottom {\n  bottom: 4em;\n}\n\n.video-js .vjs-transient-button:hover {\n  background-color: rgba(50, 50, 50, 0.9);\n}\n\n@media print {\n  .video-js > *:not(.vjs-tech):not(.vjs-poster) {\n    visibility: hidden;\n  }\n}\n.vjs-resize-manager {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border: none;\n  z-index: -1000;\n}\n\n.js-focus-visible .video-js *:focus:not(.focus-visible) {\n  outline: none;\n}\n\n.video-js *:focus:not(:focus-visible) {\n  outline: none;\n}\n","<template>\r\n  <div class=\"video-player-page\">\r\n    <!-- 返回按钮 -->\r\n    <header class=\"player-header\">\r\n      <button class=\"back-btn\" @click=\"goBack\">\r\n        ← 返回\r\n      </button>\r\n      <h1 class=\"page-title\">视频播放</h1>\r\n    </header>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading-overlay\">\r\n      <div class=\"loading-content\">\r\n        <div class=\"loading-spinner\">⏳</div>\r\n        <p>正在加载视频...</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 错误状态 -->\r\n    <div v-if=\"error\" class=\"error-notification\" :class=\"{ 'transcoding': error.includes('转码中') }\">\r\n      <div class=\"error-icon\">⚠️</div>\r\n      <p v-html=\"error\"></p>\r\n      <button v-if=\"!error.includes('转码中')\" class=\"retry-btn\" @click=\"loadVideoData\">重试</button>\r\n      <button class=\"close-error-btn\" @click=\"error = ''\">关闭</button>\r\n    </div>\r\n\r\n    <!-- 视频播放器 -->\r\n    <div v-if=\"event && currentVideo\" class=\"video-container\">\r\n      <div class=\"player-wrapper\">\r\n        <!-- 调试信息面板 -->\r\n        <div v-if=\"showDebugLog\" class=\"debug-panel\">\r\n          <div class=\"debug-header\">\r\n            <h4>调试日志</h4>\r\n            <button @click=\"clearLog\" class=\"clear-log-btn\">清空</button>\r\n            <button @click=\"showDebugLog = false\" class=\"close-debug-btn\">×</button>\r\n          </div>\r\n          <div class=\"debug-content\" ref=\"debugContent\">\r\n            <div \r\n              v-for=\"(log, index) in debugLogs\" \r\n              :key=\"index\"\r\n              :class=\"['log-entry', `log-${log.type}`]\"\r\n            >\r\n              <span class=\"log-time\">{{ log.time }}</span>\r\n              <span class=\"log-message\">{{ log.message }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 调试控制按钮 -->\r\n        <div class=\"debug-controls\">\r\n          <button \r\n            @click=\"showDebugLog = !showDebugLog\" \r\n            class=\"debug-toggle-btn\"\r\n            :class=\"{ active: showDebugLog }\"\r\n          >\r\n            🐛 调试日志 ({{ debugLogs.length }})\r\n          </button>\r\n          <button @click=\"testVideoUrl\" class=\"test-url-btn\">测试视频URL</button>\r\n          <button @click=\"checkDOMState\" class=\"test-url-btn\">检查DOM状态</button>\r\n        </div>\r\n\r\n        <div \r\n          ref=\"videoContainer\" \r\n          class=\"video-js-container\"\r\n          v-show=\"event\"\r\n        >\r\n          <div class=\"video-player-wrapper\">\r\n            <video\r\n              id=\"video-player\"\r\n              ref=\"videoPlayer\"\r\n              class=\"video-js vjs-big-play-centered\"\r\n            ></video>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 视频信息 -->\r\n        <div class=\"video-info\">\r\n          <h2 class=\"video-title\">{{ currentVideo.desc || '视频' }}</h2>\r\n          <div class=\"video-meta\">\r\n            <span class=\"event-title\">来自: {{ event.title }}</span>\r\n            <span class=\"video-date\">{{ formatDate(event.date) }}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 视频列表 -->\r\n        <div v-if=\"videoList.length > 1\" class=\"video-list\">\r\n          <h3 class=\"list-title\">视频列表 ({{ videoList.length }}个)</h3>\r\n          <div class=\"video-thumbnails\">\r\n            <div \r\n              v-for=\"(video, index) in videoList\" \r\n              :key=\"index\"\r\n              class=\"thumbnail-item\"\r\n              :class=\"{ active: index === currentVideoIndex }\"\r\n              @click=\"switchVideo(index)\"\r\n            >\r\n              <div \r\n                class=\"thumbnail-preview\"\r\n                :style=\"{ backgroundImage: `url(${getMediaUrl(event.id, video.fileName, true)})` }\"\r\n              >\r\n                <span class=\"play-overlay\">▶️</span>\r\n                <span v-if=\"video.duration\" class=\"duration\">{{ formatDuration(video.duration) }}</span>\r\n              </div>\r\n              <p class=\"thumbnail-desc\">{{ video.desc || `视频${index + 1}` }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onBeforeUnmount, nextTick } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport dayjs from 'dayjs'\r\nimport videojs from 'video.js'\r\nimport 'video.js/dist/video-js.css'\r\nimport { getEventById, getVideoURL, getMediaUrl } from '@/api/events'\r\nimport { loadConfig } from '@/config'\r\n\r\nexport default {\r\n  name: 'VideoPlayer',\r\n  setup() {\r\n    const route = useRoute()\r\n    const router = useRouter()\r\n    \r\n    const event = ref(null)\r\n    const currentVideo = ref(null)\r\n    const currentVideoIndex = ref(0)\r\n    const videoList = ref([])\r\n    const loading = ref(true)\r\n    const error = ref('')\r\n    \r\n    const videoPlayer = ref(null)\r\n    const videoContainer = ref(null)\r\n    const debugContent = ref(null)\r\n    let player = null\r\n\r\n    // 调试相关状态\r\n    const showDebugLog = ref(false)\r\n    const debugLogs = ref([])\r\n\r\n    // 添加调试日志\r\n    const addLog = (message, type = 'info') => {\r\n      const log = {\r\n        time: dayjs().format('HH:mm:ss.SSS'),\r\n        message,\r\n        type\r\n      }\r\n      debugLogs.value.push(log)\r\n      console.log(`[VideoPlayer ${type}]:`, message)\r\n      \r\n      // 滚动到底部\r\n      nextTick(() => {\r\n        if (debugContent.value) {\r\n          debugContent.value.scrollTop = debugContent.value.scrollHeight\r\n        }\r\n      })\r\n    }\r\n\r\n    // 清空日志\r\n    const clearLog = () => {\r\n      debugLogs.value = []\r\n    }\r\n\r\n    // 等待DOM元素可用\r\n    const waitForElement = (refElement, maxWait = 3000) => {\r\n      return new Promise((resolve, reject) => {\r\n        const startTime = Date.now()\r\n        \r\n        const check = () => {\r\n          if (refElement.value) {\r\n            addLog('DOM元素已就绪', 'success')\r\n            resolve(refElement.value)\r\n            return\r\n          }\r\n          \r\n          if (Date.now() - startTime > maxWait) {\r\n            addLog(`等待DOM元素超时 (${maxWait}ms)`, 'error')\r\n            reject(new Error('等待DOM元素超时'))\r\n            return\r\n          }\r\n          \r\n          setTimeout(check, 50)\r\n        }\r\n        \r\n        check()\r\n      })\r\n    }\r\n\r\n    const videoPlayerOptions = ref({\r\n      fluid: true,\r\n      responsive: true,\r\n      width: '100%',\r\n      height: 'auto',\r\n      playbackRates: [0.5, 1, 1.25, 1.5, 2],\r\n      controls: true,\r\n      preload: 'auto',\r\n      playsinline: true,\r\n      autoplay: false,\r\n      language: 'zh-cn'\r\n    })\r\n\r\n    // 加载视频数据\r\n    const loadVideoData = async () => {\r\n      try {\r\n        loading.value = true\r\n        error.value = ''\r\n        addLog('开始加载视频数据', 'info')\r\n        \r\n        const eventId = route.params.id\r\n        const videoIndex = parseInt(route.params.videoIndex) || 0\r\n        addLog(`路由参数 - eventId: ${eventId}, videoIndex: ${videoIndex}`, 'info')\r\n\r\n        // 检查配置加载\r\n        try {\r\n          await loadConfig()\r\n          addLog('配置文件加载成功', 'success')\r\n        } catch (configErr) {\r\n          addLog(`配置文件加载失败: ${configErr.message}`, 'error')\r\n          error.value = '配置文件加载失败'\r\n          return\r\n        }\r\n        \r\n        // 获取事件详情\r\n        addLog('正在获取事件详情...', 'info')\r\n        const response = await getEventById(eventId)\r\n        if (!response.success) {\r\n          addLog(`获取事件详情失败: ${response.message}`, 'error')\r\n          error.value = response.message || '获取事件详情失败'\r\n          return\r\n        }\r\n        \r\n        event.value = response.data\r\n        videoList.value = event.value.media?.videos || []\r\n        addLog(`事件详情获取成功, 找到 ${videoList.value.length} 个视频`, 'success')\r\n        \r\n        if (videoList.value.length === 0) {\r\n          addLog('该事件没有视频文件', 'warning')\r\n          error.value = '该事件没有视频'\r\n          return\r\n        }\r\n        \r\n        // 设置当前视频\r\n        currentVideoIndex.value = Math.min(videoIndex, videoList.value.length - 1)\r\n        currentVideo.value = videoList.value[currentVideoIndex.value]\r\n        addLog(`当前视频: ${currentVideo.value.fileName} (索引: ${currentVideoIndex.value})`, 'info')\r\n        \r\n        // 等待DOM更新并初始化播放器\r\n        addLog('等待DOM更新和播放器初始化...', 'info')\r\n        await nextTick()\r\n        await initializePlayer()\r\n        \r\n      } catch (err) {\r\n        addLog(`加载视频数据失败: ${err.message}`, 'error')\r\n        error.value = '网络错误，请稍后重试'\r\n        console.error('加载视频数据失败:', err)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // 初始化Video.js播放器\r\n    const initializePlayer = async () => {\r\n      addLog('开始初始化Video.js播放器...', 'info')\r\n      \r\n      // 清理旧实例\r\n      if (player) {\r\n        addLog('清理旧的播放器实例', 'info')\r\n        try {\r\n          player.dispose()\r\n        } catch (e) {\r\n          addLog(`清理播放器实例出错: ${e.message}，继续初始化`, 'warning')\r\n        }\r\n        player = null\r\n      }\r\n\r\n      // 确保视频容器和当前视频已正确设置\r\n      if (!currentVideo.value || !event.value) {\r\n        addLog('当前视频数据不存在，无法初始化播放器', 'error')\r\n        error.value = '视频数据加载失败'\r\n        return\r\n      }\r\n\r\n      // 确认DOM元素存在\r\n      if (!videoPlayer.value || !videoContainer.value) {\r\n        addLog('找不到播放器DOM元素，等待300ms后重试', 'warning')\r\n        await new Promise(resolve => setTimeout(resolve, 300))\r\n        \r\n        if (!videoPlayer.value || !videoContainer.value) {\r\n          addLog('最终检查失败，播放器DOM元素不存在', 'error')\r\n          error.value = '播放器加载失败: DOM元素丢失'\r\n          return\r\n        }\r\n      }\r\n\r\n      addLog(`视频元素ID: ${videoPlayer.value.id}`, 'info')\r\n      addLog(`视频容器存在: ${!!videoContainer.value}`, 'info')\r\n      \r\n      try {\r\n        // 等待容器元素可用\r\n        addLog('等待容器元素可用...', 'info')\r\n        await waitForElement(videoPlayer, 3000)\r\n        \r\n        addLog(`容器元素已找到: ${videoPlayer.value.tagName}`, 'success')\r\n        addLog(`容器元素ID: ${videoPlayer.value.id}`, 'info')\r\n      } catch (err) {\r\n        addLog(`等待容器元素失败: ${err.message}`, 'error')\r\n        error.value = '视频播放器初始化失败：容器元素未找到'\r\n        return\r\n      }\r\n\r\n      try {\r\n        addLog('获取视频URL...', 'info')\r\n        const videoUrlResponse = await getVideoURL(event.value.id, currentVideo.value.fileName)\r\n        \r\n        if (!videoUrlResponse.success) {\r\n          addLog(`获取视频URL失败: ${videoUrlResponse.message}`, 'error')\r\n          error.value = videoUrlResponse.message || '获取视频URL失败'\r\n          return\r\n        }\r\n\r\n        const videoData = videoUrlResponse.data\r\n        addLog(`视频状态: ${JSON.stringify(videoData)}`, 'info')\r\n\r\n        // 检查视频是否正在处理中\r\n        if (videoData.isProcessing) {\r\n          addLog('视频正在转码中，请稍后再试', 'warning')\r\n          error.value = '视频正在转码中，请稍后再试 <span class=\"retry-transcode-btn\" id=\"retry-transcode\">自动重试</span>'\r\n          \r\n          // 添加重试按钮的事件监听器\r\n          setTimeout(() => {\r\n            const retryBtn = document.getElementById('retry-transcode')\r\n            if (retryBtn) {\r\n              retryBtn.addEventListener('click', () => {\r\n                addLog('自动重试转码检查...', 'info')\r\n                // 设置定时器每3秒检查一次转码状态\r\n                let checkCount = 0\r\n                const maxChecks = 20 // 最多检查20次，约1分钟\r\n                \r\n                const checkInterval = setInterval(async () => {\r\n                  checkCount++\r\n                  addLog(`第${checkCount}次检查转码状态...`, 'info')\r\n                  \r\n                  try {\r\n                    const response = await getVideoURL(event.value.id, currentVideo.value.fileName)\r\n                    if (response.success && response.data) {\r\n                      if (!response.data.isProcessing && response.data.isTranscoded) {\r\n                        addLog('视频转码已完成', 'success')\r\n                        clearInterval(checkInterval)\r\n                        initializePlayer()\r\n                      } else if (checkCount >= maxChecks) {\r\n                        addLog('达到最大检查次数，停止检查', 'warning')\r\n                        error.value = '视频转码时间过长，请稍后刷新页面重试'\r\n                        clearInterval(checkInterval)\r\n                      } else {\r\n                        addLog('视频仍在转码中...', 'info')\r\n                      }\r\n                    } else {\r\n                      addLog('检查转码状态失败', 'error')\r\n                      clearInterval(checkInterval)\r\n                    }\r\n                  } catch (err) {\r\n                    addLog(`检查转码状态出错: ${err.message}`, 'error')\r\n                    clearInterval(checkInterval)\r\n                  }\r\n                }, 3000) // 每3秒检查一次\r\n              })\r\n            }\r\n          }, 100)\r\n          return\r\n        }\r\n\r\n        // 检查视频是否已转码\r\n        if (!videoData.isTranscoded) {\r\n          addLog('视频未经过转码，可能无法正常播放', 'warning')\r\n        }\r\n\r\n        const videoUrl = videoData.hlsUrl\r\n        addLog(`生成的视频URL: ${videoUrl}`, 'info')\r\n\r\n        // 配置Video.js播放器选项\r\n        const playerConfig = {\r\n          ...videoPlayerOptions.value,\r\n          sources: [{\r\n            src: videoUrl,\r\n            type: 'application/x-mpegURL' // HLS格式\r\n          }]\r\n        }\r\n\r\n        addLog('正在初始化Video.js播放器...', 'info')\r\n        addLog(`播放器配置: ${JSON.stringify(playerConfig, null, 2)}`, 'info')\r\n        \r\n        player = videojs(videoPlayer.value, playerConfig)\r\n        \r\n        addLog('Video.js播放器初始化成功', 'success')\r\n        addLog(`播放器实例: ${typeof player}`, 'info')\r\n        console.log('Video.js initialized', player)\r\n\r\n        // 添加事件监听\r\n        player.ready(() => {\r\n          addLog('播放器准备就绪', 'success')\r\n        })\r\n\r\n        player.on('loadstart', () => {\r\n          addLog('开始加载视频', 'info')\r\n        })\r\n\r\n        player.on('loadeddata', () => {\r\n          addLog('视频数据已加载', 'success')\r\n        })\r\n        \r\n        player.on('loadedmetadata', () => {\r\n          addLog('视频元数据已加载', 'success')\r\n          try {\r\n            const duration = player.duration()\r\n            addLog(`视频时长: ${duration}秒`, 'info')\r\n            const videoWidth = player.videoWidth() || 0\r\n            const videoHeight = player.videoHeight() || 0\r\n            addLog(`视频尺寸: ${videoWidth}x${videoHeight}`, 'info')\r\n          } catch (e) {\r\n            addLog(`获取视频信息失败: ${e.message}`, 'warning')\r\n          }\r\n        })\r\n\r\n        player.on('canplay', () => {\r\n          addLog('视频可以开始播放', 'success')\r\n        })\r\n\r\n        player.on('canplaythrough', () => {\r\n          addLog('视频已缓冲足够，可以流畅播放', 'success')\r\n        })\r\n\r\n        player.on('play', () => {\r\n          addLog('视频开始播放', 'success')\r\n        })\r\n\r\n        player.on('pause', () => {\r\n          addLog('视频暂停', 'info')\r\n        })\r\n\r\n        player.on('waiting', () => {\r\n          addLog('视频缓冲中...', 'warning')\r\n        })\r\n\r\n        player.on('stalled', () => {\r\n          addLog('视频加载停滞', 'warning')\r\n        })\r\n\r\n        player.on('emptied', () => {\r\n          addLog('视频元素已清空', 'warning')\r\n        })\r\n\r\n        player.on('abort', () => {\r\n          addLog('视频加载被中止', 'warning')\r\n        })\r\n\r\n        player.on('suspend', () => {\r\n          addLog('视频加载暂停', 'warning')\r\n        })\r\n        \r\n        player.on('error', () => {\r\n          const e = player.error()\r\n          addLog(`Video.js播放器错误: ${JSON.stringify(e)}`, 'error')\r\n          console.error('Video.js error:', e)\r\n          \r\n          if (e) {\r\n            addLog(`视频元素错误码: ${e.code}`, 'error')\r\n            addLog(`视频元素错误信息: ${e.message}`, 'error')\r\n          }\r\n          \r\n          const errorMessage = e?.message || JSON.stringify(e) || '未知错误';\r\n          addLog(`视频播放失败: ${errorMessage}`, 'error')\r\n          error.value = `视频播放失败: ${errorMessage}`\r\n        })\r\n        \r\n        player.on('ended', () => {\r\n          addLog('视频播放结束', 'info')\r\n          console.log('Video ended')\r\n          // 自动播放下一个视频\r\n          if (currentVideoIndex.value < videoList.value.length - 1) {\r\n            switchVideo(currentVideoIndex.value + 1)\r\n          }\r\n        })\r\n\r\n        // 添加延迟检查，确保播放器正确渲染\r\n        setTimeout(() => {\r\n          addLog('延迟检查播放器状态...', 'info')\r\n          const videoElement = player.tech().el()\r\n          if (videoElement) {\r\n            addLog(`视频元素存在: ${videoElement.tagName}`, 'success')\r\n            addLog(`视频元素src: ${videoElement.src}`, 'info')\r\n            addLog(`视频元素readyState: ${videoElement.readyState}`, 'info')\r\n            addLog(`视频元素networkState: ${videoElement.networkState}`, 'info')\r\n          } else {\r\n            addLog('未找到视频元素', 'error')\r\n          }\r\n          \r\n          const playerElement = document.querySelector(`#${videoPlayer.value.id}`)\r\n          if (playerElement) {\r\n            addLog(`播放器容器存在，子元素数量: ${playerElement.children.length}`, 'info')\r\n            addLog(`播放器容器内容: ${playerElement.innerHTML.substring(0, 200)}...`, 'info')\r\n          } else {\r\n            addLog('未找到播放器容器', 'error')\r\n          }\r\n        }, 1000)\r\n\r\n      } catch (err) {\r\n        addLog(`Video.js播放器初始化失败: ${err.message}`, 'error')\r\n        console.error('Failed to initialize Video.js:', err)\r\n        error.value = '视频播放器初始化失败'\r\n      }\r\n    }\r\n\r\n    // 检查DOM状态\r\n    const checkDOMState = () => {\r\n      addLog('=== DOM状态检查 ===', 'info')\r\n      addLog(`videoPlayer.value: ${!!videoPlayer.value}`, 'info')\r\n      addLog(`videoContainer.value: ${!!videoContainer.value}`, 'info')\r\n      addLog(`currentVideo: ${!!currentVideo.value}`, 'info')\r\n      addLog(`event: ${!!event.value}`, 'info')\r\n      \r\n      if (videoPlayer.value) {\r\n        addLog(`视频元素ID: ${videoPlayer.value.id || '无'}`, 'info')\r\n        addLog(`视频元素类名: ${videoPlayer.value.className}`, 'info')\r\n        addLog(`视频元素是否在DOM中: ${document.contains(videoPlayer.value)}`, 'info')\r\n        addLog(`视频元素宽度: ${videoPlayer.value.offsetWidth}`, 'info')\r\n        addLog(`视频元素高度: ${videoPlayer.value.offsetHeight}`, 'info')\r\n      }\r\n      \r\n      const allVideos = document.querySelectorAll('video')\r\n      addLog(`页面中video元素总数: ${allVideos.length}`, 'info')\r\n      \r\n      const vjsElements = document.querySelectorAll('.video-js')\r\n      addLog(`页面中.video-js元素总数: ${vjsElements.length}`, 'info')\r\n      \r\n      if (player) {\r\n        addLog(`Video.js播放器状态: 已初始化`, 'success')\r\n        try {\r\n          addLog(`播放器就绪状态: ${player.readyState()}`, 'info')\r\n        } catch (e) {\r\n          addLog(`获取播放器状态失败: ${e.message}`, 'warning')\r\n        }\r\n      } else {\r\n        addLog(`Video.js播放器状态: 未初始化`, 'warning')\r\n      }\r\n    }\r\n\r\n    // 测试视频URL\r\n    const testVideoUrl = async () => {\r\n      if (!event.value || !currentVideo.value) {\r\n        addLog('没有可测试的视频', 'warning')\r\n        return\r\n      }\r\n\r\n      try {\r\n        addLog('获取视频URL...', 'info')\r\n        const videoUrlResponse = await getVideoURL(event.value.id, currentVideo.value.fileName)\r\n        \r\n        if (!videoUrlResponse.success) {\r\n          addLog(`获取视频URL失败: ${videoUrlResponse.message}`, 'error')\r\n          return\r\n        }\r\n\r\n        const videoData = videoUrlResponse.data\r\n        addLog(`视频状态: ${JSON.stringify(videoData)}`, 'info')\r\n        \r\n        if (videoData.isProcessing) {\r\n          addLog('视频正在转码中', 'warning')\r\n          return\r\n        }\r\n\r\n        if (!videoData.isTranscoded) {\r\n          addLog('视频未经过转码，可能无法正常播放', 'warning')\r\n        }\r\n\r\n        const videoUrl = videoData.hlsUrl\r\n        addLog(`生成的视频URL: ${videoUrl}`, 'info')\r\n        \r\n        // 测试视频URL\r\n        try {\r\n          const response = await fetch(videoUrl, { method: 'HEAD' })\r\n          if (response.ok) {\r\n            addLog(`URL测试成功 - 状态码: ${response.status}`, 'success')\r\n            addLog(`内容类型: ${response.headers.get('content-type')}`, 'info')\r\n            addLog(`内容长度: ${response.headers.get('content-length')} bytes`, 'info')\r\n          } else {\r\n            addLog(`URL测试失败 - 状态码: ${response.status}`, 'error')\r\n          }\r\n        } catch (err) {\r\n          addLog(`URL测试错误: ${err.message}`, 'error')\r\n        }\r\n      } catch (err) {\r\n        addLog(`获取视频URL错误: ${err.message}`, 'error')\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // 切换视频\r\n    const switchVideo = async (index) => {\r\n      if (index < 0 || index >= videoList.value.length || index === currentVideoIndex.value) {\r\n        return\r\n      }\r\n      \r\n      addLog(`切换到视频 ${index + 1}/${videoList.value.length}`, 'info')\r\n      loading.value = true\r\n      error.value = ''\r\n      \r\n      // 清理旧播放器\r\n      if (player) {\r\n        addLog('销毁现有播放器实例', 'info')\r\n        try {\r\n          player.dispose()\r\n        } catch (e) {\r\n          addLog(`销毁播放器实例出错: ${e.message}`, 'warning')\r\n        }\r\n        player = null\r\n      }\r\n      \r\n      // 更新当前视频信息\r\n      currentVideoIndex.value = index\r\n      currentVideo.value = videoList.value[index]\r\n      addLog(`切换到视频: ${currentVideo.value.fileName}`, 'info')\r\n      \r\n      // 更新URL但不重新加载页面\r\n      const newPath = `/video-player/${event.value.id}/${index}`\r\n      if (route.path !== newPath) {\r\n        router.replace(newPath)\r\n      }\r\n      \r\n      // 确保DOM完全更新\r\n      await nextTick()\r\n      await new Promise(resolve => setTimeout(resolve, 300))\r\n      \r\n      // 初始化新播放器\r\n      try {\r\n        // 直接初始化播放器，而不是重新加载全部数据\r\n        await nextTick()\r\n        await initializePlayer()\r\n      } catch (e) {\r\n        addLog(`初始化播放器失败: ${e.message}`, 'error')\r\n        error.value = '切换视频失败，请重试'\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 格式化日期\r\n    const formatDate = (date) => {\r\n      return dayjs(date).format('YYYY年MM月DD日')\r\n    }\r\n\r\n    // 格式化视频时长\r\n    const formatDuration = (seconds) => {\r\n      const mins = Math.floor(seconds / 60)\r\n      const secs = Math.floor(seconds % 60)\r\n      return `${mins}:${secs.toString().padStart(2, '0')}`\r\n    }\r\n\r\n    // 返回上一页\r\n    const goBack = () => {\r\n      router.back()\r\n    }\r\n\r\n    // 移除监听器，我们现在完全通过switchVideo控制播放器的初始化\r\n\r\n    // 组件挂载\r\n    onMounted(async () => {\r\n      addLog('VideoPlayer组件已挂载', 'info')\r\n      addLog(`当前环境: ${process.env.NODE_ENV}`, 'info')\r\n      addLog(`用户代理: ${navigator.userAgent}`, 'info')\r\n      \r\n      // 检查Video.js播放器是否可用\r\n      if (typeof videojs === 'undefined') {\r\n        addLog('Video.js播放器未正确加载', 'error')\r\n      } else {\r\n        addLog(`Video.js播放器已加载`, 'success')\r\n      }\r\n      \r\n      loadVideoData()\r\n    })\r\n\r\n    // 组件卸载时清理\r\n    onBeforeUnmount(() => {\r\n      if (player) {\r\n        player.dispose()\r\n        player = null\r\n      }\r\n    })\r\n\r\n    return {\r\n      event,\r\n      currentVideo,\r\n      currentVideoIndex,\r\n      videoList,\r\n      loading,\r\n      error,\r\n      videoPlayer,\r\n      videoContainer,\r\n      debugContent,\r\n      showDebugLog,\r\n      debugLogs,\r\n      loadVideoData,\r\n      switchVideo,\r\n      testVideoUrl,\r\n      checkDOMState,\r\n      clearLog,\r\n      formatDate,\r\n      formatDuration,\r\n      goBack,\r\n      getMediaUrl,\r\n      getVideoURL\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.video-player-page {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);\r\n  padding: 20px;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n}\r\n\r\n/* 头部 */\r\n.player-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  max-width: 1200px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.back-btn {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin-right: 20px;\r\n  backdrop-filter: blur(10px);\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.back-btn:hover {\r\n  background: rgba(255, 255, 255, 0.3);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.page-title {\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: white;\r\n  margin: 0;\r\n}\r\n\r\n/* 视频容器 */\r\n.video-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.player-wrapper {\r\n  background: rgba(255, 255, 255, 0.95);\r\n  border-radius: 20px;\r\n  padding: 30px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\r\n  backdrop-filter: blur(20px);\r\n}\r\n\r\n.video-js-container {\r\n  margin-bottom: 30px;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* Video.js播放器样式覆盖 */\r\n.video-js-container :deep(.video-js) {\r\n  border-radius: 15px;\r\n  background-color: #000;\r\n}\r\n\r\n.video-js-container :deep(.video-js .vjs-big-play-button) {\r\n  border-radius: 50%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  border: 3px solid rgba(255, 255, 255, 0.9);\r\n  transition: all 0.3s ease;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.video-js-container :deep(.video-js:hover .vjs-big-play-button) {\r\n  background: rgba(0, 0, 0, 0.9);\r\n  transform: translate(-50%, -50%) scale(1.1);\r\n}\r\n\r\n.video-js-container :deep(.video-js .vjs-control-bar) {\r\n  background: rgba(0, 0, 0, 0.8);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 0 0 15px 15px;\r\n}\r\n\r\n.video-js-container :deep(.video-js .vjs-progress-control) {\r\n  height: 6px;\r\n}\r\n\r\n.video-js-container :deep(.video-js .vjs-play-progress) {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n}\r\n\r\n\r\n\r\n/* 视频信息 */\r\n.video-info {\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.video-title {\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin: 0 0 10px 0;\r\n}\r\n\r\n.video-meta {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  font-size: 14px;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.event-title {\r\n  font-weight: 500;\r\n}\r\n\r\n/* 视频列表 */\r\n.video-list {\r\n  border-top: 2px solid #ecf0f1;\r\n  padding-top: 30px;\r\n}\r\n\r\n.list-title {\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin: 0 0 20px 0;\r\n  text-align: center;\r\n}\r\n\r\n.video-thumbnails {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 15px;\r\n}\r\n\r\n.thumbnail-item {\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  background: white;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.thumbnail-item:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.thumbnail-item.active {\r\n  border: 3px solid #3498db;\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 4px 20px rgba(52, 152, 219, 0.3);\r\n}\r\n\r\n.thumbnail-preview {\r\n  height: 120px;\r\n  background: linear-gradient(135deg, #8e44ad 0%, #9b59b6 100%);\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.play-overlay {\r\n  font-size: 24px;\r\n  color: white;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.duration {\r\n  position: absolute;\r\n  bottom: 8px;\r\n  right: 8px;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  color: white;\r\n  padding: 2px 6px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n}\r\n\r\n.thumbnail-desc {\r\n  padding: 12px;\r\n  font-size: 13px;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  line-height: 1.3;\r\n}\r\n\r\n/* 加载和错误状态 */\r\n.loading-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1001;\r\n}\r\n\r\n.loading-content {\r\n  text-align: center;\r\n  padding: 30px 40px;\r\n  background: rgba(30, 60, 114, 0.9);\r\n  border-radius: 15px;\r\n  color: white;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.error-notification {\r\n  position: fixed;\r\n  top: 80px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: rgba(231, 76, 60, 0.9);\r\n  border-radius: 10px;\r\n  padding: 15px 20px;\r\n  text-align: center;\r\n  color: white;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n  z-index: 1000;\r\n  max-width: 90%;\r\n  backdrop-filter: blur(5px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.error-notification.transcoding {\r\n  background: rgba(243, 156, 18, 0.9);\r\n}\r\n\r\n.close-error-btn {\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  color: white;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  font-size: 14px;\r\n  line-height: 1;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.close-error-btn:hover {\r\n  background: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n.loading-spinner, .error-icon {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.retry-btn {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  margin-top: 15px;\r\n  backdrop-filter: blur(10px);\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.retry-btn:hover,\r\n.retry-transcode-btn:hover {\r\n  background: rgba(255, 255, 255, 0.3);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.retry-transcode-btn {\r\n  display: inline-block;\r\n  background: rgba(52, 152, 219, 0.2);\r\n  border: 1px solid rgba(52, 152, 219, 0.4);\r\n  color: white;\r\n  padding: 5px 15px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  margin-left: 10px;\r\n  backdrop-filter: blur(10px);\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .video-player-page {\r\n    padding: 15px;\r\n  }\r\n\r\n  .player-wrapper {\r\n    padding: 20px;\r\n  }\r\n\r\n  .video-title {\r\n    font-size: 20px;\r\n  }\r\n\r\n  .video-meta {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n\r\n  .video-thumbnails {\r\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n    gap: 10px;\r\n  }\r\n\r\n  .thumbnail-preview {\r\n    height: 100px;\r\n  }\r\n\r\n  .play-overlay {\r\n    font-size: 20px;\r\n    width: 32px;\r\n    height: 32px;\r\n  }\r\n\r\n  .thumbnail-desc {\r\n    padding: 8px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .debug-controls {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .debug-content {\r\n    max-height: 200px;\r\n    font-size: 11px;\r\n  }\r\n\r\n  .debug-toggle-btn, .test-url-btn {\r\n    font-size: 12px;\r\n    padding: 6px 12px;\r\n  }\r\n  \r\n  .error-notification {\r\n    top: 60px;\r\n    padding: 10px 15px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .error-icon {\r\n    font-size: 32px;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n/* 调试面板样式 */\r\n.debug-controls {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n  justify-content: center;\r\n}\r\n\r\n.debug-toggle-btn, .test-url-btn {\r\n  background: rgba(52, 152, 219, 0.1);\r\n  border: 1px solid rgba(52, 152, 219, 0.3);\r\n  color: #3498db;\r\n  padding: 8px 15px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 13px;\r\n  transition: all 0.2s ease;\r\n  backdrop-filter: blur(10px);\r\n}\r\n\r\n.debug-toggle-btn:hover, .test-url-btn:hover {\r\n  background: rgba(52, 152, 219, 0.2);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.debug-toggle-btn.active {\r\n  background: rgba(52, 152, 219, 0.2);\r\n  border-color: #3498db;\r\n  font-weight: 500;\r\n}\r\n\r\n.debug-panel {\r\n  background: rgba(0, 0, 0, 0.9);\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n  backdrop-filter: blur(20px);\r\n}\r\n\r\n.debug-header {\r\n  background: rgba(52, 152, 219, 0.1);\r\n  padding: 12px 15px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.debug-header h4 {\r\n  margin: 0;\r\n  color: #3498db;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n}\r\n\r\n.clear-log-btn, .close-debug-btn {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  color: rgba(255, 255, 255, 0.8);\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.clear-log-btn:hover, .close-debug-btn:hover {\r\n  background: rgba(255, 255, 255, 0.2);\r\n  color: white;\r\n}\r\n\r\n.close-debug-btn {\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  padding: 2px 8px;\r\n}\r\n\r\n.debug-content {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  padding: 10px;\r\n  font-family: 'Courier New', monospace;\r\n  font-size: 12px;\r\n  line-height: 1.4;\r\n}\r\n\r\n.log-entry {\r\n  display: flex;\r\n  margin-bottom: 4px;\r\n  padding: 2px 0;\r\n  border-left: 3px solid transparent;\r\n  padding-left: 8px;\r\n}\r\n\r\n.log-time {\r\n  color: rgba(255, 255, 255, 0.6);\r\n  margin-right: 10px;\r\n  min-width: 70px;\r\n  font-size: 11px;\r\n}\r\n\r\n.log-message {\r\n  color: rgba(255, 255, 255, 0.9);\r\n  word-break: break-all;\r\n}\r\n\r\n.log-info {\r\n  border-left-color: #3498db;\r\n}\r\n\r\n.log-info .log-message {\r\n  color: #3498db;\r\n}\r\n\r\n.log-success {\r\n  border-left-color: #2ecc71;\r\n}\r\n\r\n.log-success .log-message {\r\n  color: #2ecc71;\r\n}\r\n\r\n.log-warning {\r\n  border-left-color: #f39c12;\r\n}\r\n\r\n.log-warning .log-message {\r\n  color: #f39c12;\r\n}\r\n\r\n.log-error {\r\n  border-left-color: #e74c3c;\r\n}\r\n\r\n.log-error .log-message {\r\n  color: #e74c3c;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 调试内容滚动条样式 */\r\n.debug-content::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.debug-content::-webkit-scrollbar-track {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 3px;\r\n}\r\n\r\n.debug-content::-webkit-scrollbar-thumb {\r\n  background: rgba(255, 255, 255, 0.3);\r\n  border-radius: 3px;\r\n}\r\n\r\n.debug-content::-webkit-scrollbar-thumb:hover {\r\n  background: rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n\r\n</style>\r\n","@font-face{font-family:iconfont;src:url(data:font/woff2;base64,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) format(\"woff2\")}.iconfont[data-v-bf21758a]{font-family:iconfont!important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-replay[data-v-bf21758a]:before{content:\"\"}.icon-pip[data-v-bf21758a]:before{content:\"\"}.icon-loading[data-v-bf21758a]:before{content:\"\"}.icon-play[data-v-bf21758a]:before{content:\"\"}.icon-pause[data-v-bf21758a]:before{content:\"\"}.icon-screen[data-v-bf21758a]:before{content:\"\"}.icon-web-screen[data-v-bf21758a]:before{content:\"\"}.icon-settings[data-v-bf21758a]:before{content:\"\"}.icon-volume-down[data-v-bf21758a]:before{content:\"\"}.icon-volume-up[data-v-bf21758a]:before{content:\"\"}.icon-volume-mute[data-v-bf21758a]:before{content:\"\"}.d-icon[data-v-bf21758a]{display:inline-block;cursor:pointer;overflow:hidden}.d-player-top[data-v-8a83c3bf]{position:absolute;font-size:16px;left:0;top:0;right:0;color:#fff;display:flex;padding:0 20px;height:60px;background-image:linear-gradient(rgba(0,0,0,.6),transparent);justify-content:space-between}.iconfont[data-v-b4f9cb00]{display:inline-block}.d-flex-x[data-v-b4f9cb00],.d-flex-y[data-v-b4f9cb00],.d-flex-center[data-v-b4f9cb00]{display:flex}.d-flex-x[data-v-b4f9cb00]{align-items:center}.d-flex-y[data-v-b4f9cb00]{justify-content:center}.d-flex-center[data-v-b4f9cb00]{justify-content:center;align-items:center}.mr5[data-v-b4f9cb00]{margin-right:5px}.mr10[data-v-b4f9cb00]{margin-right:10px}.ml5[data-v-b4f9cb00]{margin-left:5px}.ml10[data-v-b4f9cb00]{margin-left:10px}.d-pointer[data-v-b4f9cb00]{cursor:pointer}.d-status[data-v-b4f9cb00]{text-align:center;font-size:14px;vertical-align:middle;background:rgba(0,0,0,.8);padding:0 8px;height:30px;border-radius:5px;display:flex;align-items:center;color:#fffffff2}.d-status .d-status-icon[data-v-b4f9cb00]{width:24px!important;display:inline-block;margin-right:5px}.d-switch[data-v-928a6686]{position:relative;height:18px;transition:background .2s;width:var(--3c9c80d0);background:#757575;border-radius:10px;display:inline-flex;align-items:center;vertical-align:middle}.d-switch .d-switch__input[data-v-928a6686]{position:relative;z-index:1;margin:0;width:100%;height:100%;opacity:0}.d-switch .d-switch_action[data-v-928a6686]{position:absolute;transition:.2s;left:2px;top:2px;z-index:0;height:14px;width:14px;background:#fff;border-radius:50%}.d-switch.is-checked[data-v-928a6686]{background:var(--4d5b9787)}.d-switch.is-checked .d-switch_action[data-v-928a6686]{left:100%;background:#fff;margin-left:-18px}@font-face{font-family:iconfont;src:url(data:font/woff2;base64,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) format(\"woff2\")}.iconfont[data-v-462eb232]{font-family:iconfont!important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-replay[data-v-462eb232]:before{content:\"\"}.icon-pip[data-v-462eb232]:before{content:\"\"}.icon-loading[data-v-462eb232]:before{content:\"\"}.icon-play[data-v-462eb232]:before{content:\"\"}.icon-pause[data-v-462eb232]:before{content:\"\"}.icon-screen[data-v-462eb232]:before{content:\"\"}.icon-web-screen[data-v-462eb232]:before{content:\"\"}.icon-settings[data-v-462eb232]:before{content:\"\"}.icon-volume-down[data-v-462eb232]:before{content:\"\"}.icon-volume-up[data-v-462eb232]:before{content:\"\"}.icon-volume-mute[data-v-462eb232]:before{content:\"\"}html[data-v-462eb232],body[data-v-462eb232],div[data-v-462eb232],span[data-v-462eb232],applet[data-v-462eb232],object[data-v-462eb232],iframe[data-v-462eb232],h1[data-v-462eb232],h2[data-v-462eb232],h3[data-v-462eb232],h4[data-v-462eb232],h5[data-v-462eb232],h6[data-v-462eb232],p[data-v-462eb232],blockquote[data-v-462eb232],pre[data-v-462eb232],a[data-v-462eb232],abbr[data-v-462eb232],acronym[data-v-462eb232],address[data-v-462eb232],big[data-v-462eb232],cite[data-v-462eb232],code[data-v-462eb232],del[data-v-462eb232],dfn[data-v-462eb232],em[data-v-462eb232],img[data-v-462eb232],ins[data-v-462eb232],kbd[data-v-462eb232],q[data-v-462eb232],s[data-v-462eb232],samp[data-v-462eb232],small[data-v-462eb232],strike[data-v-462eb232],strong[data-v-462eb232],sub[data-v-462eb232],sup[data-v-462eb232],tt[data-v-462eb232],var[data-v-462eb232],b[data-v-462eb232],u[data-v-462eb232],i[data-v-462eb232],center[data-v-462eb232],dl[data-v-462eb232],dt[data-v-462eb232],dd[data-v-462eb232],ol[data-v-462eb232],ul[data-v-462eb232],li[data-v-462eb232],fieldset[data-v-462eb232],form[data-v-462eb232],label[data-v-462eb232],legend[data-v-462eb232],table[data-v-462eb232],caption[data-v-462eb232],tbody[data-v-462eb232],tfoot[data-v-462eb232],thead[data-v-462eb232],tr[data-v-462eb232],th[data-v-462eb232],td[data-v-462eb232],article[data-v-462eb232],aside[data-v-462eb232],canvas[data-v-462eb232],details[data-v-462eb232],embed[data-v-462eb232],figure[data-v-462eb232],figcaption[data-v-462eb232],footer[data-v-462eb232],header[data-v-462eb232],hgroup[data-v-462eb232],menu[data-v-462eb232],nav[data-v-462eb232],output[data-v-462eb232],ruby[data-v-462eb232],section[data-v-462eb232],summary[data-v-462eb232],time[data-v-462eb232],mark[data-v-462eb232],audio[data-v-462eb232],video[data-v-462eb232]{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article[data-v-462eb232],aside[data-v-462eb232],details[data-v-462eb232],figcaption[data-v-462eb232],figure[data-v-462eb232],footer[data-v-462eb232],header[data-v-462eb232],hgroup[data-v-462eb232],menu[data-v-462eb232],nav[data-v-462eb232],section[data-v-462eb232]{display:block}body[data-v-462eb232]{line-height:1}ol[data-v-462eb232],ul[data-v-462eb232]{list-style:none}blockquote[data-v-462eb232],q[data-v-462eb232]{quotes:none}blockquote[data-v-462eb232]:before,blockquote[data-v-462eb232]:after,q[data-v-462eb232]:before,q[data-v-462eb232]:after{content:\"\";content:none}table[data-v-462eb232]{border-collapse:collapse;border-spacing:0}textarea[data-v-462eb232]{font-family:inherit}.iconfont[data-v-462eb232]{display:inline-block}.d-flex-x[data-v-462eb232],.d-flex-y[data-v-462eb232],.d-flex-center[data-v-462eb232]{display:flex}.d-flex-x[data-v-462eb232]{align-items:center}.d-flex-y[data-v-462eb232]{justify-content:center}.d-flex-center[data-v-462eb232]{justify-content:center;align-items:center}.mr5[data-v-462eb232]{margin-right:5px}.mr10[data-v-462eb232]{margin-right:10px}.ml5[data-v-462eb232]{margin-left:5px}.ml10[data-v-462eb232]{margin-left:10px}.d-pointer[data-v-462eb232]{cursor:pointer}.rotating[data-v-462eb232]{animation:rotating-462eb232 2s linear infinite}@keyframes rotating-462eb232{to{-webkit-transform:rotate(360deg)}}.d-fade-in-enter-active[data-v-462eb232],.d-fade-in-leave-active[data-v-462eb232]{transition:.5s}.d-fade-in-enter-from[data-v-462eb232],.d-fade-in-leave-to[data-v-462eb232]{opacity:0}.d-scale-out-enter-active[data-v-462eb232],.d-scale-out-leave-active[data-v-462eb232]{transition:.3s}.d-scale-out-leave-to[data-v-462eb232]{transform:scale(1.3);opacity:0}.rotateHover[data-v-462eb232]{transition:.2s}.rotateHover[data-v-462eb232]:hover{transform:rotate(90deg)}.f50[data-v-462eb232]{font-size:50px}.f24[data-v-462eb232]{font-size:24px}.d-loading[data-v-462eb232]{position:absolute;left:0;right:0;bottom:0;top:0;display:flex;align-items:center;justify-content:center;background:rgba(0,0,0,.3);z-index:2;color:#efefef;text-align:center;font-size:13px}.d-slider[data-v-703f29f7]{position:relative}.d-slider .d-slider__runway[data-v-703f29f7]{width:100%;height:var(--48dd698a);background-color:#333;position:relative;cursor:pointer;vertical-align:middle}.d-slider .d-slider__runway .d-slider__cursor[data-v-703f29f7],.d-slider .d-slider__runway .d-slider__preload[data-v-703f29f7],.d-slider .d-slider__runway .d-slider__bar[data-v-703f29f7]{position:absolute;top:0;left:0;height:100%}.d-slider .d-slider__runway .d-slider__cursor[data-v-703f29f7]{display:none;z-index:1;width:1px;background:#fff;pointer-events:none}.d-slider .d-slider__runway .d-slider__cursor .d-slider__tips[data-v-703f29f7]{pointer-events:none;color:#fff;position:absolute;white-space:nowrap;z-index:2;bottom:14px;left:50%;padding:4px;box-sizing:border-box;display:block;font-size:12px;background:rgba(0,0,0,.6);border-radius:3px;transform:translate(-50%)}.d-slider .d-slider__runway:hover .d-slider__cursor[data-v-703f29f7]{display:block}.d-slider .d-slider__runway .d-slider__preload[data-v-703f29f7]{background:#717171}.d-slider .d-slider__runway .d-slider__bar[data-v-703f29f7]{background:linear-gradient(to right,#52a0fd 0%,#00e2fa 80%,#00e2fa 100%)}.d-slider .d-slider__runway .d-slider__bar[data-v-703f29f7]:before{display:block;content:\"\";position:absolute;right:-6px;top:50%;width:12px;height:12px;transition:.2s;transform:translateY(-50%) scale(1);border-radius:50%;background:#fff;box-shadow:0 0 0 5px #409eff}.d-slider.is-vertical[data-v-703f29f7]{height:100%;display:inline-block}.d-slider.is-vertical .d-slider__runway[data-v-703f29f7]{position:relative;height:100%;width:var(--48dd698a);margin:0 6px}.d-slider.is-vertical .d-slider__runway .d-slider__preload[data-v-703f29f7],.d-slider.is-vertical .d-slider__runway .d-slider__bar[data-v-703f29f7],.d-slider.is-vertical .d-slider__runway .d-slider__cursor[data-v-703f29f7]{bottom:0;top:auto;width:100%}.d-slider.is-vertical .d-slider__runway .d-slider__cursor[data-v-703f29f7]{height:1px}.d-slider.is-vertical .d-slider__runway .d-slider__bar[data-v-703f29f7]:before{top:-6px;left:50%;width:12px;height:12px;transform:translate(-50%) scale(1)}html[data-v-64367a85],body[data-v-64367a85],div[data-v-64367a85],span[data-v-64367a85],applet[data-v-64367a85],object[data-v-64367a85],iframe[data-v-64367a85],h1[data-v-64367a85],h2[data-v-64367a85],h3[data-v-64367a85],h4[data-v-64367a85],h5[data-v-64367a85],h6[data-v-64367a85],p[data-v-64367a85],blockquote[data-v-64367a85],pre[data-v-64367a85],a[data-v-64367a85],abbr[data-v-64367a85],acronym[data-v-64367a85],address[data-v-64367a85],big[data-v-64367a85],cite[data-v-64367a85],code[data-v-64367a85],del[data-v-64367a85],dfn[data-v-64367a85],em[data-v-64367a85],img[data-v-64367a85],ins[data-v-64367a85],kbd[data-v-64367a85],q[data-v-64367a85],s[data-v-64367a85],samp[data-v-64367a85],small[data-v-64367a85],strike[data-v-64367a85],strong[data-v-64367a85],sub[data-v-64367a85],sup[data-v-64367a85],tt[data-v-64367a85],var[data-v-64367a85],b[data-v-64367a85],u[data-v-64367a85],i[data-v-64367a85],center[data-v-64367a85],dl[data-v-64367a85],dt[data-v-64367a85],dd[data-v-64367a85],ol[data-v-64367a85],ul[data-v-64367a85],li[data-v-64367a85],fieldset[data-v-64367a85],form[data-v-64367a85],label[data-v-64367a85],legend[data-v-64367a85],table[data-v-64367a85],caption[data-v-64367a85],tbody[data-v-64367a85],tfoot[data-v-64367a85],thead[data-v-64367a85],tr[data-v-64367a85],th[data-v-64367a85],td[data-v-64367a85],article[data-v-64367a85],aside[data-v-64367a85],canvas[data-v-64367a85],details[data-v-64367a85],embed[data-v-64367a85],figure[data-v-64367a85],figcaption[data-v-64367a85],footer[data-v-64367a85],header[data-v-64367a85],hgroup[data-v-64367a85],menu[data-v-64367a85],nav[data-v-64367a85],output[data-v-64367a85],ruby[data-v-64367a85],section[data-v-64367a85],summary[data-v-64367a85],time[data-v-64367a85],mark[data-v-64367a85],audio[data-v-64367a85],video[data-v-64367a85]{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article[data-v-64367a85],aside[data-v-64367a85],details[data-v-64367a85],figcaption[data-v-64367a85],figure[data-v-64367a85],footer[data-v-64367a85],header[data-v-64367a85],hgroup[data-v-64367a85],menu[data-v-64367a85],nav[data-v-64367a85],section[data-v-64367a85]{display:block}body[data-v-64367a85]{line-height:1}ol[data-v-64367a85],ul[data-v-64367a85]{list-style:none}blockquote[data-v-64367a85],q[data-v-64367a85]{quotes:none}blockquote[data-v-64367a85]:before,blockquote[data-v-64367a85]:after,q[data-v-64367a85]:before,q[data-v-64367a85]:after{content:\"\";content:none}table[data-v-64367a85]{border-collapse:collapse;border-spacing:0}textarea[data-v-64367a85]{font-family:inherit}.iconfont[data-v-64367a85]{display:inline-block}.d-flex-x[data-v-64367a85],.d-flex-y[data-v-64367a85],.d-flex-center[data-v-64367a85]{display:flex}.d-flex-x[data-v-64367a85]{align-items:center}.d-flex-y[data-v-64367a85]{justify-content:center}.d-flex-center[data-v-64367a85]{justify-content:center;align-items:center}.mr5[data-v-64367a85]{margin-right:5px}.mr10[data-v-64367a85]{margin-right:10px}.ml5[data-v-64367a85]{margin-left:5px}.ml10[data-v-64367a85]{margin-left:10px}.d-pointer[data-v-64367a85]{cursor:pointer}.rotating[data-v-64367a85]{animation:rotating-64367a85 2s linear infinite}@keyframes rotating-64367a85{to{-webkit-transform:rotate(360deg)}}.d-fade-in-enter-active[data-v-64367a85],.d-fade-in-leave-active[data-v-64367a85]{transition:.5s}.d-fade-in-enter-from[data-v-64367a85],.d-fade-in-leave-to[data-v-64367a85]{opacity:0}.d-scale-out-enter-active[data-v-64367a85],.d-scale-out-leave-active[data-v-64367a85]{transition:.3s}.d-scale-out-leave-to[data-v-64367a85]{transform:scale(1.3);opacity:0}.rotateHover[data-v-64367a85]{transition:.2s}.rotateHover[data-v-64367a85]:hover{transform:rotate(90deg)}.d-player-contextmenu[data-v-64367a85],.d-player-dialog[data-v-64367a85]{position:absolute;left:0;top:0;bottom:50px;width:100%;z-index:5}.d-player-contextmenu .d-player-copyText[data-v-64367a85]{opacity:0}.d-player-contextmenu .d-player-contextmenu-body[data-v-64367a85]{position:absolute;border-radius:5px;font-size:12px;background:rgba(0,0,0,.8);backdrop-filter:blur(5px);-webkit-backdrop-filter:blur(5px);color:#efefef;text-align:left;width:130px;box-sizing:border-box;padding:5px 0}.d-player-contextmenu .d-player-contextmenu-body li[data-v-64367a85]{padding:8px 20px;margin:0;cursor:pointer;transition:.2s}.d-player-contextmenu .d-player-contextmenu-body li[data-v-64367a85]:hover{background-color:#ffffff1a}.d-player-dialog[data-v-64367a85]{display:flex;justify-content:center;align-items:center}.d-player-dialog .d-player-dialog-body[data-v-64367a85]{background-color:#000000e6;backdrop-filter:blur(5px);-webkit-backdrop-filter:blur(5px);border-radius:5px;color:#fff;min-width:200px;padding:0 0 10px}.d-player-dialog .d-player-dialog-body .d-player-dialog-title[data-v-64367a85]{position:relative;font-size:14px;font-weight:400;margin:0 0 10px;padding:12px 0;border-bottom:1px solid rgba(255,255,255,.15)}.d-player-dialog .d-player-dialog-body .d-player-dialog-title .icon-close[data-v-64367a85]{position:absolute;right:0;top:0;width:40px;height:40px;line-height:40px;text-align:center;cursor:pointer}.d-player-dialog .d-player-dialog-body .d-player-hotkey-panel[data-v-64367a85]{font-size:12px;color:#eee;padding-right:40px}.d-player-dialog .d-player-dialog-body .d-player-hotkey-panel .d-player-hotkey-panel-item[data-v-64367a85]{line-height:26px}.d-player-dialog .d-player-dialog-body .d-player-hotkey-panel .d-player-hotkey-panel-item span[data-v-64367a85]{text-align:center;display:inline-block;width:120px}.d-player-dialog .d-player-dialog-body .d-player-hotkey-panel .d-player-hotkey-panel-item span[data-v-64367a85]:nth-child(2){color:#999;width:160px}.d-player-dialog .d-player-dialog-body .d-player-filter-panel[data-v-64367a85]{width:320px;padding:0 20px}.d-player-dialog .d-player-dialog-body .d-player-filter-panel .d-player-filter-reset[data-v-64367a85]{cursor:pointer;margin-top:10px;padding:3px 20px;display:inline-block;border-radius:2px;font-size:12px;background:rgba(133,133,133,.5)}.d-player-dialog .d-player-dialog-body .d-player-filter-panel .d-player-filter-reset[data-v-64367a85]:hover{background:rgba(255,255,255,.3)}.d-player-dialog .d-player-dialog-body .d-player-filter-panel .d-player-filter-panel-item[data-v-64367a85]{height:32px;display:flex;align-items:center}.d-player-dialog .d-player-dialog-body .d-player-filter-panel .d-player-filter-panel-item .filter-panel-slider[data-v-64367a85]{width:100%}.d-player-dialog .d-player-dialog-body .d-player-filter-panel .d-player-filter-panel-item .filter-panel-slider[data-v-64367a85] .d-slider__runway{background-color:#999}.d-player-dialog .d-player-dialog-body .d-player-filter-panel .d-player-filter-panel-item .filter-panel-slider[data-v-64367a85] .d-slider__runway .d-slider__bar:before{width:8px;height:8px;box-shadow:0 0 0 5px #ffffff80}.d-player-dialog .d-player-dialog-body .d-player-filter-panel .d-player-filter-panel-item span[data-v-64367a85]{font-size:12px;display:block;width:80px;text-align:center}html[data-v-ad0cee4b],body[data-v-ad0cee4b],div[data-v-ad0cee4b],span[data-v-ad0cee4b],applet[data-v-ad0cee4b],object[data-v-ad0cee4b],iframe[data-v-ad0cee4b],h1[data-v-ad0cee4b],h2[data-v-ad0cee4b],h3[data-v-ad0cee4b],h4[data-v-ad0cee4b],h5[data-v-ad0cee4b],h6[data-v-ad0cee4b],p[data-v-ad0cee4b],blockquote[data-v-ad0cee4b],pre[data-v-ad0cee4b],a[data-v-ad0cee4b],abbr[data-v-ad0cee4b],acronym[data-v-ad0cee4b],address[data-v-ad0cee4b],big[data-v-ad0cee4b],cite[data-v-ad0cee4b],code[data-v-ad0cee4b],del[data-v-ad0cee4b],dfn[data-v-ad0cee4b],em[data-v-ad0cee4b],img[data-v-ad0cee4b],ins[data-v-ad0cee4b],kbd[data-v-ad0cee4b],q[data-v-ad0cee4b],s[data-v-ad0cee4b],samp[data-v-ad0cee4b],small[data-v-ad0cee4b],strike[data-v-ad0cee4b],strong[data-v-ad0cee4b],sub[data-v-ad0cee4b],sup[data-v-ad0cee4b],tt[data-v-ad0cee4b],var[data-v-ad0cee4b],b[data-v-ad0cee4b],u[data-v-ad0cee4b],i[data-v-ad0cee4b],center[data-v-ad0cee4b],dl[data-v-ad0cee4b],dt[data-v-ad0cee4b],dd[data-v-ad0cee4b],ol[data-v-ad0cee4b],ul[data-v-ad0cee4b],li[data-v-ad0cee4b],fieldset[data-v-ad0cee4b],form[data-v-ad0cee4b],label[data-v-ad0cee4b],legend[data-v-ad0cee4b],table[data-v-ad0cee4b],caption[data-v-ad0cee4b],tbody[data-v-ad0cee4b],tfoot[data-v-ad0cee4b],thead[data-v-ad0cee4b],tr[data-v-ad0cee4b],th[data-v-ad0cee4b],td[data-v-ad0cee4b],article[data-v-ad0cee4b],aside[data-v-ad0cee4b],canvas[data-v-ad0cee4b],details[data-v-ad0cee4b],embed[data-v-ad0cee4b],figure[data-v-ad0cee4b],figcaption[data-v-ad0cee4b],footer[data-v-ad0cee4b],header[data-v-ad0cee4b],hgroup[data-v-ad0cee4b],menu[data-v-ad0cee4b],nav[data-v-ad0cee4b],output[data-v-ad0cee4b],ruby[data-v-ad0cee4b],section[data-v-ad0cee4b],summary[data-v-ad0cee4b],time[data-v-ad0cee4b],mark[data-v-ad0cee4b],audio[data-v-ad0cee4b],video[data-v-ad0cee4b]{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article[data-v-ad0cee4b],aside[data-v-ad0cee4b],details[data-v-ad0cee4b],figcaption[data-v-ad0cee4b],figure[data-v-ad0cee4b],footer[data-v-ad0cee4b],header[data-v-ad0cee4b],hgroup[data-v-ad0cee4b],menu[data-v-ad0cee4b],nav[data-v-ad0cee4b],section[data-v-ad0cee4b]{display:block}body[data-v-ad0cee4b]{line-height:1}ol[data-v-ad0cee4b],ul[data-v-ad0cee4b]{list-style:none}blockquote[data-v-ad0cee4b],q[data-v-ad0cee4b]{quotes:none}blockquote[data-v-ad0cee4b]:before,blockquote[data-v-ad0cee4b]:after,q[data-v-ad0cee4b]:before,q[data-v-ad0cee4b]:after{content:\"\";content:none}table[data-v-ad0cee4b]{border-collapse:collapse;border-spacing:0}textarea[data-v-ad0cee4b]{font-family:inherit}.d-fade-in-enter-active[data-v-ad0cee4b],.d-fade-in-leave-active[data-v-ad0cee4b]{transition:.5s}.d-fade-in-enter-from[data-v-ad0cee4b],.d-fade-in-leave-to[data-v-ad0cee4b]{opacity:0}.d-scale-out-enter-active[data-v-ad0cee4b],.d-scale-out-leave-active[data-v-ad0cee4b]{transition:.3s}.d-scale-out-leave-to[data-v-ad0cee4b]{transform:scale(1.3);opacity:0}.rotateHover[data-v-ad0cee4b]{transition:.2s}.rotateHover[data-v-ad0cee4b]:hover{transform:rotate(90deg)}.rotating[data-v-ad0cee4b]{animation:rotating-ad0cee4b 2s linear infinite}@keyframes rotating-ad0cee4b{to{-webkit-transform:rotate(360deg)}}.iconfont[data-v-ad0cee4b]{display:inline-block}.d-flex-x[data-v-ad0cee4b],.d-flex-y[data-v-ad0cee4b],.d-flex-center[data-v-ad0cee4b]{display:flex}.d-flex-x[data-v-ad0cee4b]{align-items:center}.d-flex-y[data-v-ad0cee4b]{justify-content:center}.d-flex-center[data-v-ad0cee4b]{justify-content:center;align-items:center}.mr5[data-v-ad0cee4b]{margin-right:5px}.mr10[data-v-ad0cee4b]{margin-right:10px}.ml5[data-v-ad0cee4b]{margin-left:5px}.ml10[data-v-ad0cee4b]{margin-left:10px}.d-pointer[data-v-ad0cee4b]{cursor:pointer}.d-player-wrap[data-v-ad0cee4b]{--primary-color: var(--0c35f2da);width:var(--05990a2c);height:var(--d88d7cfe)}.d-player-wrap[data-v-ad0cee4b]{position:relative;overflow:hidden;background-color:#000}.d-player-wrap.web-full-screen[data-v-ad0cee4b]{z-index:9999999;position:fixed;left:0;top:0;width:100vw!important;height:100vh!important}.d-player-wrap .d-player-video[data-v-ad0cee4b]{position:relative;z-index:1;width:100%;height:100%}.d-player-wrap .d-player-video .d-player-video-poster[data-v-ad0cee4b]{position:absolute;height:100%;width:100%;top:0;left:0}.d-player-wrap .d-player-video .d-player-video-poster img[data-v-ad0cee4b]{display:block;width:100%;height:100%;object-fit:cover}.d-player-wrap .d-player-video .d-player-video-main[data-v-ad0cee4b]{width:100%;height:100%;transition:.2s}.d-player-wrap .d-player-video .d-player-video-main.video-mirror[data-v-ad0cee4b]{transform:rotateY(180deg)}.d-player-wrap .d-player-control[data-v-ad0cee4b]{transition:.1s;transform:translateY(40px);position:absolute;z-index:2;left:0;bottom:0;height:50px;width:100%;color:#fff}.d-player-wrap .d-player-control .d-control-progress[data-v-ad0cee4b]{width:100%;position:relative;height:10px;cursor:pointer}.d-player-wrap .d-player-control .d-control-progress .d-progress-bar[data-v-ad0cee4b]{position:absolute;left:0;right:0;bottom:0;width:100%;transition:height .1s;height:3px;z-index:1}.d-player-wrap .d-player-control .d-control-progress .d-progress-bar[data-v-ad0cee4b] .d-slider__runway{transition:height .1s;height:100%}.d-player-wrap .d-player-control .d-control-progress .d-progress-bar[data-v-ad0cee4b] .d-slider__runway .d-slider__bar:before{transform:translateY(-50%) scale(0)}.d-player-wrap .d-player-control .d-control-progress:hover .d-progress-bar[data-v-ad0cee4b]{height:100%}.d-player-wrap .d-player-control .d-control-progress:hover .d-progress-bar[data-v-ad0cee4b] .d-slider__bar:before{transform:translateY(-50%) scale(1)!important}.d-player-wrap .d-player-control .d-control-tool[data-v-ad0cee4b]{position:absolute;padding:0 10px;background:rgba(0,0,0,.8);display:flex;justify-content:space-between;align-items:center;top:10px;left:0;bottom:0;width:100%;box-sizing:border-box}.d-player-wrap .d-player-control .d-control-tool .d-tool-bar[data-v-ad0cee4b]{display:flex;height:100%}.d-player-wrap .d-player-control .d-control-tool .d-tool-bar .d-tool-item[data-v-ad0cee4b]{position:relative;height:100%;cursor:pointer;text-align:center;padding:0 8px;display:flex;align-items:center;font-size:13px}.d-player-wrap .d-player-control .d-control-tool .d-tool-bar .d-tool-item .d-tool-item-main[data-v-ad0cee4b]{position:absolute;white-space:nowrap;z-index:2;bottom:98%;left:50%;padding:6px 16px;box-sizing:border-box;display:none;background:rgba(0,0,0,.95);border-radius:5px;transform:translate(-50%)}.d-player-wrap .d-player-control .d-control-tool .d-tool-bar .d-tool-item:hover .d-tool-item-main[data-v-ad0cee4b]{display:flex}.d-player-wrap .d-player-control .d-control-tool .d-tool-time[data-v-ad0cee4b]{font-size:12px;color:#fff;font-weight:300}.d-player-wrap .d-player-control .d-control-tool .d-tool-time .total-time[data-v-ad0cee4b]{color:#fffc}.d-player-wrap .d-player-control .d-control-tool .volume-box[data-v-ad0cee4b]{height:160px;width:50px;display:flex;align-items:center;justify-content:center}.d-player-wrap .d-player-control .d-control-tool .volume-box .volume-main[data-v-ad0cee4b]{height:90%;display:flex;width:60px;flex-direction:column;align-items:center}.d-player-wrap .d-player-control .d-control-tool .volume-box .volume-main .volume-text-size[data-v-ad0cee4b]{margin-bottom:10px;font-size:12px;font-weight:400}.d-player-wrap .d-player-control .d-control-tool .volume-box .volume-main.is-muted[data-v-ad0cee4b] .d-slider__bar{height:0!important}.d-player-wrap .d-player-control .d-control-tool .speed-main[data-v-ad0cee4b]{padding:0 10px}.d-player-wrap .d-player-control .d-control-tool .speed-main li[data-v-ad0cee4b]{cursor:pointer;line-height:34px;font-size:12px;color:#fff}.d-player-wrap .d-player-control .d-control-tool .speed-main li[data-v-ad0cee4b]:hover{opacity:.8}.d-player-wrap .d-player-control .d-control-tool .speed-main li.speed-active[data-v-ad0cee4b]{color:rgba(var(--primary-color),1);font-weight:700}.d-player-wrap.d-player-wrap-hover .d-player-control[data-v-ad0cee4b]{transform:translateY(0)}.d-player-state[data-v-ad0cee4b],.d-player-input[data-v-ad0cee4b]{position:absolute;left:0;top:0;right:0;bottom:40px;display:flex;justify-content:center;align-items:center;overflow:hidden;z-index:1}.d-player-input[data-v-ad0cee4b]{width:100%;border:none;opacity:0;cursor:default}.d-play-btn[data-v-ad0cee4b]{width:90px;height:90px;color:#fff;display:flex;align-items:center;justify-content:center;background-color:#000000b3;border-radius:50%}.d-player-lightoff[data-v-ad0cee4b]{position:fixed;left:0;top:0;width:100vw;height:100vh;background-color:#000000e6}.is-lightoff[data-v-ad0cee4b]{z-index:999998}\n","<template>\r\n  <div class=\"chunk-upload-demo\">\r\n    <h1>分片上传演示</h1>\r\n    \r\n    <!-- 使用ChunkUploader组件 -->\r\n    <ChunkUploader \r\n      :maxParallelFiles=\"3\"\r\n      :maxParallelChunks=\"3\"\r\n      :chunkSize=\"2 * 1024 * 1024\"\r\n      @upload-complete=\"handleUploadComplete\"\r\n      @all-completed=\"handleAllCompleted\"\r\n    />\r\n    \r\n    <!-- 上传完成的文件列表 -->\r\n    <div class=\"completed-files\" v-if=\"completedFiles.length > 0\">\r\n      <h2>上传完成的文件</h2>\r\n      <ul>\r\n        <li v-for=\"(file, index) in completedFiles\" :key=\"index\">\r\n          {{ file.fileName }} ({{ formatFileSize(file.size) }}) - MD5: {{ file.md5 }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ChunkUploader from '../components/ChunkUploader.vue'\r\n\r\nexport default {\r\n  name: 'ChunkUploadDemo',\r\n  components: {\r\n    ChunkUploader\r\n  },\r\n  data() {\r\n    return {\r\n      completedFiles: []\r\n    }\r\n  },\r\n  methods: {\r\n    handleUploadComplete(fileInfo) {\r\n      this.completedFiles.push(fileInfo)\r\n      console.log('文件上传完成:', fileInfo)\r\n    },\r\n    \r\n    handleAllCompleted() {\r\n      console.log('所有文件上传完成')\r\n    },\r\n    \r\n    formatFileSize(bytes) {\r\n      if (bytes < 1024) return bytes + ' B'\r\n      else if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(2) + ' KB'\r\n      else if (bytes < 1024 * 1024 * 1024) return (bytes / (1024 * 1024)).toFixed(2) + ' MB'\r\n      else return (bytes / (1024 * 1024 * 1024)).toFixed(2) + ' GB'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chunk-upload-demo {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.completed-files {\r\n  margin-top: 30px;\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 4px;\r\n}\r\n\r\n.completed-files h2 {\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n}\r\n\r\nul {\r\n  padding-left: 20px;\r\n}\r\n\r\nli {\r\n  margin-bottom: 5px;\r\n}\r\n</style>\r\n"],"names":[],"sourceRoot":""}